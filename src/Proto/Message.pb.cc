// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ProtoMsg {
class LoginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest>
      _instance;
} _LoginRequest_default_instance_;
class LoginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LoginResponse>
      _instance;
} _LoginResponse_default_instance_;
class LogoutRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogoutRequest>
      _instance;
} _LogoutRequest_default_instance_;
class LogoutResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LogoutResponse>
      _instance;
} _LogoutResponse_default_instance_;
class RegisterResquestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResquest>
      _instance;
} _RegisterResquest_default_instance_;
class RegisterResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponse>
      _instance;
} _RegisterResponse_default_instance_;
class MessageNofificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MessageNofification>
      _instance;
} _MessageNofification_default_instance_;
class WelcomeNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WelcomeNotification>
      _instance;
} _WelcomeNotification_default_instance_;
class EchoRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EchoRequest>
      _instance;
} _EchoRequest_default_instance_;
class OtherClientNotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OtherClientNotification>
      _instance;
} _OtherClientNotification_default_instance_;
class CubeOperateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CubeOperateRequest>
      _instance;
} _CubeOperateRequest_default_instance_;
class CubeOperateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CubeOperateResponse>
      _instance;
} _CubeOperateResponse_default_instance_;
class CubeCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CubeCreateResponse>
      _instance;
} _CubeCreateResponse_default_instance_;
class CubeDeleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<CubeDeleteResponse>
      _instance;
} _CubeDeleteResponse_default_instance_;
class SceneChangeCompleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneChangeCompleteRequest>
      _instance;
} _SceneChangeCompleteRequest_default_instance_;
class SceneChangeCompleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SceneChangeCompleteResponse>
      _instance;
} _SceneChangeCompleteResponse_default_instance_;
class MatchBeginRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchBeginRequest>
      _instance;
} _MatchBeginRequest_default_instance_;
class MatchBeginResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchBeginResponse>
      _instance;
} _MatchBeginResponse_default_instance_;
class MatchCancelRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchCancelRequest>
      _instance;
} _MatchCancelRequest_default_instance_;
class MatchCancelResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchCancelResponse>
      _instance;
} _MatchCancelResponse_default_instance_;
class MatchCompleteRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchCompleteRequest>
      _instance;
} _MatchCompleteRequest_default_instance_;
class MatchCompleteResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MatchCompleteResponse>
      _instance;
} _MatchCompleteResponse_default_instance_;
class PlaneOperateRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneOperateRequest>
      _instance;
} _PlaneOperateRequest_default_instance_;
class PlaneOperateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneOperateResponse>
      _instance;
} _PlaneOperateResponse_default_instance_;
class WaveCreateResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<WaveCreateResponse>
      _instance;
} _WaveCreateResponse_default_instance_;
class ExitSceneRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitSceneRequest>
      _instance;
} _ExitSceneRequest_default_instance_;
class ExitSceneResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ExitSceneResponse>
      _instance;
} _ExitSceneResponse_default_instance_;
class TimeSyncRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeSyncRequest>
      _instance;
} _TimeSyncRequest_default_instance_;
class TimeSyncResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TimeSyncResponse>
      _instance;
} _TimeSyncResponse_default_instance_;
class PlaneDestroyRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneDestroyRequest>
      _instance;
} _PlaneDestroyRequest_default_instance_;
class PlaneDestroyResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlaneDestroyResponse>
      _instance;
} _PlaneDestroyResponse_default_instance_;
class RequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Request>
      _instance;
} _Request_default_instance_;
class ResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Response>
      _instance;
} _Response_default_instance_;
class NotificationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Notification>
      _instance;
} _Notification_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Command>
      _instance;
} _Command_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Message>
      _instance;
} _Message_default_instance_;
}  // namespace ProtoMsg
namespace protobuf_Message_2eproto {
void InitDefaultsLoginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_LoginRequest_default_instance_;
    new (ptr) ::ProtoMsg::LoginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::LoginRequest::InitAsDefaultInstance();
}

void InitDefaultsLoginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginRequestImpl);
}

void InitDefaultsLoginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_LoginResponse_default_instance_;
    new (ptr) ::ProtoMsg::LoginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::LoginResponse::InitAsDefaultInstance();
}

void InitDefaultsLoginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLoginResponseImpl);
}

void InitDefaultsLogoutRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_LogoutRequest_default_instance_;
    new (ptr) ::ProtoMsg::LogoutRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::LogoutRequest::InitAsDefaultInstance();
}

void InitDefaultsLogoutRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogoutRequestImpl);
}

void InitDefaultsLogoutResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_LogoutResponse_default_instance_;
    new (ptr) ::ProtoMsg::LogoutResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::LogoutResponse::InitAsDefaultInstance();
}

void InitDefaultsLogoutResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLogoutResponseImpl);
}

void InitDefaultsRegisterResquestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_RegisterResquest_default_instance_;
    new (ptr) ::ProtoMsg::RegisterResquest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::RegisterResquest::InitAsDefaultInstance();
}

void InitDefaultsRegisterResquest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterResquestImpl);
}

void InitDefaultsRegisterResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_RegisterResponse_default_instance_;
    new (ptr) ::ProtoMsg::RegisterResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::RegisterResponse::InitAsDefaultInstance();
}

void InitDefaultsRegisterResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRegisterResponseImpl);
}

void InitDefaultsMessageNofificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MessageNofification_default_instance_;
    new (ptr) ::ProtoMsg::MessageNofification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MessageNofification::InitAsDefaultInstance();
}

void InitDefaultsMessageNofification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageNofificationImpl);
}

void InitDefaultsWelcomeNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_WelcomeNotification_default_instance_;
    new (ptr) ::ProtoMsg::WelcomeNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::WelcomeNotification::InitAsDefaultInstance();
}

void InitDefaultsWelcomeNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWelcomeNotificationImpl);
}

void InitDefaultsEchoRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_EchoRequest_default_instance_;
    new (ptr) ::ProtoMsg::EchoRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::EchoRequest::InitAsDefaultInstance();
}

void InitDefaultsEchoRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEchoRequestImpl);
}

void InitDefaultsOtherClientNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_OtherClientNotification_default_instance_;
    new (ptr) ::ProtoMsg::OtherClientNotification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::OtherClientNotification::InitAsDefaultInstance();
}

void InitDefaultsOtherClientNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOtherClientNotificationImpl);
}

void InitDefaultsCubeOperateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_CubeOperateRequest_default_instance_;
    new (ptr) ::ProtoMsg::CubeOperateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::CubeOperateRequest::InitAsDefaultInstance();
}

void InitDefaultsCubeOperateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCubeOperateRequestImpl);
}

void InitDefaultsCubeOperateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_CubeOperateResponse_default_instance_;
    new (ptr) ::ProtoMsg::CubeOperateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::CubeOperateResponse::InitAsDefaultInstance();
}

void InitDefaultsCubeOperateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCubeOperateResponseImpl);
}

void InitDefaultsCubeCreateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_CubeCreateResponse_default_instance_;
    new (ptr) ::ProtoMsg::CubeCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::CubeCreateResponse::InitAsDefaultInstance();
}

void InitDefaultsCubeCreateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCubeCreateResponseImpl);
}

void InitDefaultsCubeDeleteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_CubeDeleteResponse_default_instance_;
    new (ptr) ::ProtoMsg::CubeDeleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::CubeDeleteResponse::InitAsDefaultInstance();
}

void InitDefaultsCubeDeleteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCubeDeleteResponseImpl);
}

void InitDefaultsSceneChangeCompleteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_SceneChangeCompleteRequest_default_instance_;
    new (ptr) ::ProtoMsg::SceneChangeCompleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::SceneChangeCompleteRequest::InitAsDefaultInstance();
}

void InitDefaultsSceneChangeCompleteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSceneChangeCompleteRequestImpl);
}

void InitDefaultsSceneChangeCompleteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_SceneChangeCompleteResponse_default_instance_;
    new (ptr) ::ProtoMsg::SceneChangeCompleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::SceneChangeCompleteResponse::InitAsDefaultInstance();
}

void InitDefaultsSceneChangeCompleteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSceneChangeCompleteResponseImpl);
}

void InitDefaultsMatchBeginRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MatchBeginRequest_default_instance_;
    new (ptr) ::ProtoMsg::MatchBeginRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MatchBeginRequest::InitAsDefaultInstance();
}

void InitDefaultsMatchBeginRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchBeginRequestImpl);
}

void InitDefaultsMatchBeginResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MatchBeginResponse_default_instance_;
    new (ptr) ::ProtoMsg::MatchBeginResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MatchBeginResponse::InitAsDefaultInstance();
}

void InitDefaultsMatchBeginResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchBeginResponseImpl);
}

void InitDefaultsMatchCancelRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MatchCancelRequest_default_instance_;
    new (ptr) ::ProtoMsg::MatchCancelRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MatchCancelRequest::InitAsDefaultInstance();
}

void InitDefaultsMatchCancelRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchCancelRequestImpl);
}

void InitDefaultsMatchCancelResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MatchCancelResponse_default_instance_;
    new (ptr) ::ProtoMsg::MatchCancelResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MatchCancelResponse::InitAsDefaultInstance();
}

void InitDefaultsMatchCancelResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchCancelResponseImpl);
}

void InitDefaultsMatchCompleteRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MatchCompleteRequest_default_instance_;
    new (ptr) ::ProtoMsg::MatchCompleteRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MatchCompleteRequest::InitAsDefaultInstance();
}

void InitDefaultsMatchCompleteRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchCompleteRequestImpl);
}

void InitDefaultsMatchCompleteResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_MatchCompleteResponse_default_instance_;
    new (ptr) ::ProtoMsg::MatchCompleteResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::MatchCompleteResponse::InitAsDefaultInstance();
}

void InitDefaultsMatchCompleteResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMatchCompleteResponseImpl);
}

void InitDefaultsPlaneOperateRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_PlaneOperateRequest_default_instance_;
    new (ptr) ::ProtoMsg::PlaneOperateRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::PlaneOperateRequest::InitAsDefaultInstance();
}

void InitDefaultsPlaneOperateRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaneOperateRequestImpl);
}

void InitDefaultsPlaneOperateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_PlaneOperateResponse_default_instance_;
    new (ptr) ::ProtoMsg::PlaneOperateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::PlaneOperateResponse::InitAsDefaultInstance();
}

void InitDefaultsPlaneOperateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaneOperateResponseImpl);
}

void InitDefaultsWaveCreateResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_WaveCreateResponse_default_instance_;
    new (ptr) ::ProtoMsg::WaveCreateResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::WaveCreateResponse::InitAsDefaultInstance();
}

void InitDefaultsWaveCreateResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsWaveCreateResponseImpl);
}

void InitDefaultsExitSceneRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_ExitSceneRequest_default_instance_;
    new (ptr) ::ProtoMsg::ExitSceneRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::ExitSceneRequest::InitAsDefaultInstance();
}

void InitDefaultsExitSceneRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExitSceneRequestImpl);
}

void InitDefaultsExitSceneResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_ExitSceneResponse_default_instance_;
    new (ptr) ::ProtoMsg::ExitSceneResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::ExitSceneResponse::InitAsDefaultInstance();
}

void InitDefaultsExitSceneResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsExitSceneResponseImpl);
}

void InitDefaultsTimeSyncRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_TimeSyncRequest_default_instance_;
    new (ptr) ::ProtoMsg::TimeSyncRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::TimeSyncRequest::InitAsDefaultInstance();
}

void InitDefaultsTimeSyncRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeSyncRequestImpl);
}

void InitDefaultsTimeSyncResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_TimeSyncResponse_default_instance_;
    new (ptr) ::ProtoMsg::TimeSyncResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::TimeSyncResponse::InitAsDefaultInstance();
}

void InitDefaultsTimeSyncResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTimeSyncResponseImpl);
}

void InitDefaultsPlaneDestroyRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_PlaneDestroyRequest_default_instance_;
    new (ptr) ::ProtoMsg::PlaneDestroyRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::PlaneDestroyRequest::InitAsDefaultInstance();
}

void InitDefaultsPlaneDestroyRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaneDestroyRequestImpl);
}

void InitDefaultsPlaneDestroyResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_PlaneDestroyResponse_default_instance_;
    new (ptr) ::ProtoMsg::PlaneDestroyResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::PlaneDestroyResponse::InitAsDefaultInstance();
}

void InitDefaultsPlaneDestroyResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlaneDestroyResponseImpl);
}

void InitDefaultsRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Message_2eproto::InitDefaultsLoginRequest();
  protobuf_Message_2eproto::InitDefaultsLogoutRequest();
  protobuf_Message_2eproto::InitDefaultsRegisterResquest();
  protobuf_Message_2eproto::InitDefaultsEchoRequest();
  protobuf_Message_2eproto::InitDefaultsCubeOperateRequest();
  protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteRequest();
  protobuf_Message_2eproto::InitDefaultsMatchBeginRequest();
  protobuf_Message_2eproto::InitDefaultsMatchCompleteRequest();
  protobuf_Message_2eproto::InitDefaultsMatchCancelRequest();
  protobuf_Message_2eproto::InitDefaultsPlaneOperateRequest();
  protobuf_Message_2eproto::InitDefaultsExitSceneRequest();
  protobuf_Message_2eproto::InitDefaultsTimeSyncRequest();
  protobuf_Message_2eproto::InitDefaultsPlaneDestroyRequest();
  {
    void* ptr = &::ProtoMsg::_Request_default_instance_;
    new (ptr) ::ProtoMsg::Request();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::Request::InitAsDefaultInstance();
}

void InitDefaultsRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRequestImpl);
}

void InitDefaultsResponseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Message_2eproto::InitDefaultsLoginResponse();
  protobuf_Message_2eproto::InitDefaultsLogoutResponse();
  protobuf_Message_2eproto::InitDefaultsRegisterResponse();
  protobuf_Message_2eproto::InitDefaultsCubeOperateResponse();
  protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteResponse();
  protobuf_Message_2eproto::InitDefaultsCubeCreateResponse();
  protobuf_Message_2eproto::InitDefaultsCubeDeleteResponse();
  protobuf_Message_2eproto::InitDefaultsMatchBeginResponse();
  protobuf_Message_2eproto::InitDefaultsMatchCompleteResponse();
  protobuf_Message_2eproto::InitDefaultsMatchCancelResponse();
  protobuf_Message_2eproto::InitDefaultsPlaneOperateResponse();
  protobuf_Message_2eproto::InitDefaultsWaveCreateResponse();
  protobuf_Message_2eproto::InitDefaultsExitSceneResponse();
  protobuf_Message_2eproto::InitDefaultsTimeSyncResponse();
  protobuf_Message_2eproto::InitDefaultsPlaneDestroyResponse();
  {
    void* ptr = &::ProtoMsg::_Response_default_instance_;
    new (ptr) ::ProtoMsg::Response();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::Response::InitAsDefaultInstance();
}

void InitDefaultsResponse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsResponseImpl);
}

void InitDefaultsNotificationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Message_2eproto::InitDefaultsMessageNofification();
  protobuf_Message_2eproto::InitDefaultsWelcomeNotification();
  protobuf_Message_2eproto::InitDefaultsOtherClientNotification();
  {
    void* ptr = &::ProtoMsg::_Notification_default_instance_;
    new (ptr) ::ProtoMsg::Notification();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::Notification::InitAsDefaultInstance();
}

void InitDefaultsNotification() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsNotificationImpl);
}

void InitDefaultsCommandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtoMsg::_Command_default_instance_;
    new (ptr) ::ProtoMsg::Command();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::Command::InitAsDefaultInstance();
}

void InitDefaultsCommand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCommandImpl);
}

void InitDefaultsMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_Message_2eproto::InitDefaultsRequest();
  protobuf_Message_2eproto::InitDefaultsResponse();
  protobuf_Message_2eproto::InitDefaultsNotification();
  {
    void* ptr = &::ProtoMsg::_Message_default_instance_;
    new (ptr) ::ProtoMsg::Message();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::Message::InitAsDefaultInstance();
}

void InitDefaultsMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMessageImpl);
}

::google::protobuf::Metadata file_level_metadata[36];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LoginRequest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LoginRequest, password_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LoginResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LogoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LogoutRequest, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::LogoutResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResquest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResquest, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResquest, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResquest, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResquest, phone_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::RegisterResponse, result_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MessageNofification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WelcomeNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::EchoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::EchoRequest, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::OtherClientNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::OtherClientNotification, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, movement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, turn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateRequest, angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, movement_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, turn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeOperateResponse, angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeCreateResponse, angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeDeleteResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::CubeDeleteResponse, user_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::SceneChangeCompleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::SceneChangeCompleteRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::SceneChangeCompleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::SceneChangeCompleteResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchBeginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchBeginRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchBeginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchBeginResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCancelRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCancelRequest, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCancelResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCancelResponse, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteRequest, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteRequest, other_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteRequest, user_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteResponse, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteResponse, other_user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::MatchCompleteResponse, user_count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, fire_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, index_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateRequest, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, horizontal_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, vertical_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, fire_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, user_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, index_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneOperateResponse, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WaveCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WaveCreateResponse, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WaveCreateResponse, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WaveCreateResponse, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WaveCreateResponse, angel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::WaveCreateResponse, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::ExitSceneRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::ExitSceneResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::TimeSyncRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::TimeSyncResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneDestroyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneDestroyRequest, index_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneDestroyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PlaneDestroyResponse, index_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, logout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, register__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, echo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, cube_operate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, scene_change_complete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, match_begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, match_complete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, match_cancel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, plane_operate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, exit_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, time_sync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Request, plane_destroy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, login_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, logout_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, register__),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, cube_operate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, scene_change_complete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, cube_create_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, cube_delete_response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, match_begin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, match_complete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, match_cancel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, plane_operate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, wave_create_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, exit_scene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, time_sync_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Response, plane_destroy_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Notification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Notification, message_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Notification, welcome_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Notification, other_client_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, msg_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, timestamp_ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, response_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::Message, notification_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtoMsg::LoginRequest)},
  { 7, -1, sizeof(::ProtoMsg::LoginResponse)},
  { 13, -1, sizeof(::ProtoMsg::LogoutRequest)},
  { 19, -1, sizeof(::ProtoMsg::LogoutResponse)},
  { 25, -1, sizeof(::ProtoMsg::RegisterResquest)},
  { 34, -1, sizeof(::ProtoMsg::RegisterResponse)},
  { 40, -1, sizeof(::ProtoMsg::MessageNofification)},
  { 45, -1, sizeof(::ProtoMsg::WelcomeNotification)},
  { 50, -1, sizeof(::ProtoMsg::EchoRequest)},
  { 56, -1, sizeof(::ProtoMsg::OtherClientNotification)},
  { 62, -1, sizeof(::ProtoMsg::CubeOperateRequest)},
  { 75, -1, sizeof(::ProtoMsg::CubeOperateResponse)},
  { 88, -1, sizeof(::ProtoMsg::CubeCreateResponse)},
  { 99, -1, sizeof(::ProtoMsg::CubeDeleteResponse)},
  { 106, -1, sizeof(::ProtoMsg::SceneChangeCompleteRequest)},
  { 112, -1, sizeof(::ProtoMsg::SceneChangeCompleteResponse)},
  { 118, -1, sizeof(::ProtoMsg::MatchBeginRequest)},
  { 124, -1, sizeof(::ProtoMsg::MatchBeginResponse)},
  { 130, -1, sizeof(::ProtoMsg::MatchCancelRequest)},
  { 136, -1, sizeof(::ProtoMsg::MatchCancelResponse)},
  { 142, -1, sizeof(::ProtoMsg::MatchCompleteRequest)},
  { 150, -1, sizeof(::ProtoMsg::MatchCompleteResponse)},
  { 158, -1, sizeof(::ProtoMsg::PlaneOperateRequest)},
  { 171, -1, sizeof(::ProtoMsg::PlaneOperateResponse)},
  { 184, -1, sizeof(::ProtoMsg::WaveCreateResponse)},
  { 194, -1, sizeof(::ProtoMsg::ExitSceneRequest)},
  { 199, -1, sizeof(::ProtoMsg::ExitSceneResponse)},
  { 204, -1, sizeof(::ProtoMsg::TimeSyncRequest)},
  { 209, -1, sizeof(::ProtoMsg::TimeSyncResponse)},
  { 214, -1, sizeof(::ProtoMsg::PlaneDestroyRequest)},
  { 220, -1, sizeof(::ProtoMsg::PlaneDestroyResponse)},
  { 226, -1, sizeof(::ProtoMsg::Request)},
  { 244, -1, sizeof(::ProtoMsg::Response)},
  { 264, -1, sizeof(::ProtoMsg::Notification)},
  { 272, -1, sizeof(::ProtoMsg::Command)},
  { 277, -1, sizeof(::ProtoMsg::Message)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_LoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_LogoutRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_LogoutResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_RegisterResquest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_RegisterResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MessageNofification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_WelcomeNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_EchoRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_OtherClientNotification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_CubeOperateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_CubeOperateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_CubeCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_CubeDeleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_SceneChangeCompleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_SceneChangeCompleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MatchBeginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MatchBeginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MatchCancelRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MatchCancelResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MatchCompleteRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_MatchCompleteResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_PlaneOperateRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_PlaneOperateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_WaveCreateResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_ExitSceneRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_ExitSceneResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_TimeSyncRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_TimeSyncResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_PlaneDestroyRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_PlaneDestroyResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_Request_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_Response_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_Notification_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_Command_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_Message_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "Message.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 36);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rMessage.proto\022\010ProtoMsg\".\n\014LoginReques"
      "t\022\014\n\004name\030\001 \001(\t\022\020\n\010password\030\002 \001(\t\"\037\n\rLog"
      "inResponse\022\016\n\006result\030\001 \001(\007\"\035\n\rLogoutRequ"
      "est\022\014\n\004name\030\001 \001(\t\" \n\016LogoutResponse\022\016\n\006r"
      "esult\030\001 \001(\007\"P\n\020RegisterResquest\022\014\n\004name\030"
      "\001 \001(\t\022\020\n\010password\030\002 \001(\t\022\r\n\005email\030\003 \001(\t\022\r"
      "\n\005phone\030\004 \001(\t\"\"\n\020RegisterResponse\022\016\n\006res"
      "ult\030\001 \001(\007\"\025\n\023MessageNofification\"\025\n\023Welc"
      "omeNotification\"\032\n\013EchoRequest\022\013\n\003msg\030\001 "
      "\001(\t\"&\n\027OtherClientNotification\022\013\n\003msg\030\001 "
      "\001(\t\"\201\001\n\022CubeOperateRequest\022\020\n\010movement\030\001"
      " \001(\002\022\014\n\004turn\030\002 \001(\002\022\n\n\002id\030\003 \001(\007\022\t\n\001x\030\004 \001("
      "\002\022\t\n\001y\030\005 \001(\002\022\t\n\001z\030\006 \001(\002\022\017\n\007user_id\030\007 \001(\007"
      "\022\r\n\005angle\030\010 \001(\002\"\202\001\n\023CubeOperateResponse\022"
      "\020\n\010movement\030\001 \001(\002\022\014\n\004turn\030\002 \001(\002\022\n\n\002id\030\003 "
      "\001(\007\022\t\n\001x\030\004 \001(\002\022\t\n\001y\030\005 \001(\002\022\t\n\001z\030\006 \001(\002\022\017\n\007"
      "user_id\030\007 \001(\007\022\r\n\005angle\030\010 \001(\002\"a\n\022CubeCrea"
      "teResponse\022\t\n\001x\030\001 \001(\002\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 "
      "\001(\002\022\017\n\007user_id\030\004 \001(\007\022\n\n\002id\030\005 \001(\007\022\r\n\005angl"
      "e\030\006 \001(\002\"1\n\022CubeDeleteResponse\022\n\n\002id\030\001 \001("
      "\007\022\017\n\007user_id\030\002 \001(\007\"(\n\032SceneChangeComplet"
      "eRequest\022\n\n\002id\030\001 \001(\007\")\n\033SceneChangeCompl"
      "eteResponse\022\n\n\002id\030\001 \001(\007\"\037\n\021MatchBeginReq"
      "uest\022\n\n\002id\030\001 \001(\007\" \n\022MatchBeginResponse\022\n"
      "\n\002id\030\001 \001(\007\" \n\022MatchCancelRequest\022\n\n\002id\030\001"
      " \001(\007\"!\n\023MatchCancelResponse\022\n\n\002id\030\001 \001(\007\""
      "M\n\024MatchCompleteRequest\022\n\n\002id\030\001 \001(\007\022\025\n\ro"
      "ther_user_id\030\002 \001(\007\022\022\n\nuser_count\030\003 \001(\007\"N"
      "\n\025MatchCompleteResponse\022\n\n\002id\030\001 \001(\007\022\025\n\ro"
      "ther_user_id\030\002 \001(\007\022\022\n\nuser_count\030\003 \001(\007\"\215"
      "\001\n\023PlaneOperateRequest\022\022\n\nhorizontal\030\001 \001"
      "(\002\022\020\n\010vertical\030\002 \001(\002\022\014\n\004fire\030\003 \001(\007\022\017\n\007us"
      "er_id\030\004 \001(\007\022\020\n\010index_id\030\005 \001(\007\022\t\n\001x\030\006 \001(\002"
      "\022\t\n\001y\030\007 \001(\002\022\t\n\001z\030\010 \001(\002\"\216\001\n\024PlaneOperateR"
      "esponse\022\022\n\nhorizontal\030\001 \001(\002\022\020\n\010vertical\030"
      "\002 \001(\002\022\014\n\004fire\030\003 \001(\007\022\017\n\007user_id\030\004 \001(\007\022\020\n\010"
      "index_id\030\005 \001(\007\022\t\n\001x\030\006 \001(\002\022\t\n\001y\030\007 \001(\002\022\t\n\001"
      "z\030\010 \001(\002\"R\n\022WaveCreateResponse\022\t\n\001x\030\001 \001(\002"
      "\022\t\n\001y\030\002 \001(\002\022\t\n\001z\030\003 \001(\002\022\r\n\005angel\030\004 \001(\002\022\014\n"
      "\004type\030\005 \001(\007\"\022\n\020ExitSceneRequest\"\023\n\021ExitS"
      "ceneResponse\"\021\n\017TimeSyncRequest\"\022\n\020TimeS"
      "yncResponse\"\'\n\023PlaneDestroyRequest\022\020\n\010in"
      "dex_id\030\001 \001(\007\"(\n\024PlaneDestroyResponse\022\020\n\010"
      "index_id\030\001 \001(\007\"\215\005\n\007Request\022%\n\005login\030\001 \001("
      "\0132\026.ProtoMsg.LoginRequest\022\'\n\006logout\030\002 \001("
      "\0132\027.ProtoMsg.LogoutRequest\022,\n\010register\030\003"
      " \001(\0132\032.ProtoMsg.RegisterResquest\022#\n\004echo"
      "\030\004 \001(\0132\025.ProtoMsg.EchoRequest\0222\n\014cube_op"
      "erate\030\005 \001(\0132\034.ProtoMsg.CubeOperateReques"
      "t\022C\n\025scene_change_complete\030\006 \001(\0132$.Proto"
      "Msg.SceneChangeCompleteRequest\0220\n\013match_"
      "begin\030\007 \001(\0132\033.ProtoMsg.MatchBeginRequest"
      "\0226\n\016match_complete\030\010 \001(\0132\036.ProtoMsg.Matc"
      "hCompleteRequest\0222\n\014match_cancel\030\t \001(\0132\034"
      ".ProtoMsg.MatchCancelRequest\0224\n\rplane_op"
      "erate\030\n \001(\0132\035.ProtoMsg.PlaneOperateReque"
      "st\022.\n\nexit_scene\030\013 \001(\0132\032.ProtoMsg.ExitSc"
      "eneRequest\022,\n\ttime_sync\030\014 \001(\0132\031.ProtoMsg"
      ".TimeSyncRequest\0224\n\rplane_destroy\030\r \001(\0132"
      "\035.ProtoMsg.PlaneDestroyRequest\"\237\006\n\010Respo"
      "nse\022&\n\005login\030\001 \001(\0132\027.ProtoMsg.LoginRespo"
      "nse\022(\n\006logout\030\002 \001(\0132\030.ProtoMsg.LogoutRes"
      "ponse\022,\n\010register\030\003 \001(\0132\032.ProtoMsg.Regis"
      "terResponse\0223\n\014cube_operate\030\004 \001(\0132\035.Prot"
      "oMsg.CubeOperateResponse\022D\n\025scene_change"
      "_complete\030\005 \001(\0132%.ProtoMsg.SceneChangeCo"
      "mpleteResponse\022:\n\024cube_create_response\030\006"
      " \001(\0132\034.ProtoMsg.CubeCreateResponse\022:\n\024cu"
      "be_delete_Response\030\007 \001(\0132\034.ProtoMsg.Cube"
      "DeleteResponse\0221\n\013match_begin\030\010 \001(\0132\034.Pr"
      "otoMsg.MatchBeginResponse\0227\n\016match_compl"
      "ete\030\t \001(\0132\037.ProtoMsg.MatchCompleteRespon"
      "se\0223\n\014match_cancel\030\n \001(\0132\035.ProtoMsg.Matc"
      "hCancelResponse\0225\n\rplane_operate\030\013 \001(\0132\036"
      ".ProtoMsg.PlaneOperateResponse\0221\n\013wave_c"
      "reate\030\014 \001(\0132\034.ProtoMsg.WaveCreateRespons"
      "e\022/\n\nexit_scene\030\r \001(\0132\033.ProtoMsg.ExitSce"
      "neResponse\022-\n\ttime_sync\030\016 \001(\0132\032.ProtoMsg"
      ".TimeSyncResponse\0225\n\rplane_destroy\030\017 \001(\013"
      "2\036.ProtoMsg.PlaneDestroyResponse\"\247\001\n\014Not"
      "ification\022.\n\007message\030\001 \001(\0132\035.ProtoMsg.Me"
      "ssageNofification\022.\n\007welcome\030\002 \001(\0132\035.Pro"
      "toMsg.WelcomeNotification\0227\n\014other_clien"
      "t\030\003 \001(\0132!.ProtoMsg.OtherClientNotificati"
      "on\"\t\n\007Command\"\356\001\n\007Message\022\037\n\010msg_type\030\001 "
      "\001(\0162\r.ProtoMsg.MSG\022\016\n\006userid\030\002 \001(\007\022\020\n\010se"
      "quence\030\003 \001(\007\022\022\n\nsession_id\030\004 \001(\007\022\024\n\014time"
      "stamp_ms\030\005 \001(\003\022\"\n\007request\030\006 \001(\0132\021.ProtoM"
      "sg.Request\022$\n\010response\030\007 \001(\0132\022.ProtoMsg."
      "Response\022,\n\014notification\030\010 \001(\0132\026.ProtoMs"
      "g.Notification*\220\007\n\003MSG\022\n\n\006Unknow\020\000\022\021\n\rLo"
      "gin_Request\020\001\022\022\n\016Login_Response\020\002\022\022\n\016Log"
      "out_Request\020\003\022\023\n\017Logout_Response\020\004\022\024\n\020Re"
      "gister_Request\020\005\022\025\n\021Register_Response\020\006\022"
      "\025\n\021Keepalive_Request\020\007\022\026\n\022Keepalive_Resp"
      "onse\020\010\022\030\n\024Send_Message_Request\020\t\022\031\n\025Send"
      "_Message_Response\020\n\022\030\n\024Message_Nofificat"
      "ion\020\013\022\030\n\024Welcome_Notification\020\014\022\020\n\014Echo_"
      "Request\020\r\022\035\n\031Other_Client_Notification\020\016"
      "\022\030\n\024Cube_Operate_Request\020\017\022\031\n\025Cube_Opera"
      "te_Response\020\020\022!\n\035Scene_Change_Complete_R"
      "equest\020\021\022\"\n\036Scene_Change_Complete_Respon"
      "se\020\022\022\030\n\024Cube_Create_Response\020\023\022\030\n\024Cube_D"
      "elete_Response\020\024\022\027\n\023Match_Begin_Request\020"
      "\025\022\030\n\024Match_Begin_Response\020\026\022\032\n\026Match_Com"
      "plete_Request\020\027\022\033\n\027Match_Complete_Respon"
      "se\020\030\022\030\n\024Match_Cancel_Request\020\031\022\031\n\025Match_"
      "Cancel_Response\020\032\022\031\n\025Plane_Operate_Reque"
      "st\020\033\022\032\n\026Plane_Operate_Response\020\034\022\030\n\024Wave"
      "_Create_Response\020\035\022\026\n\022Exit_Scene_Request"
      "\020\036\022\027\n\023Exit_Scene_Response\020\037\022\025\n\021Time_Sync"
      "_Request\020 \022\026\n\022Time_Sync_Response\020!\022\031\n\025Pl"
      "ane_Destroy_Request\020\"\022\032\n\026Plane_Destroy_R"
      "esponse\020#b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 4537);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_Message_2eproto
namespace ProtoMsg {
const ::google::protobuf::EnumDescriptor* MSG_descriptor() {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_Message_2eproto::file_level_enum_descriptors[0];
}
bool MSG_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void LoginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kNameFieldNumber;
const int LoginRequest::kPasswordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsLoginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.LoginRequest)
}

void LoginRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsLoginRequest();
  return *internal_default_instance();
}


void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.LoginRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.LoginRequest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.LoginRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.LoginRequest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.LoginRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.LoginRequest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.LoginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LoginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginResponse::LoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsLoginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.LoginResponse)
}
LoginResponse::LoginResponse(const LoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.LoginResponse)
}

void LoginResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.LoginResponse)
  SharedDtor();
}

void LoginResponse::SharedDtor() {
}

void LoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginResponse& LoginResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsLoginResponse();
  return *internal_default_instance();
}


void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool LoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.LoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.LoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.LoginResponse)
  return false;
#undef DO_
}

void LoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.LoginResponse)
}

::google::protobuf::uint8* LoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.LoginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.LoginResponse)
  return target;
}

size_t LoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.LoginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 result = 1;
  if (this->result() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.LoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.LoginResponse)
    MergeFrom(*source);
  }
}

void LoginResponse::MergeFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.LoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void LoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginResponse::IsInitialized() const {
  return true;
}

void LoginResponse::Swap(LoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginResponse::InternalSwap(LoginResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogoutRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutRequest::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutRequest::LogoutRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsLogoutRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.LogoutRequest)
}
LogoutRequest::LogoutRequest(const LogoutRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.LogoutRequest)
}

void LogoutRequest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

LogoutRequest::~LogoutRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.LogoutRequest)
  SharedDtor();
}

void LogoutRequest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LogoutRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutRequest& LogoutRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsLogoutRequest();
  return *internal_default_instance();
}


void LogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.LogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool LogoutRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.LogoutRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.LogoutRequest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.LogoutRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.LogoutRequest)
  return false;
#undef DO_
}

void LogoutRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.LogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.LogoutRequest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.LogoutRequest)
}

::google::protobuf::uint8* LogoutRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.LogoutRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.LogoutRequest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.LogoutRequest)
  return target;
}

size_t LogoutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.LogoutRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.LogoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.LogoutRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.LogoutRequest)
    MergeFrom(*source);
  }
}

void LogoutRequest::MergeFrom(const LogoutRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.LogoutRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void LogoutRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutRequest::CopyFrom(const LogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.LogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutRequest::IsInitialized() const {
  return true;
}

void LogoutRequest::Swap(LogoutRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutRequest::InternalSwap(LogoutRequest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LogoutResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LogoutResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LogoutResponse::LogoutResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsLogoutResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.LogoutResponse)
}
LogoutResponse::LogoutResponse(const LogoutResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.LogoutResponse)
}

void LogoutResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

LogoutResponse::~LogoutResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.LogoutResponse)
  SharedDtor();
}

void LogoutResponse::SharedDtor() {
}

void LogoutResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogoutResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LogoutResponse& LogoutResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsLogoutResponse();
  return *internal_default_instance();
}


void LogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool LogoutResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.LogoutResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.LogoutResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.LogoutResponse)
  return false;
#undef DO_
}

void LogoutResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.LogoutResponse)
}

::google::protobuf::uint8* LogoutResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.LogoutResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.LogoutResponse)
  return target;
}

size_t LogoutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.LogoutResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 result = 1;
  if (this->result() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogoutResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.LogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const LogoutResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LogoutResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.LogoutResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.LogoutResponse)
    MergeFrom(*source);
  }
}

void LogoutResponse::MergeFrom(const LogoutResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.LogoutResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void LogoutResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogoutResponse::CopyFrom(const LogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.LogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogoutResponse::IsInitialized() const {
  return true;
}

void LogoutResponse::Swap(LogoutResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogoutResponse::InternalSwap(LogoutResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogoutResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterResquest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResquest::kNameFieldNumber;
const int RegisterResquest::kPasswordFieldNumber;
const int RegisterResquest::kEmailFieldNumber;
const int RegisterResquest::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResquest::RegisterResquest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsRegisterResquest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.RegisterResquest)
}
RegisterResquest::RegisterResquest(const RegisterResquest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.email().size() > 0) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.phone().size() > 0) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.RegisterResquest)
}

void RegisterResquest::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RegisterResquest::~RegisterResquest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.RegisterResquest)
  SharedDtor();
}

void RegisterResquest::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterResquest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterResquest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterResquest& RegisterResquest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsRegisterResquest();
  return *internal_default_instance();
}


void RegisterResquest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.RegisterResquest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool RegisterResquest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.RegisterResquest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.RegisterResquest.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string password = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->password().data(), static_cast<int>(this->password().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.RegisterResquest.password"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string email = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->email().data(), static_cast<int>(this->email().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.RegisterResquest.email"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string phone = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->phone().data(), static_cast<int>(this->phone().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.RegisterResquest.phone"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.RegisterResquest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.RegisterResquest)
  return false;
#undef DO_
}

void RegisterResquest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.RegisterResquest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.password");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->email(), output);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->phone(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.RegisterResquest)
}

::google::protobuf::uint8* RegisterResquest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.RegisterResquest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // string password = 2;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->password().data(), static_cast<int>(this->password().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.password");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  // string email = 3;
  if (this->email().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->email().data(), static_cast<int>(this->email().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->email(), target);
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->phone().data(), static_cast<int>(this->phone().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.RegisterResquest.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->phone(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.RegisterResquest)
  return target;
}

size_t RegisterResquest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.RegisterResquest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // string password = 2;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  // string email = 3;
  if (this->email().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->email());
  }

  // string phone = 4;
  if (this->phone().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->phone());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterResquest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.RegisterResquest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResquest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResquest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.RegisterResquest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.RegisterResquest)
    MergeFrom(*source);
  }
}

void RegisterResquest::MergeFrom(const RegisterResquest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.RegisterResquest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.email().size() > 0) {

    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  if (from.phone().size() > 0) {

    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
}

void RegisterResquest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.RegisterResquest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResquest::CopyFrom(const RegisterResquest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.RegisterResquest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResquest::IsInitialized() const {
  return true;
}

void RegisterResquest::Swap(RegisterResquest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResquest::InternalSwap(RegisterResquest* other) {
  using std::swap;
  name_.Swap(&other->name_);
  password_.Swap(&other->password_);
  email_.Swap(&other->email_);
  phone_.Swap(&other->phone_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterResquest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResponse::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResponse::RegisterResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsRegisterResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.RegisterResponse)
}
RegisterResponse::RegisterResponse(const RegisterResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.RegisterResponse)
}

void RegisterResponse::SharedCtor() {
  result_ = 0u;
  _cached_size_ = 0;
}

RegisterResponse::~RegisterResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.RegisterResponse)
  SharedDtor();
}

void RegisterResponse::SharedDtor() {
}

void RegisterResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterResponse& RegisterResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsRegisterResponse();
  return *internal_default_instance();
}


void RegisterResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = 0u;
  _internal_metadata_.Clear();
}

bool RegisterResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.RegisterResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.RegisterResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.RegisterResponse)
  return false;
#undef DO_
}

void RegisterResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->result(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.RegisterResponse)
}

::google::protobuf::uint8* RegisterResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.RegisterResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->result(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.RegisterResponse)
  return target;
}

size_t RegisterResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.RegisterResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 result = 1;
  if (this->result() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.RegisterResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.RegisterResponse)
    MergeFrom(*source);
  }
}

void RegisterResponse::MergeFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.RegisterResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    set_result(from.result());
  }
}

void RegisterResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResponse::CopyFrom(const RegisterResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.RegisterResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResponse::IsInitialized() const {
  return true;
}

void RegisterResponse::Swap(RegisterResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResponse::InternalSwap(RegisterResponse* other) {
  using std::swap;
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MessageNofification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageNofification::MessageNofification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMessageNofification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MessageNofification)
}
MessageNofification::MessageNofification(const MessageNofification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MessageNofification)
}

void MessageNofification::SharedCtor() {
  _cached_size_ = 0;
}

MessageNofification::~MessageNofification() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MessageNofification)
  SharedDtor();
}

void MessageNofification::SharedDtor() {
}

void MessageNofification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageNofification::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageNofification& MessageNofification::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMessageNofification();
  return *internal_default_instance();
}


void MessageNofification::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MessageNofification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MessageNofification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MessageNofification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MessageNofification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MessageNofification)
  return false;
#undef DO_
}

void MessageNofification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MessageNofification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MessageNofification)
}

::google::protobuf::uint8* MessageNofification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MessageNofification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MessageNofification)
  return target;
}

size_t MessageNofification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MessageNofification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageNofification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MessageNofification)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageNofification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageNofification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MessageNofification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MessageNofification)
    MergeFrom(*source);
  }
}

void MessageNofification::MergeFrom(const MessageNofification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MessageNofification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MessageNofification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MessageNofification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageNofification::CopyFrom(const MessageNofification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MessageNofification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageNofification::IsInitialized() const {
  return true;
}

void MessageNofification::Swap(MessageNofification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageNofification::InternalSwap(MessageNofification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageNofification::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WelcomeNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WelcomeNotification::WelcomeNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsWelcomeNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.WelcomeNotification)
}
WelcomeNotification::WelcomeNotification(const WelcomeNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.WelcomeNotification)
}

void WelcomeNotification::SharedCtor() {
  _cached_size_ = 0;
}

WelcomeNotification::~WelcomeNotification() {
  // @@protoc_insertion_point(destructor:ProtoMsg.WelcomeNotification)
  SharedDtor();
}

void WelcomeNotification::SharedDtor() {
}

void WelcomeNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WelcomeNotification::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WelcomeNotification& WelcomeNotification::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsWelcomeNotification();
  return *internal_default_instance();
}


void WelcomeNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.WelcomeNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool WelcomeNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.WelcomeNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.WelcomeNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.WelcomeNotification)
  return false;
#undef DO_
}

void WelcomeNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.WelcomeNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.WelcomeNotification)
}

::google::protobuf::uint8* WelcomeNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.WelcomeNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.WelcomeNotification)
  return target;
}

size_t WelcomeNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.WelcomeNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WelcomeNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.WelcomeNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const WelcomeNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WelcomeNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.WelcomeNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.WelcomeNotification)
    MergeFrom(*source);
  }
}

void WelcomeNotification::MergeFrom(const WelcomeNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.WelcomeNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void WelcomeNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.WelcomeNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WelcomeNotification::CopyFrom(const WelcomeNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.WelcomeNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WelcomeNotification::IsInitialized() const {
  return true;
}

void WelcomeNotification::Swap(WelcomeNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WelcomeNotification::InternalSwap(WelcomeNotification* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WelcomeNotification::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EchoRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EchoRequest::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EchoRequest::EchoRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsEchoRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.EchoRequest)
}
EchoRequest::EchoRequest(const EchoRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.EchoRequest)
}

void EchoRequest::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

EchoRequest::~EchoRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.EchoRequest)
  SharedDtor();
}

void EchoRequest::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EchoRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EchoRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EchoRequest& EchoRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsEchoRequest();
  return *internal_default_instance();
}


void EchoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.EchoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool EchoRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.EchoRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.EchoRequest.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.EchoRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.EchoRequest)
  return false;
#undef DO_
}

void EchoRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.EchoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.EchoRequest.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.EchoRequest)
}

::google::protobuf::uint8* EchoRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.EchoRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.EchoRequest.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.EchoRequest)
  return target;
}

size_t EchoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.EchoRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EchoRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.EchoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const EchoRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EchoRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.EchoRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.EchoRequest)
    MergeFrom(*source);
  }
}

void EchoRequest::MergeFrom(const EchoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.EchoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void EchoRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.EchoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EchoRequest::CopyFrom(const EchoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.EchoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EchoRequest::IsInitialized() const {
  return true;
}

void EchoRequest::Swap(EchoRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EchoRequest::InternalSwap(EchoRequest* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EchoRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OtherClientNotification::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OtherClientNotification::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OtherClientNotification::OtherClientNotification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsOtherClientNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.OtherClientNotification)
}
OtherClientNotification::OtherClientNotification(const OtherClientNotification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.OtherClientNotification)
}

void OtherClientNotification::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

OtherClientNotification::~OtherClientNotification() {
  // @@protoc_insertion_point(destructor:ProtoMsg.OtherClientNotification)
  SharedDtor();
}

void OtherClientNotification::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OtherClientNotification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OtherClientNotification::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OtherClientNotification& OtherClientNotification::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsOtherClientNotification();
  return *internal_default_instance();
}


void OtherClientNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.OtherClientNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool OtherClientNotification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.OtherClientNotification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtoMsg.OtherClientNotification.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.OtherClientNotification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.OtherClientNotification)
  return false;
#undef DO_
}

void OtherClientNotification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.OtherClientNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.OtherClientNotification.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.OtherClientNotification)
}

::google::protobuf::uint8* OtherClientNotification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.OtherClientNotification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtoMsg.OtherClientNotification.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.OtherClientNotification)
  return target;
}

size_t OtherClientNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.OtherClientNotification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OtherClientNotification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.OtherClientNotification)
  GOOGLE_DCHECK_NE(&from, this);
  const OtherClientNotification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OtherClientNotification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.OtherClientNotification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.OtherClientNotification)
    MergeFrom(*source);
  }
}

void OtherClientNotification::MergeFrom(const OtherClientNotification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.OtherClientNotification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void OtherClientNotification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.OtherClientNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OtherClientNotification::CopyFrom(const OtherClientNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.OtherClientNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OtherClientNotification::IsInitialized() const {
  return true;
}

void OtherClientNotification::Swap(OtherClientNotification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OtherClientNotification::InternalSwap(OtherClientNotification* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OtherClientNotification::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CubeOperateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CubeOperateRequest::kMovementFieldNumber;
const int CubeOperateRequest::kTurnFieldNumber;
const int CubeOperateRequest::kIdFieldNumber;
const int CubeOperateRequest::kXFieldNumber;
const int CubeOperateRequest::kYFieldNumber;
const int CubeOperateRequest::kZFieldNumber;
const int CubeOperateRequest::kUserIdFieldNumber;
const int CubeOperateRequest::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CubeOperateRequest::CubeOperateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsCubeOperateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.CubeOperateRequest)
}
CubeOperateRequest::CubeOperateRequest(const CubeOperateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&movement_, &from.movement_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&movement_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.CubeOperateRequest)
}

void CubeOperateRequest::SharedCtor() {
  ::memset(&movement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&movement_)) + sizeof(angle_));
  _cached_size_ = 0;
}

CubeOperateRequest::~CubeOperateRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.CubeOperateRequest)
  SharedDtor();
}

void CubeOperateRequest::SharedDtor() {
}

void CubeOperateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CubeOperateRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CubeOperateRequest& CubeOperateRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsCubeOperateRequest();
  return *internal_default_instance();
}


void CubeOperateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.CubeOperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&movement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&movement_)) + sizeof(angle_));
  _internal_metadata_.Clear();
}

bool CubeOperateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.CubeOperateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float movement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &movement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float turn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &turn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.CubeOperateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.CubeOperateRequest)
  return false;
#undef DO_
}

void CubeOperateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.CubeOperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float movement = 1;
  if (this->movement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->movement(), output);
  }

  // float turn = 2;
  if (this->turn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->turn(), output);
  }

  // fixed32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->id(), output);
  }

  // float x = 4;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->x(), output);
  }

  // float y = 5;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->y(), output);
  }

  // float z = 6;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->z(), output);
  }

  // fixed32 user_id = 7;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->user_id(), output);
  }

  // float angle = 8;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.CubeOperateRequest)
}

::google::protobuf::uint8* CubeOperateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.CubeOperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float movement = 1;
  if (this->movement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->movement(), target);
  }

  // float turn = 2;
  if (this->turn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->turn(), target);
  }

  // fixed32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->id(), target);
  }

  // float x = 4;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->x(), target);
  }

  // float y = 5;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->y(), target);
  }

  // float z = 6;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->z(), target);
  }

  // fixed32 user_id = 7;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->user_id(), target);
  }

  // float angle = 8;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->angle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.CubeOperateRequest)
  return target;
}

size_t CubeOperateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.CubeOperateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float movement = 1;
  if (this->movement() != 0) {
    total_size += 1 + 4;
  }

  // float turn = 2;
  if (this->turn() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 id = 3;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // float x = 4;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 5;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 6;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_id = 7;
  if (this->user_id() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 8;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CubeOperateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.CubeOperateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CubeOperateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CubeOperateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.CubeOperateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.CubeOperateRequest)
    MergeFrom(*source);
  }
}

void CubeOperateRequest::MergeFrom(const CubeOperateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.CubeOperateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.movement() != 0) {
    set_movement(from.movement());
  }
  if (from.turn() != 0) {
    set_turn(from.turn());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
}

void CubeOperateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.CubeOperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CubeOperateRequest::CopyFrom(const CubeOperateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.CubeOperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CubeOperateRequest::IsInitialized() const {
  return true;
}

void CubeOperateRequest::Swap(CubeOperateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CubeOperateRequest::InternalSwap(CubeOperateRequest* other) {
  using std::swap;
  swap(movement_, other->movement_);
  swap(turn_, other->turn_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(user_id_, other->user_id_);
  swap(angle_, other->angle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CubeOperateRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CubeOperateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CubeOperateResponse::kMovementFieldNumber;
const int CubeOperateResponse::kTurnFieldNumber;
const int CubeOperateResponse::kIdFieldNumber;
const int CubeOperateResponse::kXFieldNumber;
const int CubeOperateResponse::kYFieldNumber;
const int CubeOperateResponse::kZFieldNumber;
const int CubeOperateResponse::kUserIdFieldNumber;
const int CubeOperateResponse::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CubeOperateResponse::CubeOperateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsCubeOperateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.CubeOperateResponse)
}
CubeOperateResponse::CubeOperateResponse(const CubeOperateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&movement_, &from.movement_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&movement_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.CubeOperateResponse)
}

void CubeOperateResponse::SharedCtor() {
  ::memset(&movement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&movement_)) + sizeof(angle_));
  _cached_size_ = 0;
}

CubeOperateResponse::~CubeOperateResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.CubeOperateResponse)
  SharedDtor();
}

void CubeOperateResponse::SharedDtor() {
}

void CubeOperateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CubeOperateResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CubeOperateResponse& CubeOperateResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsCubeOperateResponse();
  return *internal_default_instance();
}


void CubeOperateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.CubeOperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&movement_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&movement_)) + sizeof(angle_));
  _internal_metadata_.Clear();
}

bool CubeOperateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.CubeOperateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float movement = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &movement_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float turn = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &turn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_id = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.CubeOperateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.CubeOperateResponse)
  return false;
#undef DO_
}

void CubeOperateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.CubeOperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float movement = 1;
  if (this->movement() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->movement(), output);
  }

  // float turn = 2;
  if (this->turn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->turn(), output);
  }

  // fixed32 id = 3;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->id(), output);
  }

  // float x = 4;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->x(), output);
  }

  // float y = 5;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->y(), output);
  }

  // float z = 6;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->z(), output);
  }

  // fixed32 user_id = 7;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(7, this->user_id(), output);
  }

  // float angle = 8;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.CubeOperateResponse)
}

::google::protobuf::uint8* CubeOperateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.CubeOperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float movement = 1;
  if (this->movement() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->movement(), target);
  }

  // float turn = 2;
  if (this->turn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->turn(), target);
  }

  // fixed32 id = 3;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->id(), target);
  }

  // float x = 4;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->x(), target);
  }

  // float y = 5;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->y(), target);
  }

  // float z = 6;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->z(), target);
  }

  // fixed32 user_id = 7;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(7, this->user_id(), target);
  }

  // float angle = 8;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->angle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.CubeOperateResponse)
  return target;
}

size_t CubeOperateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.CubeOperateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float movement = 1;
  if (this->movement() != 0) {
    total_size += 1 + 4;
  }

  // float turn = 2;
  if (this->turn() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 id = 3;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // float x = 4;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 5;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 6;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_id = 7;
  if (this->user_id() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 8;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CubeOperateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.CubeOperateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CubeOperateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CubeOperateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.CubeOperateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.CubeOperateResponse)
    MergeFrom(*source);
  }
}

void CubeOperateResponse::MergeFrom(const CubeOperateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.CubeOperateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.movement() != 0) {
    set_movement(from.movement());
  }
  if (from.turn() != 0) {
    set_turn(from.turn());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
}

void CubeOperateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.CubeOperateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CubeOperateResponse::CopyFrom(const CubeOperateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.CubeOperateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CubeOperateResponse::IsInitialized() const {
  return true;
}

void CubeOperateResponse::Swap(CubeOperateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CubeOperateResponse::InternalSwap(CubeOperateResponse* other) {
  using std::swap;
  swap(movement_, other->movement_);
  swap(turn_, other->turn_);
  swap(id_, other->id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(user_id_, other->user_id_);
  swap(angle_, other->angle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CubeOperateResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CubeCreateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CubeCreateResponse::kXFieldNumber;
const int CubeCreateResponse::kYFieldNumber;
const int CubeCreateResponse::kZFieldNumber;
const int CubeCreateResponse::kUserIdFieldNumber;
const int CubeCreateResponse::kIdFieldNumber;
const int CubeCreateResponse::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CubeCreateResponse::CubeCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsCubeCreateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.CubeCreateResponse)
}
CubeCreateResponse::CubeCreateResponse(const CubeCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.CubeCreateResponse)
}

void CubeCreateResponse::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  _cached_size_ = 0;
}

CubeCreateResponse::~CubeCreateResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.CubeCreateResponse)
  SharedDtor();
}

void CubeCreateResponse::SharedDtor() {
}

void CubeCreateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CubeCreateResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CubeCreateResponse& CubeCreateResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsCubeCreateResponse();
  return *internal_default_instance();
}


void CubeCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.CubeCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&x_)) + sizeof(angle_));
  _internal_metadata_.Clear();
}

bool CubeCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.CubeCreateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.CubeCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.CubeCreateResponse)
  return false;
#undef DO_
}

void CubeCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.CubeCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->user_id(), output);
  }

  // fixed32 id = 5;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->id(), output);
  }

  // float angle = 6;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.CubeCreateResponse)
}

::google::protobuf::uint8* CubeCreateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.CubeCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->user_id(), target);
  }

  // fixed32 id = 5;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->id(), target);
  }

  // float angle = 6;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->angle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.CubeCreateResponse)
  return target;
}

size_t CubeCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.CubeCreateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 id = 5;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 6;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CubeCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.CubeCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CubeCreateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CubeCreateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.CubeCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.CubeCreateResponse)
    MergeFrom(*source);
  }
}

void CubeCreateResponse::MergeFrom(const CubeCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.CubeCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
}

void CubeCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.CubeCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CubeCreateResponse::CopyFrom(const CubeCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.CubeCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CubeCreateResponse::IsInitialized() const {
  return true;
}

void CubeCreateResponse::Swap(CubeCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CubeCreateResponse::InternalSwap(CubeCreateResponse* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(user_id_, other->user_id_);
  swap(id_, other->id_);
  swap(angle_, other->angle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CubeCreateResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void CubeDeleteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CubeDeleteResponse::kIdFieldNumber;
const int CubeDeleteResponse::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CubeDeleteResponse::CubeDeleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsCubeDeleteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.CubeDeleteResponse)
}
CubeDeleteResponse::CubeDeleteResponse(const CubeDeleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_id_) -
    reinterpret_cast<char*>(&id_)) + sizeof(user_id_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.CubeDeleteResponse)
}

void CubeDeleteResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_id_));
  _cached_size_ = 0;
}

CubeDeleteResponse::~CubeDeleteResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.CubeDeleteResponse)
  SharedDtor();
}

void CubeDeleteResponse::SharedDtor() {
}

void CubeDeleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CubeDeleteResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CubeDeleteResponse& CubeDeleteResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsCubeDeleteResponse();
  return *internal_default_instance();
}


void CubeDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.CubeDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_id_));
  _internal_metadata_.Clear();
}

bool CubeDeleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.CubeDeleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.CubeDeleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.CubeDeleteResponse)
  return false;
#undef DO_
}

void CubeDeleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.CubeDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  // fixed32 user_id = 2;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->user_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.CubeDeleteResponse)
}

::google::protobuf::uint8* CubeDeleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.CubeDeleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  // fixed32 user_id = 2;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->user_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.CubeDeleteResponse)
  return target;
}

size_t CubeDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.CubeDeleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_id = 2;
  if (this->user_id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CubeDeleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.CubeDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CubeDeleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CubeDeleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.CubeDeleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.CubeDeleteResponse)
    MergeFrom(*source);
  }
}

void CubeDeleteResponse::MergeFrom(const CubeDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.CubeDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
}

void CubeDeleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.CubeDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CubeDeleteResponse::CopyFrom(const CubeDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.CubeDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CubeDeleteResponse::IsInitialized() const {
  return true;
}

void CubeDeleteResponse::Swap(CubeDeleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CubeDeleteResponse::InternalSwap(CubeDeleteResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(user_id_, other->user_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CubeDeleteResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneChangeCompleteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneChangeCompleteRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneChangeCompleteRequest::SceneChangeCompleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.SceneChangeCompleteRequest)
}
SceneChangeCompleteRequest::SceneChangeCompleteRequest(const SceneChangeCompleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.SceneChangeCompleteRequest)
}

void SceneChangeCompleteRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

SceneChangeCompleteRequest::~SceneChangeCompleteRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.SceneChangeCompleteRequest)
  SharedDtor();
}

void SceneChangeCompleteRequest::SharedDtor() {
}

void SceneChangeCompleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneChangeCompleteRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneChangeCompleteRequest& SceneChangeCompleteRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteRequest();
  return *internal_default_instance();
}


void SceneChangeCompleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.SceneChangeCompleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneChangeCompleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.SceneChangeCompleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.SceneChangeCompleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.SceneChangeCompleteRequest)
  return false;
#undef DO_
}

void SceneChangeCompleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.SceneChangeCompleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.SceneChangeCompleteRequest)
}

::google::protobuf::uint8* SceneChangeCompleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.SceneChangeCompleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.SceneChangeCompleteRequest)
  return target;
}

size_t SceneChangeCompleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.SceneChangeCompleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneChangeCompleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.SceneChangeCompleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneChangeCompleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneChangeCompleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.SceneChangeCompleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.SceneChangeCompleteRequest)
    MergeFrom(*source);
  }
}

void SceneChangeCompleteRequest::MergeFrom(const SceneChangeCompleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.SceneChangeCompleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SceneChangeCompleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.SceneChangeCompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneChangeCompleteRequest::CopyFrom(const SceneChangeCompleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.SceneChangeCompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneChangeCompleteRequest::IsInitialized() const {
  return true;
}

void SceneChangeCompleteRequest::Swap(SceneChangeCompleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneChangeCompleteRequest::InternalSwap(SceneChangeCompleteRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneChangeCompleteRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SceneChangeCompleteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SceneChangeCompleteResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SceneChangeCompleteResponse::SceneChangeCompleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.SceneChangeCompleteResponse)
}
SceneChangeCompleteResponse::SceneChangeCompleteResponse(const SceneChangeCompleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.SceneChangeCompleteResponse)
}

void SceneChangeCompleteResponse::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

SceneChangeCompleteResponse::~SceneChangeCompleteResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.SceneChangeCompleteResponse)
  SharedDtor();
}

void SceneChangeCompleteResponse::SharedDtor() {
}

void SceneChangeCompleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SceneChangeCompleteResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SceneChangeCompleteResponse& SceneChangeCompleteResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteResponse();
  return *internal_default_instance();
}


void SceneChangeCompleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.SceneChangeCompleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool SceneChangeCompleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.SceneChangeCompleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.SceneChangeCompleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.SceneChangeCompleteResponse)
  return false;
#undef DO_
}

void SceneChangeCompleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.SceneChangeCompleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.SceneChangeCompleteResponse)
}

::google::protobuf::uint8* SceneChangeCompleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.SceneChangeCompleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.SceneChangeCompleteResponse)
  return target;
}

size_t SceneChangeCompleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.SceneChangeCompleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SceneChangeCompleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.SceneChangeCompleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SceneChangeCompleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SceneChangeCompleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.SceneChangeCompleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.SceneChangeCompleteResponse)
    MergeFrom(*source);
  }
}

void SceneChangeCompleteResponse::MergeFrom(const SceneChangeCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.SceneChangeCompleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void SceneChangeCompleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.SceneChangeCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SceneChangeCompleteResponse::CopyFrom(const SceneChangeCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.SceneChangeCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SceneChangeCompleteResponse::IsInitialized() const {
  return true;
}

void SceneChangeCompleteResponse::Swap(SceneChangeCompleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SceneChangeCompleteResponse::InternalSwap(SceneChangeCompleteResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SceneChangeCompleteResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchBeginRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchBeginRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchBeginRequest::MatchBeginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMatchBeginRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MatchBeginRequest)
}
MatchBeginRequest::MatchBeginRequest(const MatchBeginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MatchBeginRequest)
}

void MatchBeginRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

MatchBeginRequest::~MatchBeginRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MatchBeginRequest)
  SharedDtor();
}

void MatchBeginRequest::SharedDtor() {
}

void MatchBeginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchBeginRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchBeginRequest& MatchBeginRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMatchBeginRequest();
  return *internal_default_instance();
}


void MatchBeginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MatchBeginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchBeginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MatchBeginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MatchBeginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MatchBeginRequest)
  return false;
#undef DO_
}

void MatchBeginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MatchBeginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MatchBeginRequest)
}

::google::protobuf::uint8* MatchBeginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MatchBeginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MatchBeginRequest)
  return target;
}

size_t MatchBeginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MatchBeginRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchBeginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MatchBeginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchBeginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchBeginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MatchBeginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MatchBeginRequest)
    MergeFrom(*source);
  }
}

void MatchBeginRequest::MergeFrom(const MatchBeginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MatchBeginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MatchBeginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MatchBeginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchBeginRequest::CopyFrom(const MatchBeginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MatchBeginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchBeginRequest::IsInitialized() const {
  return true;
}

void MatchBeginRequest::Swap(MatchBeginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchBeginRequest::InternalSwap(MatchBeginRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchBeginRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchBeginResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchBeginResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchBeginResponse::MatchBeginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMatchBeginResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MatchBeginResponse)
}
MatchBeginResponse::MatchBeginResponse(const MatchBeginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MatchBeginResponse)
}

void MatchBeginResponse::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

MatchBeginResponse::~MatchBeginResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MatchBeginResponse)
  SharedDtor();
}

void MatchBeginResponse::SharedDtor() {
}

void MatchBeginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchBeginResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchBeginResponse& MatchBeginResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMatchBeginResponse();
  return *internal_default_instance();
}


void MatchBeginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MatchBeginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchBeginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MatchBeginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MatchBeginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MatchBeginResponse)
  return false;
#undef DO_
}

void MatchBeginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MatchBeginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MatchBeginResponse)
}

::google::protobuf::uint8* MatchBeginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MatchBeginResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MatchBeginResponse)
  return target;
}

size_t MatchBeginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MatchBeginResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchBeginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MatchBeginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchBeginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchBeginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MatchBeginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MatchBeginResponse)
    MergeFrom(*source);
  }
}

void MatchBeginResponse::MergeFrom(const MatchBeginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MatchBeginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MatchBeginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MatchBeginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchBeginResponse::CopyFrom(const MatchBeginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MatchBeginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchBeginResponse::IsInitialized() const {
  return true;
}

void MatchBeginResponse::Swap(MatchBeginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchBeginResponse::InternalSwap(MatchBeginResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchBeginResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchCancelRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchCancelRequest::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchCancelRequest::MatchCancelRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMatchCancelRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MatchCancelRequest)
}
MatchCancelRequest::MatchCancelRequest(const MatchCancelRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MatchCancelRequest)
}

void MatchCancelRequest::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

MatchCancelRequest::~MatchCancelRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MatchCancelRequest)
  SharedDtor();
}

void MatchCancelRequest::SharedDtor() {
}

void MatchCancelRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchCancelRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchCancelRequest& MatchCancelRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMatchCancelRequest();
  return *internal_default_instance();
}


void MatchCancelRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MatchCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchCancelRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MatchCancelRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MatchCancelRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MatchCancelRequest)
  return false;
#undef DO_
}

void MatchCancelRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MatchCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MatchCancelRequest)
}

::google::protobuf::uint8* MatchCancelRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MatchCancelRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MatchCancelRequest)
  return target;
}

size_t MatchCancelRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MatchCancelRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchCancelRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MatchCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchCancelRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchCancelRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MatchCancelRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MatchCancelRequest)
    MergeFrom(*source);
  }
}

void MatchCancelRequest::MergeFrom(const MatchCancelRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MatchCancelRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MatchCancelRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MatchCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchCancelRequest::CopyFrom(const MatchCancelRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MatchCancelRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchCancelRequest::IsInitialized() const {
  return true;
}

void MatchCancelRequest::Swap(MatchCancelRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchCancelRequest::InternalSwap(MatchCancelRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchCancelRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchCancelResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchCancelResponse::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchCancelResponse::MatchCancelResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMatchCancelResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MatchCancelResponse)
}
MatchCancelResponse::MatchCancelResponse(const MatchCancelResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MatchCancelResponse)
}

void MatchCancelResponse::SharedCtor() {
  id_ = 0u;
  _cached_size_ = 0;
}

MatchCancelResponse::~MatchCancelResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MatchCancelResponse)
  SharedDtor();
}

void MatchCancelResponse::SharedDtor() {
}

void MatchCancelResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchCancelResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchCancelResponse& MatchCancelResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMatchCancelResponse();
  return *internal_default_instance();
}


void MatchCancelResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MatchCancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = 0u;
  _internal_metadata_.Clear();
}

bool MatchCancelResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MatchCancelResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MatchCancelResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MatchCancelResponse)
  return false;
#undef DO_
}

void MatchCancelResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MatchCancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MatchCancelResponse)
}

::google::protobuf::uint8* MatchCancelResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MatchCancelResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MatchCancelResponse)
  return target;
}

size_t MatchCancelResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MatchCancelResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchCancelResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MatchCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchCancelResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchCancelResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MatchCancelResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MatchCancelResponse)
    MergeFrom(*source);
  }
}

void MatchCancelResponse::MergeFrom(const MatchCancelResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MatchCancelResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MatchCancelResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MatchCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchCancelResponse::CopyFrom(const MatchCancelResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MatchCancelResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchCancelResponse::IsInitialized() const {
  return true;
}

void MatchCancelResponse::Swap(MatchCancelResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchCancelResponse::InternalSwap(MatchCancelResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchCancelResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchCompleteRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchCompleteRequest::kIdFieldNumber;
const int MatchCompleteRequest::kOtherUserIdFieldNumber;
const int MatchCompleteRequest::kUserCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchCompleteRequest::MatchCompleteRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMatchCompleteRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MatchCompleteRequest)
}
MatchCompleteRequest::MatchCompleteRequest(const MatchCompleteRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(user_count_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MatchCompleteRequest)
}

void MatchCompleteRequest::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_count_));
  _cached_size_ = 0;
}

MatchCompleteRequest::~MatchCompleteRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MatchCompleteRequest)
  SharedDtor();
}

void MatchCompleteRequest::SharedDtor() {
}

void MatchCompleteRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchCompleteRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchCompleteRequest& MatchCompleteRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMatchCompleteRequest();
  return *internal_default_instance();
}


void MatchCompleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MatchCompleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_count_));
  _internal_metadata_.Clear();
}

bool MatchCompleteRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MatchCompleteRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 other_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &other_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MatchCompleteRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MatchCompleteRequest)
  return false;
#undef DO_
}

void MatchCompleteRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MatchCompleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  // fixed32 other_user_id = 2;
  if (this->other_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->other_user_id(), output);
  }

  // fixed32 user_count = 3;
  if (this->user_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->user_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MatchCompleteRequest)
}

::google::protobuf::uint8* MatchCompleteRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MatchCompleteRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  // fixed32 other_user_id = 2;
  if (this->other_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->other_user_id(), target);
  }

  // fixed32 user_count = 3;
  if (this->user_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->user_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MatchCompleteRequest)
  return target;
}

size_t MatchCompleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MatchCompleteRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 other_user_id = 2;
  if (this->other_user_id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_count = 3;
  if (this->user_count() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchCompleteRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MatchCompleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchCompleteRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchCompleteRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MatchCompleteRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MatchCompleteRequest)
    MergeFrom(*source);
  }
}

void MatchCompleteRequest::MergeFrom(const MatchCompleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MatchCompleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.other_user_id() != 0) {
    set_other_user_id(from.other_user_id());
  }
  if (from.user_count() != 0) {
    set_user_count(from.user_count());
  }
}

void MatchCompleteRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MatchCompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchCompleteRequest::CopyFrom(const MatchCompleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MatchCompleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchCompleteRequest::IsInitialized() const {
  return true;
}

void MatchCompleteRequest::Swap(MatchCompleteRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchCompleteRequest::InternalSwap(MatchCompleteRequest* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(other_user_id_, other->other_user_id_);
  swap(user_count_, other->user_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchCompleteRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MatchCompleteResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MatchCompleteResponse::kIdFieldNumber;
const int MatchCompleteResponse::kOtherUserIdFieldNumber;
const int MatchCompleteResponse::kUserCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MatchCompleteResponse::MatchCompleteResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMatchCompleteResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.MatchCompleteResponse)
}
MatchCompleteResponse::MatchCompleteResponse(const MatchCompleteResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&user_count_) -
    reinterpret_cast<char*>(&id_)) + sizeof(user_count_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.MatchCompleteResponse)
}

void MatchCompleteResponse::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_count_));
  _cached_size_ = 0;
}

MatchCompleteResponse::~MatchCompleteResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.MatchCompleteResponse)
  SharedDtor();
}

void MatchCompleteResponse::SharedDtor() {
}

void MatchCompleteResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MatchCompleteResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MatchCompleteResponse& MatchCompleteResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMatchCompleteResponse();
  return *internal_default_instance();
}


void MatchCompleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.MatchCompleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&user_count_) -
      reinterpret_cast<char*>(&id_)) + sizeof(user_count_));
  _internal_metadata_.Clear();
}

bool MatchCompleteResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.MatchCompleteResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 other_user_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &other_user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.MatchCompleteResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.MatchCompleteResponse)
  return false;
#undef DO_
}

void MatchCompleteResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.MatchCompleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->id(), output);
  }

  // fixed32 other_user_id = 2;
  if (this->other_user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->other_user_id(), output);
  }

  // fixed32 user_count = 3;
  if (this->user_count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->user_count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.MatchCompleteResponse)
}

::google::protobuf::uint8* MatchCompleteResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.MatchCompleteResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->id(), target);
  }

  // fixed32 other_user_id = 2;
  if (this->other_user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->other_user_id(), target);
  }

  // fixed32 user_count = 3;
  if (this->user_count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->user_count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.MatchCompleteResponse)
  return target;
}

size_t MatchCompleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.MatchCompleteResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 id = 1;
  if (this->id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 other_user_id = 2;
  if (this->other_user_id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_count = 3;
  if (this->user_count() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MatchCompleteResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.MatchCompleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const MatchCompleteResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MatchCompleteResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.MatchCompleteResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.MatchCompleteResponse)
    MergeFrom(*source);
  }
}

void MatchCompleteResponse::MergeFrom(const MatchCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.MatchCompleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.other_user_id() != 0) {
    set_other_user_id(from.other_user_id());
  }
  if (from.user_count() != 0) {
    set_user_count(from.user_count());
  }
}

void MatchCompleteResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.MatchCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MatchCompleteResponse::CopyFrom(const MatchCompleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.MatchCompleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MatchCompleteResponse::IsInitialized() const {
  return true;
}

void MatchCompleteResponse::Swap(MatchCompleteResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MatchCompleteResponse::InternalSwap(MatchCompleteResponse* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(other_user_id_, other->other_user_id_);
  swap(user_count_, other->user_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MatchCompleteResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaneOperateRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneOperateRequest::kHorizontalFieldNumber;
const int PlaneOperateRequest::kVerticalFieldNumber;
const int PlaneOperateRequest::kFireFieldNumber;
const int PlaneOperateRequest::kUserIdFieldNumber;
const int PlaneOperateRequest::kIndexIdFieldNumber;
const int PlaneOperateRequest::kXFieldNumber;
const int PlaneOperateRequest::kYFieldNumber;
const int PlaneOperateRequest::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneOperateRequest::PlaneOperateRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsPlaneOperateRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.PlaneOperateRequest)
}
PlaneOperateRequest::PlaneOperateRequest(const PlaneOperateRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&horizontal_, &from.horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&horizontal_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.PlaneOperateRequest)
}

void PlaneOperateRequest::SharedCtor() {
  ::memset(&horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&horizontal_)) + sizeof(z_));
  _cached_size_ = 0;
}

PlaneOperateRequest::~PlaneOperateRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.PlaneOperateRequest)
  SharedDtor();
}

void PlaneOperateRequest::SharedDtor() {
}

void PlaneOperateRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaneOperateRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaneOperateRequest& PlaneOperateRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsPlaneOperateRequest();
  return *internal_default_instance();
}


void PlaneOperateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.PlaneOperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&horizontal_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PlaneOperateRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.PlaneOperateRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float horizontal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vertical = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 fire = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fire_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 index_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.PlaneOperateRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.PlaneOperateRequest)
  return false;
#undef DO_
}

void PlaneOperateRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.PlaneOperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float horizontal = 1;
  if (this->horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->horizontal(), output);
  }

  // float vertical = 2;
  if (this->vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->vertical(), output);
  }

  // fixed32 fire = 3;
  if (this->fire() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->fire(), output);
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->user_id(), output);
  }

  // fixed32 index_id = 5;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->index_id(), output);
  }

  // float x = 6;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->x(), output);
  }

  // float y = 7;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->y(), output);
  }

  // float z = 8;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.PlaneOperateRequest)
}

::google::protobuf::uint8* PlaneOperateRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.PlaneOperateRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float horizontal = 1;
  if (this->horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->horizontal(), target);
  }

  // float vertical = 2;
  if (this->vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->vertical(), target);
  }

  // fixed32 fire = 3;
  if (this->fire() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->fire(), target);
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->user_id(), target);
  }

  // fixed32 index_id = 5;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->index_id(), target);
  }

  // float x = 6;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->x(), target);
  }

  // float y = 7;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->y(), target);
  }

  // float z = 8;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.PlaneOperateRequest)
  return target;
}

size_t PlaneOperateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.PlaneOperateRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float horizontal = 1;
  if (this->horizontal() != 0) {
    total_size += 1 + 4;
  }

  // float vertical = 2;
  if (this->vertical() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 fire = 3;
  if (this->fire() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 index_id = 5;
  if (this->index_id() != 0) {
    total_size += 1 + 4;
  }

  // float x = 6;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 7;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 8;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaneOperateRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.PlaneOperateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneOperateRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaneOperateRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.PlaneOperateRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.PlaneOperateRequest)
    MergeFrom(*source);
  }
}

void PlaneOperateRequest::MergeFrom(const PlaneOperateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.PlaneOperateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.horizontal() != 0) {
    set_horizontal(from.horizontal());
  }
  if (from.vertical() != 0) {
    set_vertical(from.vertical());
  }
  if (from.fire() != 0) {
    set_fire(from.fire());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PlaneOperateRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.PlaneOperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneOperateRequest::CopyFrom(const PlaneOperateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.PlaneOperateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneOperateRequest::IsInitialized() const {
  return true;
}

void PlaneOperateRequest::Swap(PlaneOperateRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneOperateRequest::InternalSwap(PlaneOperateRequest* other) {
  using std::swap;
  swap(horizontal_, other->horizontal_);
  swap(vertical_, other->vertical_);
  swap(fire_, other->fire_);
  swap(user_id_, other->user_id_);
  swap(index_id_, other->index_id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaneOperateRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaneOperateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneOperateResponse::kHorizontalFieldNumber;
const int PlaneOperateResponse::kVerticalFieldNumber;
const int PlaneOperateResponse::kFireFieldNumber;
const int PlaneOperateResponse::kUserIdFieldNumber;
const int PlaneOperateResponse::kIndexIdFieldNumber;
const int PlaneOperateResponse::kXFieldNumber;
const int PlaneOperateResponse::kYFieldNumber;
const int PlaneOperateResponse::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneOperateResponse::PlaneOperateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsPlaneOperateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.PlaneOperateResponse)
}
PlaneOperateResponse::PlaneOperateResponse(const PlaneOperateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&horizontal_, &from.horizontal_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&horizontal_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.PlaneOperateResponse)
}

void PlaneOperateResponse::SharedCtor() {
  ::memset(&horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&horizontal_)) + sizeof(z_));
  _cached_size_ = 0;
}

PlaneOperateResponse::~PlaneOperateResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.PlaneOperateResponse)
  SharedDtor();
}

void PlaneOperateResponse::SharedDtor() {
}

void PlaneOperateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaneOperateResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaneOperateResponse& PlaneOperateResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsPlaneOperateResponse();
  return *internal_default_instance();
}


void PlaneOperateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.PlaneOperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&horizontal_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&horizontal_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool PlaneOperateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.PlaneOperateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float horizontal = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &horizontal_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vertical = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vertical_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 fire = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &fire_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 user_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &user_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 index_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.PlaneOperateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.PlaneOperateResponse)
  return false;
#undef DO_
}

void PlaneOperateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.PlaneOperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float horizontal = 1;
  if (this->horizontal() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->horizontal(), output);
  }

  // float vertical = 2;
  if (this->vertical() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->vertical(), output);
  }

  // fixed32 fire = 3;
  if (this->fire() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->fire(), output);
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->user_id(), output);
  }

  // fixed32 index_id = 5;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->index_id(), output);
  }

  // float x = 6;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->x(), output);
  }

  // float y = 7;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->y(), output);
  }

  // float z = 8;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.PlaneOperateResponse)
}

::google::protobuf::uint8* PlaneOperateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.PlaneOperateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float horizontal = 1;
  if (this->horizontal() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->horizontal(), target);
  }

  // float vertical = 2;
  if (this->vertical() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->vertical(), target);
  }

  // fixed32 fire = 3;
  if (this->fire() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->fire(), target);
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->user_id(), target);
  }

  // fixed32 index_id = 5;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->index_id(), target);
  }

  // float x = 6;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->x(), target);
  }

  // float y = 7;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->y(), target);
  }

  // float z = 8;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.PlaneOperateResponse)
  return target;
}

size_t PlaneOperateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.PlaneOperateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float horizontal = 1;
  if (this->horizontal() != 0) {
    total_size += 1 + 4;
  }

  // float vertical = 2;
  if (this->vertical() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 fire = 3;
  if (this->fire() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 user_id = 4;
  if (this->user_id() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 index_id = 5;
  if (this->index_id() != 0) {
    total_size += 1 + 4;
  }

  // float x = 6;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 7;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 8;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaneOperateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.PlaneOperateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneOperateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaneOperateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.PlaneOperateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.PlaneOperateResponse)
    MergeFrom(*source);
  }
}

void PlaneOperateResponse::MergeFrom(const PlaneOperateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.PlaneOperateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.horizontal() != 0) {
    set_horizontal(from.horizontal());
  }
  if (from.vertical() != 0) {
    set_vertical(from.vertical());
  }
  if (from.fire() != 0) {
    set_fire(from.fire());
  }
  if (from.user_id() != 0) {
    set_user_id(from.user_id());
  }
  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void PlaneOperateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.PlaneOperateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneOperateResponse::CopyFrom(const PlaneOperateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.PlaneOperateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneOperateResponse::IsInitialized() const {
  return true;
}

void PlaneOperateResponse::Swap(PlaneOperateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneOperateResponse::InternalSwap(PlaneOperateResponse* other) {
  using std::swap;
  swap(horizontal_, other->horizontal_);
  swap(vertical_, other->vertical_);
  swap(fire_, other->fire_);
  swap(user_id_, other->user_id_);
  swap(index_id_, other->index_id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaneOperateResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void WaveCreateResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int WaveCreateResponse::kXFieldNumber;
const int WaveCreateResponse::kYFieldNumber;
const int WaveCreateResponse::kZFieldNumber;
const int WaveCreateResponse::kAngelFieldNumber;
const int WaveCreateResponse::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

WaveCreateResponse::WaveCreateResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsWaveCreateResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.WaveCreateResponse)
}
WaveCreateResponse::WaveCreateResponse(const WaveCreateResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&x_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.WaveCreateResponse)
}

void WaveCreateResponse::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&x_)) + sizeof(type_));
  _cached_size_ = 0;
}

WaveCreateResponse::~WaveCreateResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.WaveCreateResponse)
  SharedDtor();
}

void WaveCreateResponse::SharedDtor() {
}

void WaveCreateResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* WaveCreateResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const WaveCreateResponse& WaveCreateResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsWaveCreateResponse();
  return *internal_default_instance();
}


void WaveCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.WaveCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&x_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool WaveCreateResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.WaveCreateResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angel = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angel_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.WaveCreateResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.WaveCreateResponse)
  return false;
#undef DO_
}

void WaveCreateResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.WaveCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->x(), output);
  }

  // float y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->y(), output);
  }

  // float z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->z(), output);
  }

  // float angel = 4;
  if (this->angel() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->angel(), output);
  }

  // fixed32 type = 5;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(5, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.WaveCreateResponse)
}

::google::protobuf::uint8* WaveCreateResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.WaveCreateResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->x(), target);
  }

  // float y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->y(), target);
  }

  // float z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->z(), target);
  }

  // float angel = 4;
  if (this->angel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->angel(), target);
  }

  // fixed32 type = 5;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(5, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.WaveCreateResponse)
  return target;
}

size_t WaveCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.WaveCreateResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float x = 1;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 2;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 3;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float angel = 4;
  if (this->angel() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 type = 5;
  if (this->type() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void WaveCreateResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.WaveCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WaveCreateResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const WaveCreateResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.WaveCreateResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.WaveCreateResponse)
    MergeFrom(*source);
  }
}

void WaveCreateResponse::MergeFrom(const WaveCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.WaveCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.angel() != 0) {
    set_angel(from.angel());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void WaveCreateResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.WaveCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WaveCreateResponse::CopyFrom(const WaveCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.WaveCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WaveCreateResponse::IsInitialized() const {
  return true;
}

void WaveCreateResponse::Swap(WaveCreateResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void WaveCreateResponse::InternalSwap(WaveCreateResponse* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(angel_, other->angel_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata WaveCreateResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitSceneRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitSceneRequest::ExitSceneRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsExitSceneRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.ExitSceneRequest)
}
ExitSceneRequest::ExitSceneRequest(const ExitSceneRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.ExitSceneRequest)
}

void ExitSceneRequest::SharedCtor() {
  _cached_size_ = 0;
}

ExitSceneRequest::~ExitSceneRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.ExitSceneRequest)
  SharedDtor();
}

void ExitSceneRequest::SharedDtor() {
}

void ExitSceneRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitSceneRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitSceneRequest& ExitSceneRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsExitSceneRequest();
  return *internal_default_instance();
}


void ExitSceneRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.ExitSceneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ExitSceneRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.ExitSceneRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.ExitSceneRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.ExitSceneRequest)
  return false;
#undef DO_
}

void ExitSceneRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.ExitSceneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.ExitSceneRequest)
}

::google::protobuf::uint8* ExitSceneRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.ExitSceneRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.ExitSceneRequest)
  return target;
}

size_t ExitSceneRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.ExitSceneRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitSceneRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.ExitSceneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitSceneRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitSceneRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.ExitSceneRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.ExitSceneRequest)
    MergeFrom(*source);
  }
}

void ExitSceneRequest::MergeFrom(const ExitSceneRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.ExitSceneRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExitSceneRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.ExitSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitSceneRequest::CopyFrom(const ExitSceneRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.ExitSceneRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitSceneRequest::IsInitialized() const {
  return true;
}

void ExitSceneRequest::Swap(ExitSceneRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitSceneRequest::InternalSwap(ExitSceneRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitSceneRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ExitSceneResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitSceneResponse::ExitSceneResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsExitSceneResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.ExitSceneResponse)
}
ExitSceneResponse::ExitSceneResponse(const ExitSceneResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.ExitSceneResponse)
}

void ExitSceneResponse::SharedCtor() {
  _cached_size_ = 0;
}

ExitSceneResponse::~ExitSceneResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.ExitSceneResponse)
  SharedDtor();
}

void ExitSceneResponse::SharedDtor() {
}

void ExitSceneResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitSceneResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ExitSceneResponse& ExitSceneResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsExitSceneResponse();
  return *internal_default_instance();
}


void ExitSceneResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.ExitSceneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool ExitSceneResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.ExitSceneResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.ExitSceneResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.ExitSceneResponse)
  return false;
#undef DO_
}

void ExitSceneResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.ExitSceneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.ExitSceneResponse)
}

::google::protobuf::uint8* ExitSceneResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.ExitSceneResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.ExitSceneResponse)
  return target;
}

size_t ExitSceneResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.ExitSceneResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitSceneResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.ExitSceneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitSceneResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitSceneResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.ExitSceneResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.ExitSceneResponse)
    MergeFrom(*source);
  }
}

void ExitSceneResponse::MergeFrom(const ExitSceneResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.ExitSceneResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ExitSceneResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.ExitSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitSceneResponse::CopyFrom(const ExitSceneResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.ExitSceneResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitSceneResponse::IsInitialized() const {
  return true;
}

void ExitSceneResponse::Swap(ExitSceneResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitSceneResponse::InternalSwap(ExitSceneResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitSceneResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeSyncRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeSyncRequest::TimeSyncRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsTimeSyncRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.TimeSyncRequest)
}
TimeSyncRequest::TimeSyncRequest(const TimeSyncRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.TimeSyncRequest)
}

void TimeSyncRequest::SharedCtor() {
  _cached_size_ = 0;
}

TimeSyncRequest::~TimeSyncRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.TimeSyncRequest)
  SharedDtor();
}

void TimeSyncRequest::SharedDtor() {
}

void TimeSyncRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeSyncRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeSyncRequest& TimeSyncRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsTimeSyncRequest();
  return *internal_default_instance();
}


void TimeSyncRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.TimeSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TimeSyncRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.TimeSyncRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.TimeSyncRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.TimeSyncRequest)
  return false;
#undef DO_
}

void TimeSyncRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.TimeSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.TimeSyncRequest)
}

::google::protobuf::uint8* TimeSyncRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.TimeSyncRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.TimeSyncRequest)
  return target;
}

size_t TimeSyncRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.TimeSyncRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeSyncRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.TimeSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeSyncRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeSyncRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.TimeSyncRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.TimeSyncRequest)
    MergeFrom(*source);
  }
}

void TimeSyncRequest::MergeFrom(const TimeSyncRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.TimeSyncRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TimeSyncRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.TimeSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeSyncRequest::CopyFrom(const TimeSyncRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.TimeSyncRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeSyncRequest::IsInitialized() const {
  return true;
}

void TimeSyncRequest::Swap(TimeSyncRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeSyncRequest::InternalSwap(TimeSyncRequest* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeSyncRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TimeSyncResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TimeSyncResponse::TimeSyncResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsTimeSyncResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.TimeSyncResponse)
}
TimeSyncResponse::TimeSyncResponse(const TimeSyncResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.TimeSyncResponse)
}

void TimeSyncResponse::SharedCtor() {
  _cached_size_ = 0;
}

TimeSyncResponse::~TimeSyncResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.TimeSyncResponse)
  SharedDtor();
}

void TimeSyncResponse::SharedDtor() {
}

void TimeSyncResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TimeSyncResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TimeSyncResponse& TimeSyncResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsTimeSyncResponse();
  return *internal_default_instance();
}


void TimeSyncResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.TimeSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool TimeSyncResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.TimeSyncResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.TimeSyncResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.TimeSyncResponse)
  return false;
#undef DO_
}

void TimeSyncResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.TimeSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.TimeSyncResponse)
}

::google::protobuf::uint8* TimeSyncResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.TimeSyncResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.TimeSyncResponse)
  return target;
}

size_t TimeSyncResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.TimeSyncResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TimeSyncResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.TimeSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeSyncResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TimeSyncResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.TimeSyncResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.TimeSyncResponse)
    MergeFrom(*source);
  }
}

void TimeSyncResponse::MergeFrom(const TimeSyncResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.TimeSyncResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TimeSyncResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.TimeSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeSyncResponse::CopyFrom(const TimeSyncResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.TimeSyncResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeSyncResponse::IsInitialized() const {
  return true;
}

void TimeSyncResponse::Swap(TimeSyncResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TimeSyncResponse::InternalSwap(TimeSyncResponse* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TimeSyncResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaneDestroyRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneDestroyRequest::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneDestroyRequest::PlaneDestroyRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsPlaneDestroyRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.PlaneDestroyRequest)
}
PlaneDestroyRequest::PlaneDestroyRequest(const PlaneDestroyRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_id_ = from.index_id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.PlaneDestroyRequest)
}

void PlaneDestroyRequest::SharedCtor() {
  index_id_ = 0u;
  _cached_size_ = 0;
}

PlaneDestroyRequest::~PlaneDestroyRequest() {
  // @@protoc_insertion_point(destructor:ProtoMsg.PlaneDestroyRequest)
  SharedDtor();
}

void PlaneDestroyRequest::SharedDtor() {
}

void PlaneDestroyRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaneDestroyRequest::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaneDestroyRequest& PlaneDestroyRequest::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsPlaneDestroyRequest();
  return *internal_default_instance();
}


void PlaneDestroyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.PlaneDestroyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlaneDestroyRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.PlaneDestroyRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 index_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.PlaneDestroyRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.PlaneDestroyRequest)
  return false;
#undef DO_
}

void PlaneDestroyRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.PlaneDestroyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 index_id = 1;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->index_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.PlaneDestroyRequest)
}

::google::protobuf::uint8* PlaneDestroyRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.PlaneDestroyRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 index_id = 1;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->index_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.PlaneDestroyRequest)
  return target;
}

size_t PlaneDestroyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.PlaneDestroyRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 index_id = 1;
  if (this->index_id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaneDestroyRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.PlaneDestroyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneDestroyRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaneDestroyRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.PlaneDestroyRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.PlaneDestroyRequest)
    MergeFrom(*source);
  }
}

void PlaneDestroyRequest::MergeFrom(const PlaneDestroyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.PlaneDestroyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
}

void PlaneDestroyRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.PlaneDestroyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneDestroyRequest::CopyFrom(const PlaneDestroyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.PlaneDestroyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneDestroyRequest::IsInitialized() const {
  return true;
}

void PlaneDestroyRequest::Swap(PlaneDestroyRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneDestroyRequest::InternalSwap(PlaneDestroyRequest* other) {
  using std::swap;
  swap(index_id_, other->index_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaneDestroyRequest::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlaneDestroyResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlaneDestroyResponse::kIndexIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlaneDestroyResponse::PlaneDestroyResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsPlaneDestroyResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.PlaneDestroyResponse)
}
PlaneDestroyResponse::PlaneDestroyResponse(const PlaneDestroyResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_id_ = from.index_id_;
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.PlaneDestroyResponse)
}

void PlaneDestroyResponse::SharedCtor() {
  index_id_ = 0u;
  _cached_size_ = 0;
}

PlaneDestroyResponse::~PlaneDestroyResponse() {
  // @@protoc_insertion_point(destructor:ProtoMsg.PlaneDestroyResponse)
  SharedDtor();
}

void PlaneDestroyResponse::SharedDtor() {
}

void PlaneDestroyResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlaneDestroyResponse::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlaneDestroyResponse& PlaneDestroyResponse::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsPlaneDestroyResponse();
  return *internal_default_instance();
}


void PlaneDestroyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.PlaneDestroyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  index_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlaneDestroyResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.PlaneDestroyResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // fixed32 index_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &index_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.PlaneDestroyResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.PlaneDestroyResponse)
  return false;
#undef DO_
}

void PlaneDestroyResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.PlaneDestroyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 index_id = 1;
  if (this->index_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(1, this->index_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.PlaneDestroyResponse)
}

::google::protobuf::uint8* PlaneDestroyResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.PlaneDestroyResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // fixed32 index_id = 1;
  if (this->index_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(1, this->index_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.PlaneDestroyResponse)
  return target;
}

size_t PlaneDestroyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.PlaneDestroyResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // fixed32 index_id = 1;
  if (this->index_id() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlaneDestroyResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.PlaneDestroyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PlaneDestroyResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlaneDestroyResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.PlaneDestroyResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.PlaneDestroyResponse)
    MergeFrom(*source);
  }
}

void PlaneDestroyResponse::MergeFrom(const PlaneDestroyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.PlaneDestroyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index_id() != 0) {
    set_index_id(from.index_id());
  }
}

void PlaneDestroyResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.PlaneDestroyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlaneDestroyResponse::CopyFrom(const PlaneDestroyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.PlaneDestroyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlaneDestroyResponse::IsInitialized() const {
  return true;
}

void PlaneDestroyResponse::Swap(PlaneDestroyResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlaneDestroyResponse::InternalSwap(PlaneDestroyResponse* other) {
  using std::swap;
  swap(index_id_, other->index_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlaneDestroyResponse::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Request::InitAsDefaultInstance() {
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->login_ = const_cast< ::ProtoMsg::LoginRequest*>(
      ::ProtoMsg::LoginRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->logout_ = const_cast< ::ProtoMsg::LogoutRequest*>(
      ::ProtoMsg::LogoutRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->register__ = const_cast< ::ProtoMsg::RegisterResquest*>(
      ::ProtoMsg::RegisterResquest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->echo_ = const_cast< ::ProtoMsg::EchoRequest*>(
      ::ProtoMsg::EchoRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->cube_operate_ = const_cast< ::ProtoMsg::CubeOperateRequest*>(
      ::ProtoMsg::CubeOperateRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->scene_change_complete_ = const_cast< ::ProtoMsg::SceneChangeCompleteRequest*>(
      ::ProtoMsg::SceneChangeCompleteRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->match_begin_ = const_cast< ::ProtoMsg::MatchBeginRequest*>(
      ::ProtoMsg::MatchBeginRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->match_complete_ = const_cast< ::ProtoMsg::MatchCompleteRequest*>(
      ::ProtoMsg::MatchCompleteRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->match_cancel_ = const_cast< ::ProtoMsg::MatchCancelRequest*>(
      ::ProtoMsg::MatchCancelRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->plane_operate_ = const_cast< ::ProtoMsg::PlaneOperateRequest*>(
      ::ProtoMsg::PlaneOperateRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->exit_scene_ = const_cast< ::ProtoMsg::ExitSceneRequest*>(
      ::ProtoMsg::ExitSceneRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->time_sync_ = const_cast< ::ProtoMsg::TimeSyncRequest*>(
      ::ProtoMsg::TimeSyncRequest::internal_default_instance());
  ::ProtoMsg::_Request_default_instance_._instance.get_mutable()->plane_destroy_ = const_cast< ::ProtoMsg::PlaneDestroyRequest*>(
      ::ProtoMsg::PlaneDestroyRequest::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kLoginFieldNumber;
const int Request::kLogoutFieldNumber;
const int Request::kRegisterFieldNumber;
const int Request::kEchoFieldNumber;
const int Request::kCubeOperateFieldNumber;
const int Request::kSceneChangeCompleteFieldNumber;
const int Request::kMatchBeginFieldNumber;
const int Request::kMatchCompleteFieldNumber;
const int Request::kMatchCancelFieldNumber;
const int Request::kPlaneOperateFieldNumber;
const int Request::kExitSceneFieldNumber;
const int Request::kTimeSyncFieldNumber;
const int Request::kPlaneDestroyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.Request)
}
Request::Request(const Request& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_login()) {
    login_ = new ::ProtoMsg::LoginRequest(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_logout()) {
    logout_ = new ::ProtoMsg::LogoutRequest(*from.logout_);
  } else {
    logout_ = NULL;
  }
  if (from.has_register_()) {
    register__ = new ::ProtoMsg::RegisterResquest(*from.register__);
  } else {
    register__ = NULL;
  }
  if (from.has_echo()) {
    echo_ = new ::ProtoMsg::EchoRequest(*from.echo_);
  } else {
    echo_ = NULL;
  }
  if (from.has_cube_operate()) {
    cube_operate_ = new ::ProtoMsg::CubeOperateRequest(*from.cube_operate_);
  } else {
    cube_operate_ = NULL;
  }
  if (from.has_scene_change_complete()) {
    scene_change_complete_ = new ::ProtoMsg::SceneChangeCompleteRequest(*from.scene_change_complete_);
  } else {
    scene_change_complete_ = NULL;
  }
  if (from.has_match_begin()) {
    match_begin_ = new ::ProtoMsg::MatchBeginRequest(*from.match_begin_);
  } else {
    match_begin_ = NULL;
  }
  if (from.has_match_complete()) {
    match_complete_ = new ::ProtoMsg::MatchCompleteRequest(*from.match_complete_);
  } else {
    match_complete_ = NULL;
  }
  if (from.has_match_cancel()) {
    match_cancel_ = new ::ProtoMsg::MatchCancelRequest(*from.match_cancel_);
  } else {
    match_cancel_ = NULL;
  }
  if (from.has_plane_operate()) {
    plane_operate_ = new ::ProtoMsg::PlaneOperateRequest(*from.plane_operate_);
  } else {
    plane_operate_ = NULL;
  }
  if (from.has_exit_scene()) {
    exit_scene_ = new ::ProtoMsg::ExitSceneRequest(*from.exit_scene_);
  } else {
    exit_scene_ = NULL;
  }
  if (from.has_time_sync()) {
    time_sync_ = new ::ProtoMsg::TimeSyncRequest(*from.time_sync_);
  } else {
    time_sync_ = NULL;
  }
  if (from.has_plane_destroy()) {
    plane_destroy_ = new ::ProtoMsg::PlaneDestroyRequest(*from.plane_destroy_);
  } else {
    plane_destroy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Request)
}

void Request::SharedCtor() {
  ::memset(&login_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plane_destroy_) -
      reinterpret_cast<char*>(&login_)) + sizeof(plane_destroy_));
  _cached_size_ = 0;
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Request)
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != internal_default_instance()) delete login_;
  if (this != internal_default_instance()) delete logout_;
  if (this != internal_default_instance()) delete register__;
  if (this != internal_default_instance()) delete echo_;
  if (this != internal_default_instance()) delete cube_operate_;
  if (this != internal_default_instance()) delete scene_change_complete_;
  if (this != internal_default_instance()) delete match_begin_;
  if (this != internal_default_instance()) delete match_complete_;
  if (this != internal_default_instance()) delete match_cancel_;
  if (this != internal_default_instance()) delete plane_operate_;
  if (this != internal_default_instance()) delete exit_scene_;
  if (this != internal_default_instance()) delete time_sync_;
  if (this != internal_default_instance()) delete plane_destroy_;
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Request& Request::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsRequest();
  return *internal_default_instance();
}


void Request::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
  if (GetArenaNoVirtual() == NULL && logout_ != NULL) {
    delete logout_;
  }
  logout_ = NULL;
  if (GetArenaNoVirtual() == NULL && register__ != NULL) {
    delete register__;
  }
  register__ = NULL;
  if (GetArenaNoVirtual() == NULL && echo_ != NULL) {
    delete echo_;
  }
  echo_ = NULL;
  if (GetArenaNoVirtual() == NULL && cube_operate_ != NULL) {
    delete cube_operate_;
  }
  cube_operate_ = NULL;
  if (GetArenaNoVirtual() == NULL && scene_change_complete_ != NULL) {
    delete scene_change_complete_;
  }
  scene_change_complete_ = NULL;
  if (GetArenaNoVirtual() == NULL && match_begin_ != NULL) {
    delete match_begin_;
  }
  match_begin_ = NULL;
  if (GetArenaNoVirtual() == NULL && match_complete_ != NULL) {
    delete match_complete_;
  }
  match_complete_ = NULL;
  if (GetArenaNoVirtual() == NULL && match_cancel_ != NULL) {
    delete match_cancel_;
  }
  match_cancel_ = NULL;
  if (GetArenaNoVirtual() == NULL && plane_operate_ != NULL) {
    delete plane_operate_;
  }
  plane_operate_ = NULL;
  if (GetArenaNoVirtual() == NULL && exit_scene_ != NULL) {
    delete exit_scene_;
  }
  exit_scene_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_sync_ != NULL) {
    delete time_sync_;
  }
  time_sync_ = NULL;
  if (GetArenaNoVirtual() == NULL && plane_destroy_ != NULL) {
    delete plane_destroy_;
  }
  plane_destroy_ = NULL;
  _internal_metadata_.Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoMsg.LoginRequest login = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.LogoutRequest logout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.RegisterResquest register = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.EchoRequest echo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_echo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.CubeOperateRequest cube_operate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cube_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.SceneChangeCompleteRequest scene_change_complete = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scene_change_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.MatchBeginRequest match_begin = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.MatchCompleteRequest match_complete = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.MatchCancelRequest match_cancel = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_cancel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.PlaneOperateRequest plane_operate = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plane_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.ExitSceneRequest exit_scene = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exit_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.TimeSyncRequest time_sync = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_sync()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.PlaneDestroyRequest plane_destroy = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plane_destroy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.LoginRequest login = 1;
  if (this->has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *login_, output);
  }

  // .ProtoMsg.LogoutRequest logout = 2;
  if (this->has_logout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *logout_, output);
  }

  // .ProtoMsg.RegisterResquest register = 3;
  if (this->has_register_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *register__, output);
  }

  // .ProtoMsg.EchoRequest echo = 4;
  if (this->has_echo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *echo_, output);
  }

  // .ProtoMsg.CubeOperateRequest cube_operate = 5;
  if (this->has_cube_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *cube_operate_, output);
  }

  // .ProtoMsg.SceneChangeCompleteRequest scene_change_complete = 6;
  if (this->has_scene_change_complete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *scene_change_complete_, output);
  }

  // .ProtoMsg.MatchBeginRequest match_begin = 7;
  if (this->has_match_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *match_begin_, output);
  }

  // .ProtoMsg.MatchCompleteRequest match_complete = 8;
  if (this->has_match_complete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *match_complete_, output);
  }

  // .ProtoMsg.MatchCancelRequest match_cancel = 9;
  if (this->has_match_cancel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *match_cancel_, output);
  }

  // .ProtoMsg.PlaneOperateRequest plane_operate = 10;
  if (this->has_plane_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *plane_operate_, output);
  }

  // .ProtoMsg.ExitSceneRequest exit_scene = 11;
  if (this->has_exit_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *exit_scene_, output);
  }

  // .ProtoMsg.TimeSyncRequest time_sync = 12;
  if (this->has_time_sync()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *time_sync_, output);
  }

  // .ProtoMsg.PlaneDestroyRequest plane_destroy = 13;
  if (this->has_plane_destroy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *plane_destroy_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.Request)
}

::google::protobuf::uint8* Request::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Request)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.LoginRequest login = 1;
  if (this->has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *login_, deterministic, target);
  }

  // .ProtoMsg.LogoutRequest logout = 2;
  if (this->has_logout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *logout_, deterministic, target);
  }

  // .ProtoMsg.RegisterResquest register = 3;
  if (this->has_register_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *register__, deterministic, target);
  }

  // .ProtoMsg.EchoRequest echo = 4;
  if (this->has_echo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *echo_, deterministic, target);
  }

  // .ProtoMsg.CubeOperateRequest cube_operate = 5;
  if (this->has_cube_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *cube_operate_, deterministic, target);
  }

  // .ProtoMsg.SceneChangeCompleteRequest scene_change_complete = 6;
  if (this->has_scene_change_complete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *scene_change_complete_, deterministic, target);
  }

  // .ProtoMsg.MatchBeginRequest match_begin = 7;
  if (this->has_match_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *match_begin_, deterministic, target);
  }

  // .ProtoMsg.MatchCompleteRequest match_complete = 8;
  if (this->has_match_complete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *match_complete_, deterministic, target);
  }

  // .ProtoMsg.MatchCancelRequest match_cancel = 9;
  if (this->has_match_cancel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *match_cancel_, deterministic, target);
  }

  // .ProtoMsg.PlaneOperateRequest plane_operate = 10;
  if (this->has_plane_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *plane_operate_, deterministic, target);
  }

  // .ProtoMsg.ExitSceneRequest exit_scene = 11;
  if (this->has_exit_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *exit_scene_, deterministic, target);
  }

  // .ProtoMsg.TimeSyncRequest time_sync = 12;
  if (this->has_time_sync()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *time_sync_, deterministic, target);
  }

  // .ProtoMsg.PlaneDestroyRequest plane_destroy = 13;
  if (this->has_plane_destroy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *plane_destroy_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Request)
  return target;
}

size_t Request::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Request)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoMsg.LoginRequest login = 1;
  if (this->has_login()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *login_);
  }

  // .ProtoMsg.LogoutRequest logout = 2;
  if (this->has_logout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logout_);
  }

  // .ProtoMsg.RegisterResquest register = 3;
  if (this->has_register_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *register__);
  }

  // .ProtoMsg.EchoRequest echo = 4;
  if (this->has_echo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *echo_);
  }

  // .ProtoMsg.CubeOperateRequest cube_operate = 5;
  if (this->has_cube_operate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cube_operate_);
  }

  // .ProtoMsg.SceneChangeCompleteRequest scene_change_complete = 6;
  if (this->has_scene_change_complete()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scene_change_complete_);
  }

  // .ProtoMsg.MatchBeginRequest match_begin = 7;
  if (this->has_match_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_begin_);
  }

  // .ProtoMsg.MatchCompleteRequest match_complete = 8;
  if (this->has_match_complete()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_complete_);
  }

  // .ProtoMsg.MatchCancelRequest match_cancel = 9;
  if (this->has_match_cancel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_cancel_);
  }

  // .ProtoMsg.PlaneOperateRequest plane_operate = 10;
  if (this->has_plane_operate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plane_operate_);
  }

  // .ProtoMsg.ExitSceneRequest exit_scene = 11;
  if (this->has_exit_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exit_scene_);
  }

  // .ProtoMsg.TimeSyncRequest time_sync = 12;
  if (this->has_time_sync()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_sync_);
  }

  // .ProtoMsg.PlaneDestroyRequest plane_destroy = 13;
  if (this->has_plane_destroy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plane_destroy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.Request)
  GOOGLE_DCHECK_NE(&from, this);
  const Request* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.Request)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.Request)
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Request)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_login()) {
    mutable_login()->::ProtoMsg::LoginRequest::MergeFrom(from.login());
  }
  if (from.has_logout()) {
    mutable_logout()->::ProtoMsg::LogoutRequest::MergeFrom(from.logout());
  }
  if (from.has_register_()) {
    mutable_register_()->::ProtoMsg::RegisterResquest::MergeFrom(from.register_());
  }
  if (from.has_echo()) {
    mutable_echo()->::ProtoMsg::EchoRequest::MergeFrom(from.echo());
  }
  if (from.has_cube_operate()) {
    mutable_cube_operate()->::ProtoMsg::CubeOperateRequest::MergeFrom(from.cube_operate());
  }
  if (from.has_scene_change_complete()) {
    mutable_scene_change_complete()->::ProtoMsg::SceneChangeCompleteRequest::MergeFrom(from.scene_change_complete());
  }
  if (from.has_match_begin()) {
    mutable_match_begin()->::ProtoMsg::MatchBeginRequest::MergeFrom(from.match_begin());
  }
  if (from.has_match_complete()) {
    mutable_match_complete()->::ProtoMsg::MatchCompleteRequest::MergeFrom(from.match_complete());
  }
  if (from.has_match_cancel()) {
    mutable_match_cancel()->::ProtoMsg::MatchCancelRequest::MergeFrom(from.match_cancel());
  }
  if (from.has_plane_operate()) {
    mutable_plane_operate()->::ProtoMsg::PlaneOperateRequest::MergeFrom(from.plane_operate());
  }
  if (from.has_exit_scene()) {
    mutable_exit_scene()->::ProtoMsg::ExitSceneRequest::MergeFrom(from.exit_scene());
  }
  if (from.has_time_sync()) {
    mutable_time_sync()->::ProtoMsg::TimeSyncRequest::MergeFrom(from.time_sync());
  }
  if (from.has_plane_destroy()) {
    mutable_plane_destroy()->::ProtoMsg::PlaneDestroyRequest::MergeFrom(from.plane_destroy());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  using std::swap;
  swap(login_, other->login_);
  swap(logout_, other->logout_);
  swap(register__, other->register__);
  swap(echo_, other->echo_);
  swap(cube_operate_, other->cube_operate_);
  swap(scene_change_complete_, other->scene_change_complete_);
  swap(match_begin_, other->match_begin_);
  swap(match_complete_, other->match_complete_);
  swap(match_cancel_, other->match_cancel_);
  swap(plane_operate_, other->plane_operate_);
  swap(exit_scene_, other->exit_scene_);
  swap(time_sync_, other->time_sync_);
  swap(plane_destroy_, other->plane_destroy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Response::InitAsDefaultInstance() {
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->login_ = const_cast< ::ProtoMsg::LoginResponse*>(
      ::ProtoMsg::LoginResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->logout_ = const_cast< ::ProtoMsg::LogoutResponse*>(
      ::ProtoMsg::LogoutResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->register__ = const_cast< ::ProtoMsg::RegisterResponse*>(
      ::ProtoMsg::RegisterResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->cube_operate_ = const_cast< ::ProtoMsg::CubeOperateResponse*>(
      ::ProtoMsg::CubeOperateResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->scene_change_complete_ = const_cast< ::ProtoMsg::SceneChangeCompleteResponse*>(
      ::ProtoMsg::SceneChangeCompleteResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->cube_create_response_ = const_cast< ::ProtoMsg::CubeCreateResponse*>(
      ::ProtoMsg::CubeCreateResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->cube_delete_response_ = const_cast< ::ProtoMsg::CubeDeleteResponse*>(
      ::ProtoMsg::CubeDeleteResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->match_begin_ = const_cast< ::ProtoMsg::MatchBeginResponse*>(
      ::ProtoMsg::MatchBeginResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->match_complete_ = const_cast< ::ProtoMsg::MatchCompleteResponse*>(
      ::ProtoMsg::MatchCompleteResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->match_cancel_ = const_cast< ::ProtoMsg::MatchCancelResponse*>(
      ::ProtoMsg::MatchCancelResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->plane_operate_ = const_cast< ::ProtoMsg::PlaneOperateResponse*>(
      ::ProtoMsg::PlaneOperateResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->wave_create_ = const_cast< ::ProtoMsg::WaveCreateResponse*>(
      ::ProtoMsg::WaveCreateResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->exit_scene_ = const_cast< ::ProtoMsg::ExitSceneResponse*>(
      ::ProtoMsg::ExitSceneResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->time_sync_ = const_cast< ::ProtoMsg::TimeSyncResponse*>(
      ::ProtoMsg::TimeSyncResponse::internal_default_instance());
  ::ProtoMsg::_Response_default_instance_._instance.get_mutable()->plane_destroy_ = const_cast< ::ProtoMsg::PlaneDestroyResponse*>(
      ::ProtoMsg::PlaneDestroyResponse::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Response::kLoginFieldNumber;
const int Response::kLogoutFieldNumber;
const int Response::kRegisterFieldNumber;
const int Response::kCubeOperateFieldNumber;
const int Response::kSceneChangeCompleteFieldNumber;
const int Response::kCubeCreateResponseFieldNumber;
const int Response::kCubeDeleteResponseFieldNumber;
const int Response::kMatchBeginFieldNumber;
const int Response::kMatchCompleteFieldNumber;
const int Response::kMatchCancelFieldNumber;
const int Response::kPlaneOperateFieldNumber;
const int Response::kWaveCreateFieldNumber;
const int Response::kExitSceneFieldNumber;
const int Response::kTimeSyncFieldNumber;
const int Response::kPlaneDestroyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Response::Response()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsResponse();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.Response)
}
Response::Response(const Response& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_login()) {
    login_ = new ::ProtoMsg::LoginResponse(*from.login_);
  } else {
    login_ = NULL;
  }
  if (from.has_logout()) {
    logout_ = new ::ProtoMsg::LogoutResponse(*from.logout_);
  } else {
    logout_ = NULL;
  }
  if (from.has_register_()) {
    register__ = new ::ProtoMsg::RegisterResponse(*from.register__);
  } else {
    register__ = NULL;
  }
  if (from.has_cube_operate()) {
    cube_operate_ = new ::ProtoMsg::CubeOperateResponse(*from.cube_operate_);
  } else {
    cube_operate_ = NULL;
  }
  if (from.has_scene_change_complete()) {
    scene_change_complete_ = new ::ProtoMsg::SceneChangeCompleteResponse(*from.scene_change_complete_);
  } else {
    scene_change_complete_ = NULL;
  }
  if (from.has_cube_create_response()) {
    cube_create_response_ = new ::ProtoMsg::CubeCreateResponse(*from.cube_create_response_);
  } else {
    cube_create_response_ = NULL;
  }
  if (from.has_cube_delete_response()) {
    cube_delete_response_ = new ::ProtoMsg::CubeDeleteResponse(*from.cube_delete_response_);
  } else {
    cube_delete_response_ = NULL;
  }
  if (from.has_match_begin()) {
    match_begin_ = new ::ProtoMsg::MatchBeginResponse(*from.match_begin_);
  } else {
    match_begin_ = NULL;
  }
  if (from.has_match_complete()) {
    match_complete_ = new ::ProtoMsg::MatchCompleteResponse(*from.match_complete_);
  } else {
    match_complete_ = NULL;
  }
  if (from.has_match_cancel()) {
    match_cancel_ = new ::ProtoMsg::MatchCancelResponse(*from.match_cancel_);
  } else {
    match_cancel_ = NULL;
  }
  if (from.has_plane_operate()) {
    plane_operate_ = new ::ProtoMsg::PlaneOperateResponse(*from.plane_operate_);
  } else {
    plane_operate_ = NULL;
  }
  if (from.has_wave_create()) {
    wave_create_ = new ::ProtoMsg::WaveCreateResponse(*from.wave_create_);
  } else {
    wave_create_ = NULL;
  }
  if (from.has_exit_scene()) {
    exit_scene_ = new ::ProtoMsg::ExitSceneResponse(*from.exit_scene_);
  } else {
    exit_scene_ = NULL;
  }
  if (from.has_time_sync()) {
    time_sync_ = new ::ProtoMsg::TimeSyncResponse(*from.time_sync_);
  } else {
    time_sync_ = NULL;
  }
  if (from.has_plane_destroy()) {
    plane_destroy_ = new ::ProtoMsg::PlaneDestroyResponse(*from.plane_destroy_);
  } else {
    plane_destroy_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Response)
}

void Response::SharedCtor() {
  ::memset(&login_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&plane_destroy_) -
      reinterpret_cast<char*>(&login_)) + sizeof(plane_destroy_));
  _cached_size_ = 0;
}

Response::~Response() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Response)
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != internal_default_instance()) delete login_;
  if (this != internal_default_instance()) delete logout_;
  if (this != internal_default_instance()) delete register__;
  if (this != internal_default_instance()) delete cube_operate_;
  if (this != internal_default_instance()) delete scene_change_complete_;
  if (this != internal_default_instance()) delete cube_create_response_;
  if (this != internal_default_instance()) delete cube_delete_response_;
  if (this != internal_default_instance()) delete match_begin_;
  if (this != internal_default_instance()) delete match_complete_;
  if (this != internal_default_instance()) delete match_cancel_;
  if (this != internal_default_instance()) delete plane_operate_;
  if (this != internal_default_instance()) delete wave_create_;
  if (this != internal_default_instance()) delete exit_scene_;
  if (this != internal_default_instance()) delete time_sync_;
  if (this != internal_default_instance()) delete plane_destroy_;
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Response& Response::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsResponse();
  return *internal_default_instance();
}


void Response::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
  if (GetArenaNoVirtual() == NULL && logout_ != NULL) {
    delete logout_;
  }
  logout_ = NULL;
  if (GetArenaNoVirtual() == NULL && register__ != NULL) {
    delete register__;
  }
  register__ = NULL;
  if (GetArenaNoVirtual() == NULL && cube_operate_ != NULL) {
    delete cube_operate_;
  }
  cube_operate_ = NULL;
  if (GetArenaNoVirtual() == NULL && scene_change_complete_ != NULL) {
    delete scene_change_complete_;
  }
  scene_change_complete_ = NULL;
  if (GetArenaNoVirtual() == NULL && cube_create_response_ != NULL) {
    delete cube_create_response_;
  }
  cube_create_response_ = NULL;
  if (GetArenaNoVirtual() == NULL && cube_delete_response_ != NULL) {
    delete cube_delete_response_;
  }
  cube_delete_response_ = NULL;
  if (GetArenaNoVirtual() == NULL && match_begin_ != NULL) {
    delete match_begin_;
  }
  match_begin_ = NULL;
  if (GetArenaNoVirtual() == NULL && match_complete_ != NULL) {
    delete match_complete_;
  }
  match_complete_ = NULL;
  if (GetArenaNoVirtual() == NULL && match_cancel_ != NULL) {
    delete match_cancel_;
  }
  match_cancel_ = NULL;
  if (GetArenaNoVirtual() == NULL && plane_operate_ != NULL) {
    delete plane_operate_;
  }
  plane_operate_ = NULL;
  if (GetArenaNoVirtual() == NULL && wave_create_ != NULL) {
    delete wave_create_;
  }
  wave_create_ = NULL;
  if (GetArenaNoVirtual() == NULL && exit_scene_ != NULL) {
    delete exit_scene_;
  }
  exit_scene_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_sync_ != NULL) {
    delete time_sync_;
  }
  time_sync_ = NULL;
  if (GetArenaNoVirtual() == NULL && plane_destroy_ != NULL) {
    delete plane_destroy_;
  }
  plane_destroy_ = NULL;
  _internal_metadata_.Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.Response)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoMsg.LoginResponse login = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_login()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.LogoutResponse logout = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_logout()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.RegisterResponse register = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_register_()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.CubeOperateResponse cube_operate = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cube_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.SceneChangeCompleteResponse scene_change_complete = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_scene_change_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.CubeCreateResponse cube_create_response = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cube_create_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.CubeDeleteResponse cube_delete_Response = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cube_delete_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.MatchBeginResponse match_begin = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_begin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.MatchCompleteResponse match_complete = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_complete()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.MatchCancelResponse match_cancel = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_match_cancel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.PlaneOperateResponse plane_operate = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plane_operate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.WaveCreateResponse wave_create = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_wave_create()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.ExitSceneResponse exit_scene = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_exit_scene()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.TimeSyncResponse time_sync = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_sync()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.PlaneDestroyResponse plane_destroy = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_plane_destroy()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.Response)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.Response)
  return false;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.LoginResponse login = 1;
  if (this->has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *login_, output);
  }

  // .ProtoMsg.LogoutResponse logout = 2;
  if (this->has_logout()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *logout_, output);
  }

  // .ProtoMsg.RegisterResponse register = 3;
  if (this->has_register_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *register__, output);
  }

  // .ProtoMsg.CubeOperateResponse cube_operate = 4;
  if (this->has_cube_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *cube_operate_, output);
  }

  // .ProtoMsg.SceneChangeCompleteResponse scene_change_complete = 5;
  if (this->has_scene_change_complete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *scene_change_complete_, output);
  }

  // .ProtoMsg.CubeCreateResponse cube_create_response = 6;
  if (this->has_cube_create_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *cube_create_response_, output);
  }

  // .ProtoMsg.CubeDeleteResponse cube_delete_Response = 7;
  if (this->has_cube_delete_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *cube_delete_response_, output);
  }

  // .ProtoMsg.MatchBeginResponse match_begin = 8;
  if (this->has_match_begin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *match_begin_, output);
  }

  // .ProtoMsg.MatchCompleteResponse match_complete = 9;
  if (this->has_match_complete()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *match_complete_, output);
  }

  // .ProtoMsg.MatchCancelResponse match_cancel = 10;
  if (this->has_match_cancel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *match_cancel_, output);
  }

  // .ProtoMsg.PlaneOperateResponse plane_operate = 11;
  if (this->has_plane_operate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *plane_operate_, output);
  }

  // .ProtoMsg.WaveCreateResponse wave_create = 12;
  if (this->has_wave_create()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *wave_create_, output);
  }

  // .ProtoMsg.ExitSceneResponse exit_scene = 13;
  if (this->has_exit_scene()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *exit_scene_, output);
  }

  // .ProtoMsg.TimeSyncResponse time_sync = 14;
  if (this->has_time_sync()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *time_sync_, output);
  }

  // .ProtoMsg.PlaneDestroyResponse plane_destroy = 15;
  if (this->has_plane_destroy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *plane_destroy_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.Response)
}

::google::protobuf::uint8* Response::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Response)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.LoginResponse login = 1;
  if (this->has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *login_, deterministic, target);
  }

  // .ProtoMsg.LogoutResponse logout = 2;
  if (this->has_logout()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *logout_, deterministic, target);
  }

  // .ProtoMsg.RegisterResponse register = 3;
  if (this->has_register_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *register__, deterministic, target);
  }

  // .ProtoMsg.CubeOperateResponse cube_operate = 4;
  if (this->has_cube_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *cube_operate_, deterministic, target);
  }

  // .ProtoMsg.SceneChangeCompleteResponse scene_change_complete = 5;
  if (this->has_scene_change_complete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *scene_change_complete_, deterministic, target);
  }

  // .ProtoMsg.CubeCreateResponse cube_create_response = 6;
  if (this->has_cube_create_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *cube_create_response_, deterministic, target);
  }

  // .ProtoMsg.CubeDeleteResponse cube_delete_Response = 7;
  if (this->has_cube_delete_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *cube_delete_response_, deterministic, target);
  }

  // .ProtoMsg.MatchBeginResponse match_begin = 8;
  if (this->has_match_begin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *match_begin_, deterministic, target);
  }

  // .ProtoMsg.MatchCompleteResponse match_complete = 9;
  if (this->has_match_complete()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *match_complete_, deterministic, target);
  }

  // .ProtoMsg.MatchCancelResponse match_cancel = 10;
  if (this->has_match_cancel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        10, *match_cancel_, deterministic, target);
  }

  // .ProtoMsg.PlaneOperateResponse plane_operate = 11;
  if (this->has_plane_operate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11, *plane_operate_, deterministic, target);
  }

  // .ProtoMsg.WaveCreateResponse wave_create = 12;
  if (this->has_wave_create()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, *wave_create_, deterministic, target);
  }

  // .ProtoMsg.ExitSceneResponse exit_scene = 13;
  if (this->has_exit_scene()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, *exit_scene_, deterministic, target);
  }

  // .ProtoMsg.TimeSyncResponse time_sync = 14;
  if (this->has_time_sync()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14, *time_sync_, deterministic, target);
  }

  // .ProtoMsg.PlaneDestroyResponse plane_destroy = 15;
  if (this->has_plane_destroy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15, *plane_destroy_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Response)
  return target;
}

size_t Response::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Response)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoMsg.LoginResponse login = 1;
  if (this->has_login()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *login_);
  }

  // .ProtoMsg.LogoutResponse logout = 2;
  if (this->has_logout()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *logout_);
  }

  // .ProtoMsg.RegisterResponse register = 3;
  if (this->has_register_()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *register__);
  }

  // .ProtoMsg.CubeOperateResponse cube_operate = 4;
  if (this->has_cube_operate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cube_operate_);
  }

  // .ProtoMsg.SceneChangeCompleteResponse scene_change_complete = 5;
  if (this->has_scene_change_complete()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *scene_change_complete_);
  }

  // .ProtoMsg.CubeCreateResponse cube_create_response = 6;
  if (this->has_cube_create_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cube_create_response_);
  }

  // .ProtoMsg.CubeDeleteResponse cube_delete_Response = 7;
  if (this->has_cube_delete_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *cube_delete_response_);
  }

  // .ProtoMsg.MatchBeginResponse match_begin = 8;
  if (this->has_match_begin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_begin_);
  }

  // .ProtoMsg.MatchCompleteResponse match_complete = 9;
  if (this->has_match_complete()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_complete_);
  }

  // .ProtoMsg.MatchCancelResponse match_cancel = 10;
  if (this->has_match_cancel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *match_cancel_);
  }

  // .ProtoMsg.PlaneOperateResponse plane_operate = 11;
  if (this->has_plane_operate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plane_operate_);
  }

  // .ProtoMsg.WaveCreateResponse wave_create = 12;
  if (this->has_wave_create()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *wave_create_);
  }

  // .ProtoMsg.ExitSceneResponse exit_scene = 13;
  if (this->has_exit_scene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *exit_scene_);
  }

  // .ProtoMsg.TimeSyncResponse time_sync = 14;
  if (this->has_time_sync()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *time_sync_);
  }

  // .ProtoMsg.PlaneDestroyResponse plane_destroy = 15;
  if (this->has_plane_destroy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *plane_destroy_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.Response)
  GOOGLE_DCHECK_NE(&from, this);
  const Response* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Response>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.Response)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.Response)
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Response)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_login()) {
    mutable_login()->::ProtoMsg::LoginResponse::MergeFrom(from.login());
  }
  if (from.has_logout()) {
    mutable_logout()->::ProtoMsg::LogoutResponse::MergeFrom(from.logout());
  }
  if (from.has_register_()) {
    mutable_register_()->::ProtoMsg::RegisterResponse::MergeFrom(from.register_());
  }
  if (from.has_cube_operate()) {
    mutable_cube_operate()->::ProtoMsg::CubeOperateResponse::MergeFrom(from.cube_operate());
  }
  if (from.has_scene_change_complete()) {
    mutable_scene_change_complete()->::ProtoMsg::SceneChangeCompleteResponse::MergeFrom(from.scene_change_complete());
  }
  if (from.has_cube_create_response()) {
    mutable_cube_create_response()->::ProtoMsg::CubeCreateResponse::MergeFrom(from.cube_create_response());
  }
  if (from.has_cube_delete_response()) {
    mutable_cube_delete_response()->::ProtoMsg::CubeDeleteResponse::MergeFrom(from.cube_delete_response());
  }
  if (from.has_match_begin()) {
    mutable_match_begin()->::ProtoMsg::MatchBeginResponse::MergeFrom(from.match_begin());
  }
  if (from.has_match_complete()) {
    mutable_match_complete()->::ProtoMsg::MatchCompleteResponse::MergeFrom(from.match_complete());
  }
  if (from.has_match_cancel()) {
    mutable_match_cancel()->::ProtoMsg::MatchCancelResponse::MergeFrom(from.match_cancel());
  }
  if (from.has_plane_operate()) {
    mutable_plane_operate()->::ProtoMsg::PlaneOperateResponse::MergeFrom(from.plane_operate());
  }
  if (from.has_wave_create()) {
    mutable_wave_create()->::ProtoMsg::WaveCreateResponse::MergeFrom(from.wave_create());
  }
  if (from.has_exit_scene()) {
    mutable_exit_scene()->::ProtoMsg::ExitSceneResponse::MergeFrom(from.exit_scene());
  }
  if (from.has_time_sync()) {
    mutable_time_sync()->::ProtoMsg::TimeSyncResponse::MergeFrom(from.time_sync());
  }
  if (from.has_plane_destroy()) {
    mutable_plane_destroy()->::ProtoMsg::PlaneDestroyResponse::MergeFrom(from.plane_destroy());
  }
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  return true;
}

void Response::Swap(Response* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Response::InternalSwap(Response* other) {
  using std::swap;
  swap(login_, other->login_);
  swap(logout_, other->logout_);
  swap(register__, other->register__);
  swap(cube_operate_, other->cube_operate_);
  swap(scene_change_complete_, other->scene_change_complete_);
  swap(cube_create_response_, other->cube_create_response_);
  swap(cube_delete_response_, other->cube_delete_response_);
  swap(match_begin_, other->match_begin_);
  swap(match_complete_, other->match_complete_);
  swap(match_cancel_, other->match_cancel_);
  swap(plane_operate_, other->plane_operate_);
  swap(wave_create_, other->wave_create_);
  swap(exit_scene_, other->exit_scene_);
  swap(time_sync_, other->time_sync_);
  swap(plane_destroy_, other->plane_destroy_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Notification::InitAsDefaultInstance() {
  ::ProtoMsg::_Notification_default_instance_._instance.get_mutable()->message_ = const_cast< ::ProtoMsg::MessageNofification*>(
      ::ProtoMsg::MessageNofification::internal_default_instance());
  ::ProtoMsg::_Notification_default_instance_._instance.get_mutable()->welcome_ = const_cast< ::ProtoMsg::WelcomeNotification*>(
      ::ProtoMsg::WelcomeNotification::internal_default_instance());
  ::ProtoMsg::_Notification_default_instance_._instance.get_mutable()->other_client_ = const_cast< ::ProtoMsg::OtherClientNotification*>(
      ::ProtoMsg::OtherClientNotification::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Notification::kMessageFieldNumber;
const int Notification::kWelcomeFieldNumber;
const int Notification::kOtherClientFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Notification::Notification()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsNotification();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.Notification)
}
Notification::Notification(const Notification& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_message()) {
    message_ = new ::ProtoMsg::MessageNofification(*from.message_);
  } else {
    message_ = NULL;
  }
  if (from.has_welcome()) {
    welcome_ = new ::ProtoMsg::WelcomeNotification(*from.welcome_);
  } else {
    welcome_ = NULL;
  }
  if (from.has_other_client()) {
    other_client_ = new ::ProtoMsg::OtherClientNotification(*from.other_client_);
  } else {
    other_client_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Notification)
}

void Notification::SharedCtor() {
  ::memset(&message_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&other_client_) -
      reinterpret_cast<char*>(&message_)) + sizeof(other_client_));
  _cached_size_ = 0;
}

Notification::~Notification() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Notification)
  SharedDtor();
}

void Notification::SharedDtor() {
  if (this != internal_default_instance()) delete message_;
  if (this != internal_default_instance()) delete welcome_;
  if (this != internal_default_instance()) delete other_client_;
}

void Notification::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Notification::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Notification& Notification::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsNotification();
  return *internal_default_instance();
}


void Notification::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
  if (GetArenaNoVirtual() == NULL && welcome_ != NULL) {
    delete welcome_;
  }
  welcome_ = NULL;
  if (GetArenaNoVirtual() == NULL && other_client_ != NULL) {
    delete other_client_;
  }
  other_client_ = NULL;
  _internal_metadata_.Clear();
}

bool Notification::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.Notification)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoMsg.MessageNofification message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.WelcomeNotification welcome = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_welcome()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.OtherClientNotification other_client = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_other_client()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.Notification)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.Notification)
  return false;
#undef DO_
}

void Notification::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.MessageNofification message = 1;
  if (this->has_message()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *message_, output);
  }

  // .ProtoMsg.WelcomeNotification welcome = 2;
  if (this->has_welcome()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *welcome_, output);
  }

  // .ProtoMsg.OtherClientNotification other_client = 3;
  if (this->has_other_client()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *other_client_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.Notification)
}

::google::protobuf::uint8* Notification::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Notification)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.MessageNofification message = 1;
  if (this->has_message()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *message_, deterministic, target);
  }

  // .ProtoMsg.WelcomeNotification welcome = 2;
  if (this->has_welcome()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *welcome_, deterministic, target);
  }

  // .ProtoMsg.OtherClientNotification other_client = 3;
  if (this->has_other_client()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *other_client_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Notification)
  return target;
}

size_t Notification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Notification)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoMsg.MessageNofification message = 1;
  if (this->has_message()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *message_);
  }

  // .ProtoMsg.WelcomeNotification welcome = 2;
  if (this->has_welcome()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *welcome_);
  }

  // .ProtoMsg.OtherClientNotification other_client = 3;
  if (this->has_other_client()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *other_client_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Notification::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  const Notification* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Notification>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.Notification)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.Notification)
    MergeFrom(*source);
  }
}

void Notification::MergeFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Notification)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_message()) {
    mutable_message()->::ProtoMsg::MessageNofification::MergeFrom(from.message());
  }
  if (from.has_welcome()) {
    mutable_welcome()->::ProtoMsg::WelcomeNotification::MergeFrom(from.welcome());
  }
  if (from.has_other_client()) {
    mutable_other_client()->::ProtoMsg::OtherClientNotification::MergeFrom(from.other_client());
  }
}

void Notification::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Notification::CopyFrom(const Notification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Notification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Notification::IsInitialized() const {
  return true;
}

void Notification::Swap(Notification* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Notification::InternalSwap(Notification* other) {
  using std::swap;
  swap(message_, other->message_);
  swap(welcome_, other->welcome_);
  swap(other_client_, other->other_client_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Notification::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Command::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Command::Command()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsCommand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.Command)
}
Command::Command(const Command& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Command)
}

void Command::SharedCtor() {
  _cached_size_ = 0;
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Command)
  SharedDtor();
}

void Command::SharedDtor() {
}

void Command::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Command::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Command& Command::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsCommand();
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Command::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.Command)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.Command)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.Command)
  return false;
#undef DO_
}

void Command::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.Command)
}

::google::protobuf::uint8* Command::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Command)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Command)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Command::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Command>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.Command)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Command::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::Swap(Command* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Command::InternalSwap(Command* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Command::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::ProtoMsg::_Message_default_instance_._instance.get_mutable()->request_ = const_cast< ::ProtoMsg::Request*>(
      ::ProtoMsg::Request::internal_default_instance());
  ::ProtoMsg::_Message_default_instance_._instance.get_mutable()->response_ = const_cast< ::ProtoMsg::Response*>(
      ::ProtoMsg::Response::internal_default_instance());
  ::ProtoMsg::_Message_default_instance_._instance.get_mutable()->notification_ = const_cast< ::ProtoMsg::Notification*>(
      ::ProtoMsg::Notification::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kMsgTypeFieldNumber;
const int Message::kUseridFieldNumber;
const int Message::kSequenceFieldNumber;
const int Message::kSessionIdFieldNumber;
const int Message::kTimestampMsFieldNumber;
const int Message::kRequestFieldNumber;
const int Message::kResponseFieldNumber;
const int Message::kNotificationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_Message_2eproto::InitDefaultsMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.Message)
}
Message::Message(const Message& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_request()) {
    request_ = new ::ProtoMsg::Request(*from.request_);
  } else {
    request_ = NULL;
  }
  if (from.has_response()) {
    response_ = new ::ProtoMsg::Response(*from.response_);
  } else {
    response_ = NULL;
  }
  if (from.has_notification()) {
    notification_ = new ::ProtoMsg::Notification(*from.notification_);
  } else {
    notification_ = NULL;
  }
  ::memcpy(&msg_type_, &from.msg_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_ms_) -
    reinterpret_cast<char*>(&msg_type_)) + sizeof(timestamp_ms_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.Message)
}

void Message::SharedCtor() {
  ::memset(&request_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_ms_) -
      reinterpret_cast<char*>(&request_)) + sizeof(timestamp_ms_));
  _cached_size_ = 0;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:ProtoMsg.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != internal_default_instance()) delete request_;
  if (this != internal_default_instance()) delete response_;
  if (this != internal_default_instance()) delete notification_;
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  ::protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Message& Message::default_instance() {
  ::protobuf_Message_2eproto::InitDefaultsMessage();
  return *internal_default_instance();
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
  if (GetArenaNoVirtual() == NULL && response_ != NULL) {
    delete response_;
  }
  response_ = NULL;
  if (GetArenaNoVirtual() == NULL && notification_ != NULL) {
    delete notification_;
  }
  notification_ = NULL;
  ::memset(&msg_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_ms_) -
      reinterpret_cast<char*>(&msg_type_)) + sizeof(timestamp_ms_));
  _internal_metadata_.Clear();
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtoMsg.MSG msg_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_msg_type(static_cast< ::ProtoMsg::MSG >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 userid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 sequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 session_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp_ms = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_ms_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.Request request = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_request()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.Response response = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_response()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtoMsg.Notification notification = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_notification()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.MSG msg_type = 1;
  if (this->msg_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msg_type(), output);
  }

  // fixed32 userid = 2;
  if (this->userid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(2, this->userid(), output);
  }

  // fixed32 sequence = 3;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(3, this->sequence(), output);
  }

  // fixed32 session_id = 4;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(4, this->session_id(), output);
  }

  // int64 timestamp_ms = 5;
  if (this->timestamp_ms() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp_ms(), output);
  }

  // .ProtoMsg.Request request = 6;
  if (this->has_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *request_, output);
  }

  // .ProtoMsg.Response response = 7;
  if (this->has_response()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *response_, output);
  }

  // .ProtoMsg.Notification notification = 8;
  if (this->has_notification()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *notification_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.Message)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtoMsg.MSG msg_type = 1;
  if (this->msg_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msg_type(), target);
  }

  // fixed32 userid = 2;
  if (this->userid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(2, this->userid(), target);
  }

  // fixed32 sequence = 3;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(3, this->sequence(), target);
  }

  // fixed32 session_id = 4;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(4, this->session_id(), target);
  }

  // int64 timestamp_ms = 5;
  if (this->timestamp_ms() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp_ms(), target);
  }

  // .ProtoMsg.Request request = 6;
  if (this->has_request()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *request_, deterministic, target);
  }

  // .ProtoMsg.Response response = 7;
  if (this->has_response()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *response_, deterministic, target);
  }

  // .ProtoMsg.Notification notification = 8;
  if (this->has_notification()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *notification_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.Message)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ProtoMsg.Request request = 6;
  if (this->has_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *request_);
  }

  // .ProtoMsg.Response response = 7;
  if (this->has_response()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *response_);
  }

  // .ProtoMsg.Notification notification = 8;
  if (this->has_notification()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *notification_);
  }

  // .ProtoMsg.MSG msg_type = 1;
  if (this->msg_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msg_type());
  }

  // fixed32 userid = 2;
  if (this->userid() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 sequence = 3;
  if (this->sequence() != 0) {
    total_size += 1 + 4;
  }

  // fixed32 session_id = 4;
  if (this->session_id() != 0) {
    total_size += 1 + 4;
  }

  // int64 timestamp_ms = 5;
  if (this->timestamp_ms() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp_ms());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_request()) {
    mutable_request()->::ProtoMsg::Request::MergeFrom(from.request());
  }
  if (from.has_response()) {
    mutable_response()->::ProtoMsg::Response::MergeFrom(from.response());
  }
  if (from.has_notification()) {
    mutable_notification()->::ProtoMsg::Notification::MergeFrom(from.notification());
  }
  if (from.msg_type() != 0) {
    set_msg_type(from.msg_type());
  }
  if (from.userid() != 0) {
    set_userid(from.userid());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.timestamp_ms() != 0) {
    set_timestamp_ms(from.timestamp_ms());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  using std::swap;
  swap(request_, other->request_);
  swap(response_, other->response_);
  swap(notification_, other->notification_);
  swap(msg_type_, other->msg_type_);
  swap(userid_, other->userid_);
  swap(sequence_, other->sequence_);
  swap(session_id_, other->session_id_);
  swap(timestamp_ms_, other->timestamp_ms_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_Message_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_Message_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::LoginRequest* Arena::Create< ::ProtoMsg::LoginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::LoginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::LoginResponse* Arena::Create< ::ProtoMsg::LoginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::LoginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::LogoutRequest* Arena::Create< ::ProtoMsg::LogoutRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::LogoutRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::LogoutResponse* Arena::Create< ::ProtoMsg::LogoutResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::LogoutResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::RegisterResquest* Arena::Create< ::ProtoMsg::RegisterResquest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::RegisterResquest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::RegisterResponse* Arena::Create< ::ProtoMsg::RegisterResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::RegisterResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MessageNofification* Arena::Create< ::ProtoMsg::MessageNofification >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MessageNofification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::WelcomeNotification* Arena::Create< ::ProtoMsg::WelcomeNotification >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::WelcomeNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::EchoRequest* Arena::Create< ::ProtoMsg::EchoRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::EchoRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::OtherClientNotification* Arena::Create< ::ProtoMsg::OtherClientNotification >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::OtherClientNotification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::CubeOperateRequest* Arena::Create< ::ProtoMsg::CubeOperateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::CubeOperateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::CubeOperateResponse* Arena::Create< ::ProtoMsg::CubeOperateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::CubeOperateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::CubeCreateResponse* Arena::Create< ::ProtoMsg::CubeCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::CubeCreateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::CubeDeleteResponse* Arena::Create< ::ProtoMsg::CubeDeleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::CubeDeleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::SceneChangeCompleteRequest* Arena::Create< ::ProtoMsg::SceneChangeCompleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::SceneChangeCompleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::SceneChangeCompleteResponse* Arena::Create< ::ProtoMsg::SceneChangeCompleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::SceneChangeCompleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MatchBeginRequest* Arena::Create< ::ProtoMsg::MatchBeginRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MatchBeginRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MatchBeginResponse* Arena::Create< ::ProtoMsg::MatchBeginResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MatchBeginResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MatchCancelRequest* Arena::Create< ::ProtoMsg::MatchCancelRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MatchCancelRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MatchCancelResponse* Arena::Create< ::ProtoMsg::MatchCancelResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MatchCancelResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MatchCompleteRequest* Arena::Create< ::ProtoMsg::MatchCompleteRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MatchCompleteRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::MatchCompleteResponse* Arena::Create< ::ProtoMsg::MatchCompleteResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::MatchCompleteResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::PlaneOperateRequest* Arena::Create< ::ProtoMsg::PlaneOperateRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::PlaneOperateRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::PlaneOperateResponse* Arena::Create< ::ProtoMsg::PlaneOperateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::PlaneOperateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::WaveCreateResponse* Arena::Create< ::ProtoMsg::WaveCreateResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::WaveCreateResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::ExitSceneRequest* Arena::Create< ::ProtoMsg::ExitSceneRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::ExitSceneRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::ExitSceneResponse* Arena::Create< ::ProtoMsg::ExitSceneResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::ExitSceneResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::TimeSyncRequest* Arena::Create< ::ProtoMsg::TimeSyncRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::TimeSyncRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::TimeSyncResponse* Arena::Create< ::ProtoMsg::TimeSyncResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::TimeSyncResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::PlaneDestroyRequest* Arena::Create< ::ProtoMsg::PlaneDestroyRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::PlaneDestroyRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::PlaneDestroyResponse* Arena::Create< ::ProtoMsg::PlaneDestroyResponse >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::PlaneDestroyResponse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::Request* Arena::Create< ::ProtoMsg::Request >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::Request >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::Response* Arena::Create< ::ProtoMsg::Response >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::Response >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::Notification* Arena::Create< ::ProtoMsg::Notification >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::Notification >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::Command* Arena::Create< ::ProtoMsg::Command >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::Command >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::Message* Arena::Create< ::ProtoMsg::Message >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::Message >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
