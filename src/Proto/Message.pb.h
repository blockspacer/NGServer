// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#ifndef PROTOBUF_Message_2eproto_INCLUDED
#define PROTOBUF_Message_2eproto_INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Message_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[36];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoginRequestImpl();
void InitDefaultsLoginRequest();
void InitDefaultsLoginResponseImpl();
void InitDefaultsLoginResponse();
void InitDefaultsLogoutRequestImpl();
void InitDefaultsLogoutRequest();
void InitDefaultsLogoutResponseImpl();
void InitDefaultsLogoutResponse();
void InitDefaultsRegisterResquestImpl();
void InitDefaultsRegisterResquest();
void InitDefaultsRegisterResponseImpl();
void InitDefaultsRegisterResponse();
void InitDefaultsMessageNofificationImpl();
void InitDefaultsMessageNofification();
void InitDefaultsWelcomeNotificationImpl();
void InitDefaultsWelcomeNotification();
void InitDefaultsEchoRequestImpl();
void InitDefaultsEchoRequest();
void InitDefaultsOtherClientNotificationImpl();
void InitDefaultsOtherClientNotification();
void InitDefaultsCubeOperateRequestImpl();
void InitDefaultsCubeOperateRequest();
void InitDefaultsCubeOperateResponseImpl();
void InitDefaultsCubeOperateResponse();
void InitDefaultsCubeCreateResponseImpl();
void InitDefaultsCubeCreateResponse();
void InitDefaultsCubeDeleteResponseImpl();
void InitDefaultsCubeDeleteResponse();
void InitDefaultsSceneChangeCompleteRequestImpl();
void InitDefaultsSceneChangeCompleteRequest();
void InitDefaultsSceneChangeCompleteResponseImpl();
void InitDefaultsSceneChangeCompleteResponse();
void InitDefaultsMatchBeginRequestImpl();
void InitDefaultsMatchBeginRequest();
void InitDefaultsMatchBeginResponseImpl();
void InitDefaultsMatchBeginResponse();
void InitDefaultsMatchCancelRequestImpl();
void InitDefaultsMatchCancelRequest();
void InitDefaultsMatchCancelResponseImpl();
void InitDefaultsMatchCancelResponse();
void InitDefaultsMatchCompleteRequestImpl();
void InitDefaultsMatchCompleteRequest();
void InitDefaultsMatchCompleteResponseImpl();
void InitDefaultsMatchCompleteResponse();
void InitDefaultsPlaneOperateRequestImpl();
void InitDefaultsPlaneOperateRequest();
void InitDefaultsPlaneOperateResponseImpl();
void InitDefaultsPlaneOperateResponse();
void InitDefaultsWaveCreateResponseImpl();
void InitDefaultsWaveCreateResponse();
void InitDefaultsExitSceneRequestImpl();
void InitDefaultsExitSceneRequest();
void InitDefaultsExitSceneResponseImpl();
void InitDefaultsExitSceneResponse();
void InitDefaultsTimeSyncRequestImpl();
void InitDefaultsTimeSyncRequest();
void InitDefaultsTimeSyncResponseImpl();
void InitDefaultsTimeSyncResponse();
void InitDefaultsPlaneDestroyRequestImpl();
void InitDefaultsPlaneDestroyRequest();
void InitDefaultsPlaneDestroyResponseImpl();
void InitDefaultsPlaneDestroyResponse();
void InitDefaultsRequestImpl();
void InitDefaultsRequest();
void InitDefaultsResponseImpl();
void InitDefaultsResponse();
void InitDefaultsNotificationImpl();
void InitDefaultsNotification();
void InitDefaultsCommandImpl();
void InitDefaultsCommand();
void InitDefaultsMessageImpl();
void InitDefaultsMessage();
inline void InitDefaults() {
  InitDefaultsLoginRequest();
  InitDefaultsLoginResponse();
  InitDefaultsLogoutRequest();
  InitDefaultsLogoutResponse();
  InitDefaultsRegisterResquest();
  InitDefaultsRegisterResponse();
  InitDefaultsMessageNofification();
  InitDefaultsWelcomeNotification();
  InitDefaultsEchoRequest();
  InitDefaultsOtherClientNotification();
  InitDefaultsCubeOperateRequest();
  InitDefaultsCubeOperateResponse();
  InitDefaultsCubeCreateResponse();
  InitDefaultsCubeDeleteResponse();
  InitDefaultsSceneChangeCompleteRequest();
  InitDefaultsSceneChangeCompleteResponse();
  InitDefaultsMatchBeginRequest();
  InitDefaultsMatchBeginResponse();
  InitDefaultsMatchCancelRequest();
  InitDefaultsMatchCancelResponse();
  InitDefaultsMatchCompleteRequest();
  InitDefaultsMatchCompleteResponse();
  InitDefaultsPlaneOperateRequest();
  InitDefaultsPlaneOperateResponse();
  InitDefaultsWaveCreateResponse();
  InitDefaultsExitSceneRequest();
  InitDefaultsExitSceneResponse();
  InitDefaultsTimeSyncRequest();
  InitDefaultsTimeSyncResponse();
  InitDefaultsPlaneDestroyRequest();
  InitDefaultsPlaneDestroyResponse();
  InitDefaultsRequest();
  InitDefaultsResponse();
  InitDefaultsNotification();
  InitDefaultsCommand();
  InitDefaultsMessage();
}
}  // namespace protobuf_Message_2eproto
namespace ProtoMsg {
class Command;
class CommandDefaultTypeInternal;
extern CommandDefaultTypeInternal _Command_default_instance_;
class CubeCreateResponse;
class CubeCreateResponseDefaultTypeInternal;
extern CubeCreateResponseDefaultTypeInternal _CubeCreateResponse_default_instance_;
class CubeDeleteResponse;
class CubeDeleteResponseDefaultTypeInternal;
extern CubeDeleteResponseDefaultTypeInternal _CubeDeleteResponse_default_instance_;
class CubeOperateRequest;
class CubeOperateRequestDefaultTypeInternal;
extern CubeOperateRequestDefaultTypeInternal _CubeOperateRequest_default_instance_;
class CubeOperateResponse;
class CubeOperateResponseDefaultTypeInternal;
extern CubeOperateResponseDefaultTypeInternal _CubeOperateResponse_default_instance_;
class EchoRequest;
class EchoRequestDefaultTypeInternal;
extern EchoRequestDefaultTypeInternal _EchoRequest_default_instance_;
class ExitSceneRequest;
class ExitSceneRequestDefaultTypeInternal;
extern ExitSceneRequestDefaultTypeInternal _ExitSceneRequest_default_instance_;
class ExitSceneResponse;
class ExitSceneResponseDefaultTypeInternal;
extern ExitSceneResponseDefaultTypeInternal _ExitSceneResponse_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class LogoutRequest;
class LogoutRequestDefaultTypeInternal;
extern LogoutRequestDefaultTypeInternal _LogoutRequest_default_instance_;
class LogoutResponse;
class LogoutResponseDefaultTypeInternal;
extern LogoutResponseDefaultTypeInternal _LogoutResponse_default_instance_;
class MatchBeginRequest;
class MatchBeginRequestDefaultTypeInternal;
extern MatchBeginRequestDefaultTypeInternal _MatchBeginRequest_default_instance_;
class MatchBeginResponse;
class MatchBeginResponseDefaultTypeInternal;
extern MatchBeginResponseDefaultTypeInternal _MatchBeginResponse_default_instance_;
class MatchCancelRequest;
class MatchCancelRequestDefaultTypeInternal;
extern MatchCancelRequestDefaultTypeInternal _MatchCancelRequest_default_instance_;
class MatchCancelResponse;
class MatchCancelResponseDefaultTypeInternal;
extern MatchCancelResponseDefaultTypeInternal _MatchCancelResponse_default_instance_;
class MatchCompleteRequest;
class MatchCompleteRequestDefaultTypeInternal;
extern MatchCompleteRequestDefaultTypeInternal _MatchCompleteRequest_default_instance_;
class MatchCompleteResponse;
class MatchCompleteResponseDefaultTypeInternal;
extern MatchCompleteResponseDefaultTypeInternal _MatchCompleteResponse_default_instance_;
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class MessageNofification;
class MessageNofificationDefaultTypeInternal;
extern MessageNofificationDefaultTypeInternal _MessageNofification_default_instance_;
class Notification;
class NotificationDefaultTypeInternal;
extern NotificationDefaultTypeInternal _Notification_default_instance_;
class OtherClientNotification;
class OtherClientNotificationDefaultTypeInternal;
extern OtherClientNotificationDefaultTypeInternal _OtherClientNotification_default_instance_;
class PlaneDestroyRequest;
class PlaneDestroyRequestDefaultTypeInternal;
extern PlaneDestroyRequestDefaultTypeInternal _PlaneDestroyRequest_default_instance_;
class PlaneDestroyResponse;
class PlaneDestroyResponseDefaultTypeInternal;
extern PlaneDestroyResponseDefaultTypeInternal _PlaneDestroyResponse_default_instance_;
class PlaneOperateRequest;
class PlaneOperateRequestDefaultTypeInternal;
extern PlaneOperateRequestDefaultTypeInternal _PlaneOperateRequest_default_instance_;
class PlaneOperateResponse;
class PlaneOperateResponseDefaultTypeInternal;
extern PlaneOperateResponseDefaultTypeInternal _PlaneOperateResponse_default_instance_;
class RegisterResponse;
class RegisterResponseDefaultTypeInternal;
extern RegisterResponseDefaultTypeInternal _RegisterResponse_default_instance_;
class RegisterResquest;
class RegisterResquestDefaultTypeInternal;
extern RegisterResquestDefaultTypeInternal _RegisterResquest_default_instance_;
class Request;
class RequestDefaultTypeInternal;
extern RequestDefaultTypeInternal _Request_default_instance_;
class Response;
class ResponseDefaultTypeInternal;
extern ResponseDefaultTypeInternal _Response_default_instance_;
class SceneChangeCompleteRequest;
class SceneChangeCompleteRequestDefaultTypeInternal;
extern SceneChangeCompleteRequestDefaultTypeInternal _SceneChangeCompleteRequest_default_instance_;
class SceneChangeCompleteResponse;
class SceneChangeCompleteResponseDefaultTypeInternal;
extern SceneChangeCompleteResponseDefaultTypeInternal _SceneChangeCompleteResponse_default_instance_;
class TimeSyncRequest;
class TimeSyncRequestDefaultTypeInternal;
extern TimeSyncRequestDefaultTypeInternal _TimeSyncRequest_default_instance_;
class TimeSyncResponse;
class TimeSyncResponseDefaultTypeInternal;
extern TimeSyncResponseDefaultTypeInternal _TimeSyncResponse_default_instance_;
class WaveCreateResponse;
class WaveCreateResponseDefaultTypeInternal;
extern WaveCreateResponseDefaultTypeInternal _WaveCreateResponse_default_instance_;
class WelcomeNotification;
class WelcomeNotificationDefaultTypeInternal;
extern WelcomeNotificationDefaultTypeInternal _WelcomeNotification_default_instance_;
}  // namespace ProtoMsg
namespace google {
namespace protobuf {
template<> ::ProtoMsg::Command* Arena::Create< ::ProtoMsg::Command>(Arena*);
template<> ::ProtoMsg::CubeCreateResponse* Arena::Create< ::ProtoMsg::CubeCreateResponse>(Arena*);
template<> ::ProtoMsg::CubeDeleteResponse* Arena::Create< ::ProtoMsg::CubeDeleteResponse>(Arena*);
template<> ::ProtoMsg::CubeOperateRequest* Arena::Create< ::ProtoMsg::CubeOperateRequest>(Arena*);
template<> ::ProtoMsg::CubeOperateResponse* Arena::Create< ::ProtoMsg::CubeOperateResponse>(Arena*);
template<> ::ProtoMsg::EchoRequest* Arena::Create< ::ProtoMsg::EchoRequest>(Arena*);
template<> ::ProtoMsg::ExitSceneRequest* Arena::Create< ::ProtoMsg::ExitSceneRequest>(Arena*);
template<> ::ProtoMsg::ExitSceneResponse* Arena::Create< ::ProtoMsg::ExitSceneResponse>(Arena*);
template<> ::ProtoMsg::LoginRequest* Arena::Create< ::ProtoMsg::LoginRequest>(Arena*);
template<> ::ProtoMsg::LoginResponse* Arena::Create< ::ProtoMsg::LoginResponse>(Arena*);
template<> ::ProtoMsg::LogoutRequest* Arena::Create< ::ProtoMsg::LogoutRequest>(Arena*);
template<> ::ProtoMsg::LogoutResponse* Arena::Create< ::ProtoMsg::LogoutResponse>(Arena*);
template<> ::ProtoMsg::MatchBeginRequest* Arena::Create< ::ProtoMsg::MatchBeginRequest>(Arena*);
template<> ::ProtoMsg::MatchBeginResponse* Arena::Create< ::ProtoMsg::MatchBeginResponse>(Arena*);
template<> ::ProtoMsg::MatchCancelRequest* Arena::Create< ::ProtoMsg::MatchCancelRequest>(Arena*);
template<> ::ProtoMsg::MatchCancelResponse* Arena::Create< ::ProtoMsg::MatchCancelResponse>(Arena*);
template<> ::ProtoMsg::MatchCompleteRequest* Arena::Create< ::ProtoMsg::MatchCompleteRequest>(Arena*);
template<> ::ProtoMsg::MatchCompleteResponse* Arena::Create< ::ProtoMsg::MatchCompleteResponse>(Arena*);
template<> ::ProtoMsg::Message* Arena::Create< ::ProtoMsg::Message>(Arena*);
template<> ::ProtoMsg::MessageNofification* Arena::Create< ::ProtoMsg::MessageNofification>(Arena*);
template<> ::ProtoMsg::Notification* Arena::Create< ::ProtoMsg::Notification>(Arena*);
template<> ::ProtoMsg::OtherClientNotification* Arena::Create< ::ProtoMsg::OtherClientNotification>(Arena*);
template<> ::ProtoMsg::PlaneDestroyRequest* Arena::Create< ::ProtoMsg::PlaneDestroyRequest>(Arena*);
template<> ::ProtoMsg::PlaneDestroyResponse* Arena::Create< ::ProtoMsg::PlaneDestroyResponse>(Arena*);
template<> ::ProtoMsg::PlaneOperateRequest* Arena::Create< ::ProtoMsg::PlaneOperateRequest>(Arena*);
template<> ::ProtoMsg::PlaneOperateResponse* Arena::Create< ::ProtoMsg::PlaneOperateResponse>(Arena*);
template<> ::ProtoMsg::RegisterResponse* Arena::Create< ::ProtoMsg::RegisterResponse>(Arena*);
template<> ::ProtoMsg::RegisterResquest* Arena::Create< ::ProtoMsg::RegisterResquest>(Arena*);
template<> ::ProtoMsg::Request* Arena::Create< ::ProtoMsg::Request>(Arena*);
template<> ::ProtoMsg::Response* Arena::Create< ::ProtoMsg::Response>(Arena*);
template<> ::ProtoMsg::SceneChangeCompleteRequest* Arena::Create< ::ProtoMsg::SceneChangeCompleteRequest>(Arena*);
template<> ::ProtoMsg::SceneChangeCompleteResponse* Arena::Create< ::ProtoMsg::SceneChangeCompleteResponse>(Arena*);
template<> ::ProtoMsg::TimeSyncRequest* Arena::Create< ::ProtoMsg::TimeSyncRequest>(Arena*);
template<> ::ProtoMsg::TimeSyncResponse* Arena::Create< ::ProtoMsg::TimeSyncResponse>(Arena*);
template<> ::ProtoMsg::WaveCreateResponse* Arena::Create< ::ProtoMsg::WaveCreateResponse>(Arena*);
template<> ::ProtoMsg::WelcomeNotification* Arena::Create< ::ProtoMsg::WelcomeNotification>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ProtoMsg {

enum MSG {
  Unknow = 0,
  Login_Request = 1,
  Login_Response = 2,
  Logout_Request = 3,
  Logout_Response = 4,
  Register_Request = 5,
  Register_Response = 6,
  Keepalive_Request = 7,
  Keepalive_Response = 8,
  Send_Message_Request = 9,
  Send_Message_Response = 10,
  Message_Nofification = 11,
  Welcome_Notification = 12,
  Echo_Request = 13,
  Other_Client_Notification = 14,
  Cube_Operate_Request = 15,
  Cube_Operate_Response = 16,
  Scene_Change_Complete_Request = 17,
  Scene_Change_Complete_Response = 18,
  Cube_Create_Response = 19,
  Cube_Delete_Response = 20,
  Match_Begin_Request = 21,
  Match_Begin_Response = 22,
  Match_Complete_Request = 23,
  Match_Complete_Response = 24,
  Match_Cancel_Request = 25,
  Match_Cancel_Response = 26,
  Plane_Operate_Request = 27,
  Plane_Operate_Response = 28,
  Wave_Create_Response = 29,
  Exit_Scene_Request = 30,
  Exit_Scene_Response = 31,
  Time_Sync_Request = 32,
  Time_Sync_Response = 33,
  Plane_Destroy_Request = 34,
  Plane_Destroy_Response = 35,
  MSG_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MSG_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MSG_IsValid(int value);
const MSG MSG_MIN = Unknow;
const MSG MSG_MAX = Plane_Destroy_Response;
const int MSG_ARRAYSIZE = MSG_MAX + 1;

const ::google::protobuf::EnumDescriptor* MSG_descriptor();
inline const ::std::string& MSG_Name(MSG value) {
  return ::google::protobuf::internal::NameOfEnum(
    MSG_descriptor(), value);
}
inline bool MSG_Parse(
    const ::std::string& name, MSG* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MSG>(
    MSG_descriptor(), name, value);
}
// ===================================================================

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRequest(LoginRequest&& from) noexcept
    : LoginRequest() {
    *this = ::std::move(from);
  }

  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginRequest* other);
  friend void swap(LoginRequest& a, LoginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginRequest>(NULL);
  }

  LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:ProtoMsg.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsLoginRequestImpl();
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginResponse(LoginResponse&& from) noexcept
    : LoginResponse() {
    *this = ::std::move(from);
  }

  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LoginResponse* other);
  friend void swap(LoginResponse& a, LoginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginResponse>(NULL);
  }

  LoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LoginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.LoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsLoginResponseImpl();
};
// -------------------------------------------------------------------

class LogoutRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.LogoutRequest) */ {
 public:
  LogoutRequest();
  virtual ~LogoutRequest();

  LogoutRequest(const LogoutRequest& from);

  inline LogoutRequest& operator=(const LogoutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutRequest(LogoutRequest&& from) noexcept
    : LogoutRequest() {
    *this = ::std::move(from);
  }

  inline LogoutRequest& operator=(LogoutRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutRequest* internal_default_instance() {
    return reinterpret_cast<const LogoutRequest*>(
               &_LogoutRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(LogoutRequest* other);
  friend void swap(LogoutRequest& a, LogoutRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LogoutRequest>(NULL);
  }

  LogoutRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LogoutRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutRequest& from);
  void MergeFrom(const LogoutRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:ProtoMsg.LogoutRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsLogoutRequestImpl();
};
// -------------------------------------------------------------------

class LogoutResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.LogoutResponse) */ {
 public:
  LogoutResponse();
  virtual ~LogoutResponse();

  LogoutResponse(const LogoutResponse& from);

  inline LogoutResponse& operator=(const LogoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LogoutResponse(LogoutResponse&& from) noexcept
    : LogoutResponse() {
    *this = ::std::move(from);
  }

  inline LogoutResponse& operator=(LogoutResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const LogoutResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LogoutResponse* internal_default_instance() {
    return reinterpret_cast<const LogoutResponse*>(
               &_LogoutResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(LogoutResponse* other);
  friend void swap(LogoutResponse& a, LogoutResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LogoutResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LogoutResponse>(NULL);
  }

  LogoutResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<LogoutResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LogoutResponse& from);
  void MergeFrom(const LogoutResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LogoutResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.LogoutResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsLogoutResponseImpl();
};
// -------------------------------------------------------------------

class RegisterResquest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.RegisterResquest) */ {
 public:
  RegisterResquest();
  virtual ~RegisterResquest();

  RegisterResquest(const RegisterResquest& from);

  inline RegisterResquest& operator=(const RegisterResquest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterResquest(RegisterResquest&& from) noexcept
    : RegisterResquest() {
    *this = ::std::move(from);
  }

  inline RegisterResquest& operator=(RegisterResquest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResquest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterResquest* internal_default_instance() {
    return reinterpret_cast<const RegisterResquest*>(
               &_RegisterResquest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RegisterResquest* other);
  friend void swap(RegisterResquest& a, RegisterResquest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterResquest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RegisterResquest>(NULL);
  }

  RegisterResquest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RegisterResquest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterResquest& from);
  void MergeFrom(const RegisterResquest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterResquest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string password = 2;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // string email = 3;
  void clear_email();
  static const int kEmailFieldNumber = 3;
  const ::std::string& email() const;
  void set_email(const ::std::string& value);
  #if LANG_CXX11
  void set_email(::std::string&& value);
  #endif
  void set_email(const char* value);
  void set_email(const char* value, size_t size);
  ::std::string* mutable_email();
  ::std::string* release_email();
  void set_allocated_email(::std::string* email);

  // string phone = 4;
  void clear_phone();
  static const int kPhoneFieldNumber = 4;
  const ::std::string& phone() const;
  void set_phone(const ::std::string& value);
  #if LANG_CXX11
  void set_phone(::std::string&& value);
  #endif
  void set_phone(const char* value);
  void set_phone(const char* value, size_t size);
  ::std::string* mutable_phone();
  ::std::string* release_phone();
  void set_allocated_phone(::std::string* phone);

  // @@protoc_insertion_point(class_scope:ProtoMsg.RegisterResquest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::internal::ArenaStringPtr email_;
  ::google::protobuf::internal::ArenaStringPtr phone_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsRegisterResquestImpl();
};
// -------------------------------------------------------------------

class RegisterResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.RegisterResponse) */ {
 public:
  RegisterResponse();
  virtual ~RegisterResponse();

  RegisterResponse(const RegisterResponse& from);

  inline RegisterResponse& operator=(const RegisterResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterResponse(RegisterResponse&& from) noexcept
    : RegisterResponse() {
    *this = ::std::move(from);
  }

  inline RegisterResponse& operator=(RegisterResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterResponse*>(
               &_RegisterResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(RegisterResponse* other);
  friend void swap(RegisterResponse& a, RegisterResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RegisterResponse>(NULL);
  }

  RegisterResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<RegisterResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RegisterResponse& from);
  void MergeFrom(const RegisterResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RegisterResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.RegisterResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 result_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsRegisterResponseImpl();
};
// -------------------------------------------------------------------

class MessageNofification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MessageNofification) */ {
 public:
  MessageNofification();
  virtual ~MessageNofification();

  MessageNofification(const MessageNofification& from);

  inline MessageNofification& operator=(const MessageNofification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MessageNofification(MessageNofification&& from) noexcept
    : MessageNofification() {
    *this = ::std::move(from);
  }

  inline MessageNofification& operator=(MessageNofification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageNofification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageNofification* internal_default_instance() {
    return reinterpret_cast<const MessageNofification*>(
               &_MessageNofification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(MessageNofification* other);
  friend void swap(MessageNofification& a, MessageNofification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MessageNofification* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MessageNofification>(NULL);
  }

  MessageNofification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MessageNofification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MessageNofification& from);
  void MergeFrom(const MessageNofification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MessageNofification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.MessageNofification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMessageNofificationImpl();
};
// -------------------------------------------------------------------

class WelcomeNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.WelcomeNotification) */ {
 public:
  WelcomeNotification();
  virtual ~WelcomeNotification();

  WelcomeNotification(const WelcomeNotification& from);

  inline WelcomeNotification& operator=(const WelcomeNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WelcomeNotification(WelcomeNotification&& from) noexcept
    : WelcomeNotification() {
    *this = ::std::move(from);
  }

  inline WelcomeNotification& operator=(WelcomeNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WelcomeNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WelcomeNotification* internal_default_instance() {
    return reinterpret_cast<const WelcomeNotification*>(
               &_WelcomeNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(WelcomeNotification* other);
  friend void swap(WelcomeNotification& a, WelcomeNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WelcomeNotification* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WelcomeNotification>(NULL);
  }

  WelcomeNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WelcomeNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WelcomeNotification& from);
  void MergeFrom(const WelcomeNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WelcomeNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.WelcomeNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsWelcomeNotificationImpl();
};
// -------------------------------------------------------------------

class EchoRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.EchoRequest) */ {
 public:
  EchoRequest();
  virtual ~EchoRequest();

  EchoRequest(const EchoRequest& from);

  inline EchoRequest& operator=(const EchoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EchoRequest(EchoRequest&& from) noexcept
    : EchoRequest() {
    *this = ::std::move(from);
  }

  inline EchoRequest& operator=(EchoRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EchoRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const EchoRequest* internal_default_instance() {
    return reinterpret_cast<const EchoRequest*>(
               &_EchoRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(EchoRequest* other);
  friend void swap(EchoRequest& a, EchoRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EchoRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<EchoRequest>(NULL);
  }

  EchoRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<EchoRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EchoRequest& from);
  void MergeFrom(const EchoRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EchoRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ProtoMsg.EchoRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsEchoRequestImpl();
};
// -------------------------------------------------------------------

class OtherClientNotification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.OtherClientNotification) */ {
 public:
  OtherClientNotification();
  virtual ~OtherClientNotification();

  OtherClientNotification(const OtherClientNotification& from);

  inline OtherClientNotification& operator=(const OtherClientNotification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OtherClientNotification(OtherClientNotification&& from) noexcept
    : OtherClientNotification() {
    *this = ::std::move(from);
  }

  inline OtherClientNotification& operator=(OtherClientNotification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OtherClientNotification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OtherClientNotification* internal_default_instance() {
    return reinterpret_cast<const OtherClientNotification*>(
               &_OtherClientNotification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(OtherClientNotification* other);
  friend void swap(OtherClientNotification& a, OtherClientNotification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OtherClientNotification* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<OtherClientNotification>(NULL);
  }

  OtherClientNotification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<OtherClientNotification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OtherClientNotification& from);
  void MergeFrom(const OtherClientNotification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OtherClientNotification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string msg = 1;
  void clear_msg();
  static const int kMsgFieldNumber = 1;
  const ::std::string& msg() const;
  void set_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_msg(::std::string&& value);
  #endif
  void set_msg(const char* value);
  void set_msg(const char* value, size_t size);
  ::std::string* mutable_msg();
  ::std::string* release_msg();
  void set_allocated_msg(::std::string* msg);

  // @@protoc_insertion_point(class_scope:ProtoMsg.OtherClientNotification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msg_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsOtherClientNotificationImpl();
};
// -------------------------------------------------------------------

class CubeOperateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.CubeOperateRequest) */ {
 public:
  CubeOperateRequest();
  virtual ~CubeOperateRequest();

  CubeOperateRequest(const CubeOperateRequest& from);

  inline CubeOperateRequest& operator=(const CubeOperateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CubeOperateRequest(CubeOperateRequest&& from) noexcept
    : CubeOperateRequest() {
    *this = ::std::move(from);
  }

  inline CubeOperateRequest& operator=(CubeOperateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CubeOperateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CubeOperateRequest* internal_default_instance() {
    return reinterpret_cast<const CubeOperateRequest*>(
               &_CubeOperateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(CubeOperateRequest* other);
  friend void swap(CubeOperateRequest& a, CubeOperateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CubeOperateRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeOperateRequest>(NULL);
  }

  CubeOperateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeOperateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CubeOperateRequest& from);
  void MergeFrom(const CubeOperateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CubeOperateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float movement = 1;
  void clear_movement();
  static const int kMovementFieldNumber = 1;
  float movement() const;
  void set_movement(float value);

  // float turn = 2;
  void clear_turn();
  static const int kTurnFieldNumber = 2;
  float turn() const;
  void set_turn(float value);

  // fixed32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float x = 4;
  void clear_x();
  static const int kXFieldNumber = 4;
  float x() const;
  void set_x(float value);

  // float y = 5;
  void clear_y();
  static const int kYFieldNumber = 5;
  float y() const;
  void set_y(float value);

  // float z = 6;
  void clear_z();
  static const int kZFieldNumber = 6;
  float z() const;
  void set_z(float value);

  // fixed32 user_id = 7;
  void clear_user_id();
  static const int kUserIdFieldNumber = 7;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // float angle = 8;
  void clear_angle();
  static const int kAngleFieldNumber = 8;
  float angle() const;
  void set_angle(float value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.CubeOperateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float movement_;
  float turn_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float z_;
  ::google::protobuf::uint32 user_id_;
  float angle_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsCubeOperateRequestImpl();
};
// -------------------------------------------------------------------

class CubeOperateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.CubeOperateResponse) */ {
 public:
  CubeOperateResponse();
  virtual ~CubeOperateResponse();

  CubeOperateResponse(const CubeOperateResponse& from);

  inline CubeOperateResponse& operator=(const CubeOperateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CubeOperateResponse(CubeOperateResponse&& from) noexcept
    : CubeOperateResponse() {
    *this = ::std::move(from);
  }

  inline CubeOperateResponse& operator=(CubeOperateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CubeOperateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CubeOperateResponse* internal_default_instance() {
    return reinterpret_cast<const CubeOperateResponse*>(
               &_CubeOperateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(CubeOperateResponse* other);
  friend void swap(CubeOperateResponse& a, CubeOperateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CubeOperateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeOperateResponse>(NULL);
  }

  CubeOperateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeOperateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CubeOperateResponse& from);
  void MergeFrom(const CubeOperateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CubeOperateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float movement = 1;
  void clear_movement();
  static const int kMovementFieldNumber = 1;
  float movement() const;
  void set_movement(float value);

  // float turn = 2;
  void clear_turn();
  static const int kTurnFieldNumber = 2;
  float turn() const;
  void set_turn(float value);

  // fixed32 id = 3;
  void clear_id();
  static const int kIdFieldNumber = 3;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float x = 4;
  void clear_x();
  static const int kXFieldNumber = 4;
  float x() const;
  void set_x(float value);

  // float y = 5;
  void clear_y();
  static const int kYFieldNumber = 5;
  float y() const;
  void set_y(float value);

  // float z = 6;
  void clear_z();
  static const int kZFieldNumber = 6;
  float z() const;
  void set_z(float value);

  // fixed32 user_id = 7;
  void clear_user_id();
  static const int kUserIdFieldNumber = 7;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // float angle = 8;
  void clear_angle();
  static const int kAngleFieldNumber = 8;
  float angle() const;
  void set_angle(float value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.CubeOperateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float movement_;
  float turn_;
  ::google::protobuf::uint32 id_;
  float x_;
  float y_;
  float z_;
  ::google::protobuf::uint32 user_id_;
  float angle_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsCubeOperateResponseImpl();
};
// -------------------------------------------------------------------

class CubeCreateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.CubeCreateResponse) */ {
 public:
  CubeCreateResponse();
  virtual ~CubeCreateResponse();

  CubeCreateResponse(const CubeCreateResponse& from);

  inline CubeCreateResponse& operator=(const CubeCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CubeCreateResponse(CubeCreateResponse&& from) noexcept
    : CubeCreateResponse() {
    *this = ::std::move(from);
  }

  inline CubeCreateResponse& operator=(CubeCreateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CubeCreateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CubeCreateResponse* internal_default_instance() {
    return reinterpret_cast<const CubeCreateResponse*>(
               &_CubeCreateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(CubeCreateResponse* other);
  friend void swap(CubeCreateResponse& a, CubeCreateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CubeCreateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeCreateResponse>(NULL);
  }

  CubeCreateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeCreateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CubeCreateResponse& from);
  void MergeFrom(const CubeCreateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CubeCreateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // fixed32 user_id = 4;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // fixed32 id = 5;
  void clear_id();
  static const int kIdFieldNumber = 5;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // float angle = 6;
  void clear_angle();
  static const int kAngleFieldNumber = 6;
  float angle() const;
  void set_angle(float value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.CubeCreateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 id_;
  float angle_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsCubeCreateResponseImpl();
};
// -------------------------------------------------------------------

class CubeDeleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.CubeDeleteResponse) */ {
 public:
  CubeDeleteResponse();
  virtual ~CubeDeleteResponse();

  CubeDeleteResponse(const CubeDeleteResponse& from);

  inline CubeDeleteResponse& operator=(const CubeDeleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CubeDeleteResponse(CubeDeleteResponse&& from) noexcept
    : CubeDeleteResponse() {
    *this = ::std::move(from);
  }

  inline CubeDeleteResponse& operator=(CubeDeleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CubeDeleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CubeDeleteResponse* internal_default_instance() {
    return reinterpret_cast<const CubeDeleteResponse*>(
               &_CubeDeleteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(CubeDeleteResponse* other);
  friend void swap(CubeDeleteResponse& a, CubeDeleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CubeDeleteResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeDeleteResponse>(NULL);
  }

  CubeDeleteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<CubeDeleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CubeDeleteResponse& from);
  void MergeFrom(const CubeDeleteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CubeDeleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // fixed32 user_id = 2;
  void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.CubeDeleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 user_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsCubeDeleteResponseImpl();
};
// -------------------------------------------------------------------

class SceneChangeCompleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.SceneChangeCompleteRequest) */ {
 public:
  SceneChangeCompleteRequest();
  virtual ~SceneChangeCompleteRequest();

  SceneChangeCompleteRequest(const SceneChangeCompleteRequest& from);

  inline SceneChangeCompleteRequest& operator=(const SceneChangeCompleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneChangeCompleteRequest(SceneChangeCompleteRequest&& from) noexcept
    : SceneChangeCompleteRequest() {
    *this = ::std::move(from);
  }

  inline SceneChangeCompleteRequest& operator=(SceneChangeCompleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneChangeCompleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneChangeCompleteRequest* internal_default_instance() {
    return reinterpret_cast<const SceneChangeCompleteRequest*>(
               &_SceneChangeCompleteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(SceneChangeCompleteRequest* other);
  friend void swap(SceneChangeCompleteRequest& a, SceneChangeCompleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneChangeCompleteRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SceneChangeCompleteRequest>(NULL);
  }

  SceneChangeCompleteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SceneChangeCompleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneChangeCompleteRequest& from);
  void MergeFrom(const SceneChangeCompleteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneChangeCompleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.SceneChangeCompleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteRequestImpl();
};
// -------------------------------------------------------------------

class SceneChangeCompleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.SceneChangeCompleteResponse) */ {
 public:
  SceneChangeCompleteResponse();
  virtual ~SceneChangeCompleteResponse();

  SceneChangeCompleteResponse(const SceneChangeCompleteResponse& from);

  inline SceneChangeCompleteResponse& operator=(const SceneChangeCompleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SceneChangeCompleteResponse(SceneChangeCompleteResponse&& from) noexcept
    : SceneChangeCompleteResponse() {
    *this = ::std::move(from);
  }

  inline SceneChangeCompleteResponse& operator=(SceneChangeCompleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const SceneChangeCompleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SceneChangeCompleteResponse* internal_default_instance() {
    return reinterpret_cast<const SceneChangeCompleteResponse*>(
               &_SceneChangeCompleteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(SceneChangeCompleteResponse* other);
  friend void swap(SceneChangeCompleteResponse& a, SceneChangeCompleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SceneChangeCompleteResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SceneChangeCompleteResponse>(NULL);
  }

  SceneChangeCompleteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<SceneChangeCompleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SceneChangeCompleteResponse& from);
  void MergeFrom(const SceneChangeCompleteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SceneChangeCompleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.SceneChangeCompleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsSceneChangeCompleteResponseImpl();
};
// -------------------------------------------------------------------

class MatchBeginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MatchBeginRequest) */ {
 public:
  MatchBeginRequest();
  virtual ~MatchBeginRequest();

  MatchBeginRequest(const MatchBeginRequest& from);

  inline MatchBeginRequest& operator=(const MatchBeginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchBeginRequest(MatchBeginRequest&& from) noexcept
    : MatchBeginRequest() {
    *this = ::std::move(from);
  }

  inline MatchBeginRequest& operator=(MatchBeginRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchBeginRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchBeginRequest* internal_default_instance() {
    return reinterpret_cast<const MatchBeginRequest*>(
               &_MatchBeginRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(MatchBeginRequest* other);
  friend void swap(MatchBeginRequest& a, MatchBeginRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchBeginRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchBeginRequest>(NULL);
  }

  MatchBeginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchBeginRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchBeginRequest& from);
  void MergeFrom(const MatchBeginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchBeginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.MatchBeginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMatchBeginRequestImpl();
};
// -------------------------------------------------------------------

class MatchBeginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MatchBeginResponse) */ {
 public:
  MatchBeginResponse();
  virtual ~MatchBeginResponse();

  MatchBeginResponse(const MatchBeginResponse& from);

  inline MatchBeginResponse& operator=(const MatchBeginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchBeginResponse(MatchBeginResponse&& from) noexcept
    : MatchBeginResponse() {
    *this = ::std::move(from);
  }

  inline MatchBeginResponse& operator=(MatchBeginResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchBeginResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchBeginResponse* internal_default_instance() {
    return reinterpret_cast<const MatchBeginResponse*>(
               &_MatchBeginResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(MatchBeginResponse* other);
  friend void swap(MatchBeginResponse& a, MatchBeginResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchBeginResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchBeginResponse>(NULL);
  }

  MatchBeginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchBeginResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchBeginResponse& from);
  void MergeFrom(const MatchBeginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchBeginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.MatchBeginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMatchBeginResponseImpl();
};
// -------------------------------------------------------------------

class MatchCancelRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MatchCancelRequest) */ {
 public:
  MatchCancelRequest();
  virtual ~MatchCancelRequest();

  MatchCancelRequest(const MatchCancelRequest& from);

  inline MatchCancelRequest& operator=(const MatchCancelRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchCancelRequest(MatchCancelRequest&& from) noexcept
    : MatchCancelRequest() {
    *this = ::std::move(from);
  }

  inline MatchCancelRequest& operator=(MatchCancelRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchCancelRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchCancelRequest* internal_default_instance() {
    return reinterpret_cast<const MatchCancelRequest*>(
               &_MatchCancelRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(MatchCancelRequest* other);
  friend void swap(MatchCancelRequest& a, MatchCancelRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchCancelRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCancelRequest>(NULL);
  }

  MatchCancelRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCancelRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchCancelRequest& from);
  void MergeFrom(const MatchCancelRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchCancelRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.MatchCancelRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMatchCancelRequestImpl();
};
// -------------------------------------------------------------------

class MatchCancelResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MatchCancelResponse) */ {
 public:
  MatchCancelResponse();
  virtual ~MatchCancelResponse();

  MatchCancelResponse(const MatchCancelResponse& from);

  inline MatchCancelResponse& operator=(const MatchCancelResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchCancelResponse(MatchCancelResponse&& from) noexcept
    : MatchCancelResponse() {
    *this = ::std::move(from);
  }

  inline MatchCancelResponse& operator=(MatchCancelResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchCancelResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchCancelResponse* internal_default_instance() {
    return reinterpret_cast<const MatchCancelResponse*>(
               &_MatchCancelResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(MatchCancelResponse* other);
  friend void swap(MatchCancelResponse& a, MatchCancelResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchCancelResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCancelResponse>(NULL);
  }

  MatchCancelResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCancelResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchCancelResponse& from);
  void MergeFrom(const MatchCancelResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchCancelResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.MatchCancelResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMatchCancelResponseImpl();
};
// -------------------------------------------------------------------

class MatchCompleteRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MatchCompleteRequest) */ {
 public:
  MatchCompleteRequest();
  virtual ~MatchCompleteRequest();

  MatchCompleteRequest(const MatchCompleteRequest& from);

  inline MatchCompleteRequest& operator=(const MatchCompleteRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchCompleteRequest(MatchCompleteRequest&& from) noexcept
    : MatchCompleteRequest() {
    *this = ::std::move(from);
  }

  inline MatchCompleteRequest& operator=(MatchCompleteRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchCompleteRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchCompleteRequest* internal_default_instance() {
    return reinterpret_cast<const MatchCompleteRequest*>(
               &_MatchCompleteRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(MatchCompleteRequest* other);
  friend void swap(MatchCompleteRequest& a, MatchCompleteRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchCompleteRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCompleteRequest>(NULL);
  }

  MatchCompleteRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCompleteRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchCompleteRequest& from);
  void MergeFrom(const MatchCompleteRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchCompleteRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // fixed32 other_user_id = 2;
  void clear_other_user_id();
  static const int kOtherUserIdFieldNumber = 2;
  ::google::protobuf::uint32 other_user_id() const;
  void set_other_user_id(::google::protobuf::uint32 value);

  // fixed32 user_count = 3;
  void clear_user_count();
  static const int kUserCountFieldNumber = 3;
  ::google::protobuf::uint32 user_count() const;
  void set_user_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.MatchCompleteRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 other_user_id_;
  ::google::protobuf::uint32 user_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMatchCompleteRequestImpl();
};
// -------------------------------------------------------------------

class MatchCompleteResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.MatchCompleteResponse) */ {
 public:
  MatchCompleteResponse();
  virtual ~MatchCompleteResponse();

  MatchCompleteResponse(const MatchCompleteResponse& from);

  inline MatchCompleteResponse& operator=(const MatchCompleteResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MatchCompleteResponse(MatchCompleteResponse&& from) noexcept
    : MatchCompleteResponse() {
    *this = ::std::move(from);
  }

  inline MatchCompleteResponse& operator=(MatchCompleteResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MatchCompleteResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MatchCompleteResponse* internal_default_instance() {
    return reinterpret_cast<const MatchCompleteResponse*>(
               &_MatchCompleteResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(MatchCompleteResponse* other);
  friend void swap(MatchCompleteResponse& a, MatchCompleteResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MatchCompleteResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCompleteResponse>(NULL);
  }

  MatchCompleteResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<MatchCompleteResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MatchCompleteResponse& from);
  void MergeFrom(const MatchCompleteResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MatchCompleteResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // fixed32 other_user_id = 2;
  void clear_other_user_id();
  static const int kOtherUserIdFieldNumber = 2;
  ::google::protobuf::uint32 other_user_id() const;
  void set_other_user_id(::google::protobuf::uint32 value);

  // fixed32 user_count = 3;
  void clear_user_count();
  static const int kUserCountFieldNumber = 3;
  ::google::protobuf::uint32 user_count() const;
  void set_user_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.MatchCompleteResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 other_user_id_;
  ::google::protobuf::uint32 user_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMatchCompleteResponseImpl();
};
// -------------------------------------------------------------------

class PlaneOperateRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.PlaneOperateRequest) */ {
 public:
  PlaneOperateRequest();
  virtual ~PlaneOperateRequest();

  PlaneOperateRequest(const PlaneOperateRequest& from);

  inline PlaneOperateRequest& operator=(const PlaneOperateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaneOperateRequest(PlaneOperateRequest&& from) noexcept
    : PlaneOperateRequest() {
    *this = ::std::move(from);
  }

  inline PlaneOperateRequest& operator=(PlaneOperateRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneOperateRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaneOperateRequest* internal_default_instance() {
    return reinterpret_cast<const PlaneOperateRequest*>(
               &_PlaneOperateRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(PlaneOperateRequest* other);
  friend void swap(PlaneOperateRequest& a, PlaneOperateRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaneOperateRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneOperateRequest>(NULL);
  }

  PlaneOperateRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneOperateRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneOperateRequest& from);
  void MergeFrom(const PlaneOperateRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneOperateRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float horizontal = 1;
  void clear_horizontal();
  static const int kHorizontalFieldNumber = 1;
  float horizontal() const;
  void set_horizontal(float value);

  // float vertical = 2;
  void clear_vertical();
  static const int kVerticalFieldNumber = 2;
  float vertical() const;
  void set_vertical(float value);

  // fixed32 fire = 3;
  void clear_fire();
  static const int kFireFieldNumber = 3;
  ::google::protobuf::uint32 fire() const;
  void set_fire(::google::protobuf::uint32 value);

  // fixed32 user_id = 4;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // fixed32 index_id = 5;
  void clear_index_id();
  static const int kIndexIdFieldNumber = 5;
  ::google::protobuf::uint32 index_id() const;
  void set_index_id(::google::protobuf::uint32 value);

  // float x = 6;
  void clear_x();
  static const int kXFieldNumber = 6;
  float x() const;
  void set_x(float value);

  // float y = 7;
  void clear_y();
  static const int kYFieldNumber = 7;
  float y() const;
  void set_y(float value);

  // float z = 8;
  void clear_z();
  static const int kZFieldNumber = 8;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.PlaneOperateRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float horizontal_;
  float vertical_;
  ::google::protobuf::uint32 fire_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 index_id_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsPlaneOperateRequestImpl();
};
// -------------------------------------------------------------------

class PlaneOperateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.PlaneOperateResponse) */ {
 public:
  PlaneOperateResponse();
  virtual ~PlaneOperateResponse();

  PlaneOperateResponse(const PlaneOperateResponse& from);

  inline PlaneOperateResponse& operator=(const PlaneOperateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaneOperateResponse(PlaneOperateResponse&& from) noexcept
    : PlaneOperateResponse() {
    *this = ::std::move(from);
  }

  inline PlaneOperateResponse& operator=(PlaneOperateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneOperateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaneOperateResponse* internal_default_instance() {
    return reinterpret_cast<const PlaneOperateResponse*>(
               &_PlaneOperateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(PlaneOperateResponse* other);
  friend void swap(PlaneOperateResponse& a, PlaneOperateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaneOperateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneOperateResponse>(NULL);
  }

  PlaneOperateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneOperateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneOperateResponse& from);
  void MergeFrom(const PlaneOperateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneOperateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float horizontal = 1;
  void clear_horizontal();
  static const int kHorizontalFieldNumber = 1;
  float horizontal() const;
  void set_horizontal(float value);

  // float vertical = 2;
  void clear_vertical();
  static const int kVerticalFieldNumber = 2;
  float vertical() const;
  void set_vertical(float value);

  // fixed32 fire = 3;
  void clear_fire();
  static const int kFireFieldNumber = 3;
  ::google::protobuf::uint32 fire() const;
  void set_fire(::google::protobuf::uint32 value);

  // fixed32 user_id = 4;
  void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  ::google::protobuf::uint32 user_id() const;
  void set_user_id(::google::protobuf::uint32 value);

  // fixed32 index_id = 5;
  void clear_index_id();
  static const int kIndexIdFieldNumber = 5;
  ::google::protobuf::uint32 index_id() const;
  void set_index_id(::google::protobuf::uint32 value);

  // float x = 6;
  void clear_x();
  static const int kXFieldNumber = 6;
  float x() const;
  void set_x(float value);

  // float y = 7;
  void clear_y();
  static const int kYFieldNumber = 7;
  float y() const;
  void set_y(float value);

  // float z = 8;
  void clear_z();
  static const int kZFieldNumber = 8;
  float z() const;
  void set_z(float value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.PlaneOperateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float horizontal_;
  float vertical_;
  ::google::protobuf::uint32 fire_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 index_id_;
  float x_;
  float y_;
  float z_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsPlaneOperateResponseImpl();
};
// -------------------------------------------------------------------

class WaveCreateResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.WaveCreateResponse) */ {
 public:
  WaveCreateResponse();
  virtual ~WaveCreateResponse();

  WaveCreateResponse(const WaveCreateResponse& from);

  inline WaveCreateResponse& operator=(const WaveCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  WaveCreateResponse(WaveCreateResponse&& from) noexcept
    : WaveCreateResponse() {
    *this = ::std::move(from);
  }

  inline WaveCreateResponse& operator=(WaveCreateResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const WaveCreateResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const WaveCreateResponse* internal_default_instance() {
    return reinterpret_cast<const WaveCreateResponse*>(
               &_WaveCreateResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(WaveCreateResponse* other);
  friend void swap(WaveCreateResponse& a, WaveCreateResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline WaveCreateResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WaveCreateResponse>(NULL);
  }

  WaveCreateResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<WaveCreateResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const WaveCreateResponse& from);
  void MergeFrom(const WaveCreateResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(WaveCreateResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // float y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // float z = 3;
  void clear_z();
  static const int kZFieldNumber = 3;
  float z() const;
  void set_z(float value);

  // float angel = 4;
  void clear_angel();
  static const int kAngelFieldNumber = 4;
  float angel() const;
  void set_angel(float value);

  // fixed32 type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.WaveCreateResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float x_;
  float y_;
  float z_;
  float angel_;
  ::google::protobuf::uint32 type_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsWaveCreateResponseImpl();
};
// -------------------------------------------------------------------

class ExitSceneRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.ExitSceneRequest) */ {
 public:
  ExitSceneRequest();
  virtual ~ExitSceneRequest();

  ExitSceneRequest(const ExitSceneRequest& from);

  inline ExitSceneRequest& operator=(const ExitSceneRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitSceneRequest(ExitSceneRequest&& from) noexcept
    : ExitSceneRequest() {
    *this = ::std::move(from);
  }

  inline ExitSceneRequest& operator=(ExitSceneRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitSceneRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitSceneRequest* internal_default_instance() {
    return reinterpret_cast<const ExitSceneRequest*>(
               &_ExitSceneRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(ExitSceneRequest* other);
  friend void swap(ExitSceneRequest& a, ExitSceneRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitSceneRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExitSceneRequest>(NULL);
  }

  ExitSceneRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExitSceneRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitSceneRequest& from);
  void MergeFrom(const ExitSceneRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitSceneRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.ExitSceneRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsExitSceneRequestImpl();
};
// -------------------------------------------------------------------

class ExitSceneResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.ExitSceneResponse) */ {
 public:
  ExitSceneResponse();
  virtual ~ExitSceneResponse();

  ExitSceneResponse(const ExitSceneResponse& from);

  inline ExitSceneResponse& operator=(const ExitSceneResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitSceneResponse(ExitSceneResponse&& from) noexcept
    : ExitSceneResponse() {
    *this = ::std::move(from);
  }

  inline ExitSceneResponse& operator=(ExitSceneResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitSceneResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitSceneResponse* internal_default_instance() {
    return reinterpret_cast<const ExitSceneResponse*>(
               &_ExitSceneResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(ExitSceneResponse* other);
  friend void swap(ExitSceneResponse& a, ExitSceneResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitSceneResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExitSceneResponse>(NULL);
  }

  ExitSceneResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<ExitSceneResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitSceneResponse& from);
  void MergeFrom(const ExitSceneResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitSceneResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.ExitSceneResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsExitSceneResponseImpl();
};
// -------------------------------------------------------------------

class TimeSyncRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.TimeSyncRequest) */ {
 public:
  TimeSyncRequest();
  virtual ~TimeSyncRequest();

  TimeSyncRequest(const TimeSyncRequest& from);

  inline TimeSyncRequest& operator=(const TimeSyncRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeSyncRequest(TimeSyncRequest&& from) noexcept
    : TimeSyncRequest() {
    *this = ::std::move(from);
  }

  inline TimeSyncRequest& operator=(TimeSyncRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeSyncRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeSyncRequest* internal_default_instance() {
    return reinterpret_cast<const TimeSyncRequest*>(
               &_TimeSyncRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(TimeSyncRequest* other);
  friend void swap(TimeSyncRequest& a, TimeSyncRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeSyncRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TimeSyncRequest>(NULL);
  }

  TimeSyncRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TimeSyncRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimeSyncRequest& from);
  void MergeFrom(const TimeSyncRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimeSyncRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.TimeSyncRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsTimeSyncRequestImpl();
};
// -------------------------------------------------------------------

class TimeSyncResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.TimeSyncResponse) */ {
 public:
  TimeSyncResponse();
  virtual ~TimeSyncResponse();

  TimeSyncResponse(const TimeSyncResponse& from);

  inline TimeSyncResponse& operator=(const TimeSyncResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  TimeSyncResponse(TimeSyncResponse&& from) noexcept
    : TimeSyncResponse() {
    *this = ::std::move(from);
  }

  inline TimeSyncResponse& operator=(TimeSyncResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const TimeSyncResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TimeSyncResponse* internal_default_instance() {
    return reinterpret_cast<const TimeSyncResponse*>(
               &_TimeSyncResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(TimeSyncResponse* other);
  friend void swap(TimeSyncResponse& a, TimeSyncResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline TimeSyncResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TimeSyncResponse>(NULL);
  }

  TimeSyncResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<TimeSyncResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TimeSyncResponse& from);
  void MergeFrom(const TimeSyncResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TimeSyncResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.TimeSyncResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsTimeSyncResponseImpl();
};
// -------------------------------------------------------------------

class PlaneDestroyRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.PlaneDestroyRequest) */ {
 public:
  PlaneDestroyRequest();
  virtual ~PlaneDestroyRequest();

  PlaneDestroyRequest(const PlaneDestroyRequest& from);

  inline PlaneDestroyRequest& operator=(const PlaneDestroyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaneDestroyRequest(PlaneDestroyRequest&& from) noexcept
    : PlaneDestroyRequest() {
    *this = ::std::move(from);
  }

  inline PlaneDestroyRequest& operator=(PlaneDestroyRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneDestroyRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaneDestroyRequest* internal_default_instance() {
    return reinterpret_cast<const PlaneDestroyRequest*>(
               &_PlaneDestroyRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(PlaneDestroyRequest* other);
  friend void swap(PlaneDestroyRequest& a, PlaneDestroyRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaneDestroyRequest* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneDestroyRequest>(NULL);
  }

  PlaneDestroyRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneDestroyRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneDestroyRequest& from);
  void MergeFrom(const PlaneDestroyRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneDestroyRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 index_id = 1;
  void clear_index_id();
  static const int kIndexIdFieldNumber = 1;
  ::google::protobuf::uint32 index_id() const;
  void set_index_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.PlaneDestroyRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 index_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsPlaneDestroyRequestImpl();
};
// -------------------------------------------------------------------

class PlaneDestroyResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.PlaneDestroyResponse) */ {
 public:
  PlaneDestroyResponse();
  virtual ~PlaneDestroyResponse();

  PlaneDestroyResponse(const PlaneDestroyResponse& from);

  inline PlaneDestroyResponse& operator=(const PlaneDestroyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PlaneDestroyResponse(PlaneDestroyResponse&& from) noexcept
    : PlaneDestroyResponse() {
    *this = ::std::move(from);
  }

  inline PlaneDestroyResponse& operator=(PlaneDestroyResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneDestroyResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PlaneDestroyResponse* internal_default_instance() {
    return reinterpret_cast<const PlaneDestroyResponse*>(
               &_PlaneDestroyResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(PlaneDestroyResponse* other);
  friend void swap(PlaneDestroyResponse& a, PlaneDestroyResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PlaneDestroyResponse* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneDestroyResponse>(NULL);
  }

  PlaneDestroyResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<PlaneDestroyResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneDestroyResponse& from);
  void MergeFrom(const PlaneDestroyResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneDestroyResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // fixed32 index_id = 1;
  void clear_index_id();
  static const int kIndexIdFieldNumber = 1;
  ::google::protobuf::uint32 index_id() const;
  void set_index_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.PlaneDestroyResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 index_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsPlaneDestroyResponseImpl();
};
// -------------------------------------------------------------------

class Request : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Request) */ {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Request(Request&& from) noexcept
    : Request() {
    *this = ::std::move(from);
  }

  inline Request& operator=(Request&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Request* internal_default_instance() {
    return reinterpret_cast<const Request*>(
               &_Request_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(Request* other);
  friend void swap(Request& a, Request& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Request* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Request>(NULL);
  }

  Request* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Request>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Request* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtoMsg.LoginRequest login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::ProtoMsg::LoginRequest& login() const;
  ::ProtoMsg::LoginRequest* release_login();
  ::ProtoMsg::LoginRequest* mutable_login();
  void set_allocated_login(::ProtoMsg::LoginRequest* login);

  // .ProtoMsg.LogoutRequest logout = 2;
  bool has_logout() const;
  void clear_logout();
  static const int kLogoutFieldNumber = 2;
  const ::ProtoMsg::LogoutRequest& logout() const;
  ::ProtoMsg::LogoutRequest* release_logout();
  ::ProtoMsg::LogoutRequest* mutable_logout();
  void set_allocated_logout(::ProtoMsg::LogoutRequest* logout);

  // .ProtoMsg.RegisterResquest register = 3;
  bool has_register_() const;
  void clear_register_();
  static const int kRegisterFieldNumber = 3;
  const ::ProtoMsg::RegisterResquest& register_() const;
  ::ProtoMsg::RegisterResquest* release_register_();
  ::ProtoMsg::RegisterResquest* mutable_register_();
  void set_allocated_register_(::ProtoMsg::RegisterResquest* register_);

  // .ProtoMsg.EchoRequest echo = 4;
  bool has_echo() const;
  void clear_echo();
  static const int kEchoFieldNumber = 4;
  const ::ProtoMsg::EchoRequest& echo() const;
  ::ProtoMsg::EchoRequest* release_echo();
  ::ProtoMsg::EchoRequest* mutable_echo();
  void set_allocated_echo(::ProtoMsg::EchoRequest* echo);

  // .ProtoMsg.CubeOperateRequest cube_operate = 5;
  bool has_cube_operate() const;
  void clear_cube_operate();
  static const int kCubeOperateFieldNumber = 5;
  const ::ProtoMsg::CubeOperateRequest& cube_operate() const;
  ::ProtoMsg::CubeOperateRequest* release_cube_operate();
  ::ProtoMsg::CubeOperateRequest* mutable_cube_operate();
  void set_allocated_cube_operate(::ProtoMsg::CubeOperateRequest* cube_operate);

  // .ProtoMsg.SceneChangeCompleteRequest scene_change_complete = 6;
  bool has_scene_change_complete() const;
  void clear_scene_change_complete();
  static const int kSceneChangeCompleteFieldNumber = 6;
  const ::ProtoMsg::SceneChangeCompleteRequest& scene_change_complete() const;
  ::ProtoMsg::SceneChangeCompleteRequest* release_scene_change_complete();
  ::ProtoMsg::SceneChangeCompleteRequest* mutable_scene_change_complete();
  void set_allocated_scene_change_complete(::ProtoMsg::SceneChangeCompleteRequest* scene_change_complete);

  // .ProtoMsg.MatchBeginRequest match_begin = 7;
  bool has_match_begin() const;
  void clear_match_begin();
  static const int kMatchBeginFieldNumber = 7;
  const ::ProtoMsg::MatchBeginRequest& match_begin() const;
  ::ProtoMsg::MatchBeginRequest* release_match_begin();
  ::ProtoMsg::MatchBeginRequest* mutable_match_begin();
  void set_allocated_match_begin(::ProtoMsg::MatchBeginRequest* match_begin);

  // .ProtoMsg.MatchCompleteRequest match_complete = 8;
  bool has_match_complete() const;
  void clear_match_complete();
  static const int kMatchCompleteFieldNumber = 8;
  const ::ProtoMsg::MatchCompleteRequest& match_complete() const;
  ::ProtoMsg::MatchCompleteRequest* release_match_complete();
  ::ProtoMsg::MatchCompleteRequest* mutable_match_complete();
  void set_allocated_match_complete(::ProtoMsg::MatchCompleteRequest* match_complete);

  // .ProtoMsg.MatchCancelRequest match_cancel = 9;
  bool has_match_cancel() const;
  void clear_match_cancel();
  static const int kMatchCancelFieldNumber = 9;
  const ::ProtoMsg::MatchCancelRequest& match_cancel() const;
  ::ProtoMsg::MatchCancelRequest* release_match_cancel();
  ::ProtoMsg::MatchCancelRequest* mutable_match_cancel();
  void set_allocated_match_cancel(::ProtoMsg::MatchCancelRequest* match_cancel);

  // .ProtoMsg.PlaneOperateRequest plane_operate = 10;
  bool has_plane_operate() const;
  void clear_plane_operate();
  static const int kPlaneOperateFieldNumber = 10;
  const ::ProtoMsg::PlaneOperateRequest& plane_operate() const;
  ::ProtoMsg::PlaneOperateRequest* release_plane_operate();
  ::ProtoMsg::PlaneOperateRequest* mutable_plane_operate();
  void set_allocated_plane_operate(::ProtoMsg::PlaneOperateRequest* plane_operate);

  // .ProtoMsg.ExitSceneRequest exit_scene = 11;
  bool has_exit_scene() const;
  void clear_exit_scene();
  static const int kExitSceneFieldNumber = 11;
  const ::ProtoMsg::ExitSceneRequest& exit_scene() const;
  ::ProtoMsg::ExitSceneRequest* release_exit_scene();
  ::ProtoMsg::ExitSceneRequest* mutable_exit_scene();
  void set_allocated_exit_scene(::ProtoMsg::ExitSceneRequest* exit_scene);

  // .ProtoMsg.TimeSyncRequest time_sync = 12;
  bool has_time_sync() const;
  void clear_time_sync();
  static const int kTimeSyncFieldNumber = 12;
  const ::ProtoMsg::TimeSyncRequest& time_sync() const;
  ::ProtoMsg::TimeSyncRequest* release_time_sync();
  ::ProtoMsg::TimeSyncRequest* mutable_time_sync();
  void set_allocated_time_sync(::ProtoMsg::TimeSyncRequest* time_sync);

  // .ProtoMsg.PlaneDestroyRequest plane_destroy = 13;
  bool has_plane_destroy() const;
  void clear_plane_destroy();
  static const int kPlaneDestroyFieldNumber = 13;
  const ::ProtoMsg::PlaneDestroyRequest& plane_destroy() const;
  ::ProtoMsg::PlaneDestroyRequest* release_plane_destroy();
  ::ProtoMsg::PlaneDestroyRequest* mutable_plane_destroy();
  void set_allocated_plane_destroy(::ProtoMsg::PlaneDestroyRequest* plane_destroy);

  // @@protoc_insertion_point(class_scope:ProtoMsg.Request)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtoMsg::LoginRequest* login_;
  ::ProtoMsg::LogoutRequest* logout_;
  ::ProtoMsg::RegisterResquest* register__;
  ::ProtoMsg::EchoRequest* echo_;
  ::ProtoMsg::CubeOperateRequest* cube_operate_;
  ::ProtoMsg::SceneChangeCompleteRequest* scene_change_complete_;
  ::ProtoMsg::MatchBeginRequest* match_begin_;
  ::ProtoMsg::MatchCompleteRequest* match_complete_;
  ::ProtoMsg::MatchCancelRequest* match_cancel_;
  ::ProtoMsg::PlaneOperateRequest* plane_operate_;
  ::ProtoMsg::ExitSceneRequest* exit_scene_;
  ::ProtoMsg::TimeSyncRequest* time_sync_;
  ::ProtoMsg::PlaneDestroyRequest* plane_destroy_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsRequestImpl();
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Response) */ {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Response(Response&& from) noexcept
    : Response() {
    *this = ::std::move(from);
  }

  inline Response& operator=(Response&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Response* internal_default_instance() {
    return reinterpret_cast<const Response*>(
               &_Response_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(Response* other);
  friend void swap(Response& a, Response& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Response* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Response>(NULL);
  }

  Response* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Response>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Response* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtoMsg.LoginResponse login = 1;
  bool has_login() const;
  void clear_login();
  static const int kLoginFieldNumber = 1;
  const ::ProtoMsg::LoginResponse& login() const;
  ::ProtoMsg::LoginResponse* release_login();
  ::ProtoMsg::LoginResponse* mutable_login();
  void set_allocated_login(::ProtoMsg::LoginResponse* login);

  // .ProtoMsg.LogoutResponse logout = 2;
  bool has_logout() const;
  void clear_logout();
  static const int kLogoutFieldNumber = 2;
  const ::ProtoMsg::LogoutResponse& logout() const;
  ::ProtoMsg::LogoutResponse* release_logout();
  ::ProtoMsg::LogoutResponse* mutable_logout();
  void set_allocated_logout(::ProtoMsg::LogoutResponse* logout);

  // .ProtoMsg.RegisterResponse register = 3;
  bool has_register_() const;
  void clear_register_();
  static const int kRegisterFieldNumber = 3;
  const ::ProtoMsg::RegisterResponse& register_() const;
  ::ProtoMsg::RegisterResponse* release_register_();
  ::ProtoMsg::RegisterResponse* mutable_register_();
  void set_allocated_register_(::ProtoMsg::RegisterResponse* register_);

  // .ProtoMsg.CubeOperateResponse cube_operate = 4;
  bool has_cube_operate() const;
  void clear_cube_operate();
  static const int kCubeOperateFieldNumber = 4;
  const ::ProtoMsg::CubeOperateResponse& cube_operate() const;
  ::ProtoMsg::CubeOperateResponse* release_cube_operate();
  ::ProtoMsg::CubeOperateResponse* mutable_cube_operate();
  void set_allocated_cube_operate(::ProtoMsg::CubeOperateResponse* cube_operate);

  // .ProtoMsg.SceneChangeCompleteResponse scene_change_complete = 5;
  bool has_scene_change_complete() const;
  void clear_scene_change_complete();
  static const int kSceneChangeCompleteFieldNumber = 5;
  const ::ProtoMsg::SceneChangeCompleteResponse& scene_change_complete() const;
  ::ProtoMsg::SceneChangeCompleteResponse* release_scene_change_complete();
  ::ProtoMsg::SceneChangeCompleteResponse* mutable_scene_change_complete();
  void set_allocated_scene_change_complete(::ProtoMsg::SceneChangeCompleteResponse* scene_change_complete);

  // .ProtoMsg.CubeCreateResponse cube_create_response = 6;
  bool has_cube_create_response() const;
  void clear_cube_create_response();
  static const int kCubeCreateResponseFieldNumber = 6;
  const ::ProtoMsg::CubeCreateResponse& cube_create_response() const;
  ::ProtoMsg::CubeCreateResponse* release_cube_create_response();
  ::ProtoMsg::CubeCreateResponse* mutable_cube_create_response();
  void set_allocated_cube_create_response(::ProtoMsg::CubeCreateResponse* cube_create_response);

  // .ProtoMsg.CubeDeleteResponse cube_delete_Response = 7;
  bool has_cube_delete_response() const;
  void clear_cube_delete_response();
  static const int kCubeDeleteResponseFieldNumber = 7;
  const ::ProtoMsg::CubeDeleteResponse& cube_delete_response() const;
  ::ProtoMsg::CubeDeleteResponse* release_cube_delete_response();
  ::ProtoMsg::CubeDeleteResponse* mutable_cube_delete_response();
  void set_allocated_cube_delete_response(::ProtoMsg::CubeDeleteResponse* cube_delete_response);

  // .ProtoMsg.MatchBeginResponse match_begin = 8;
  bool has_match_begin() const;
  void clear_match_begin();
  static const int kMatchBeginFieldNumber = 8;
  const ::ProtoMsg::MatchBeginResponse& match_begin() const;
  ::ProtoMsg::MatchBeginResponse* release_match_begin();
  ::ProtoMsg::MatchBeginResponse* mutable_match_begin();
  void set_allocated_match_begin(::ProtoMsg::MatchBeginResponse* match_begin);

  // .ProtoMsg.MatchCompleteResponse match_complete = 9;
  bool has_match_complete() const;
  void clear_match_complete();
  static const int kMatchCompleteFieldNumber = 9;
  const ::ProtoMsg::MatchCompleteResponse& match_complete() const;
  ::ProtoMsg::MatchCompleteResponse* release_match_complete();
  ::ProtoMsg::MatchCompleteResponse* mutable_match_complete();
  void set_allocated_match_complete(::ProtoMsg::MatchCompleteResponse* match_complete);

  // .ProtoMsg.MatchCancelResponse match_cancel = 10;
  bool has_match_cancel() const;
  void clear_match_cancel();
  static const int kMatchCancelFieldNumber = 10;
  const ::ProtoMsg::MatchCancelResponse& match_cancel() const;
  ::ProtoMsg::MatchCancelResponse* release_match_cancel();
  ::ProtoMsg::MatchCancelResponse* mutable_match_cancel();
  void set_allocated_match_cancel(::ProtoMsg::MatchCancelResponse* match_cancel);

  // .ProtoMsg.PlaneOperateResponse plane_operate = 11;
  bool has_plane_operate() const;
  void clear_plane_operate();
  static const int kPlaneOperateFieldNumber = 11;
  const ::ProtoMsg::PlaneOperateResponse& plane_operate() const;
  ::ProtoMsg::PlaneOperateResponse* release_plane_operate();
  ::ProtoMsg::PlaneOperateResponse* mutable_plane_operate();
  void set_allocated_plane_operate(::ProtoMsg::PlaneOperateResponse* plane_operate);

  // .ProtoMsg.WaveCreateResponse wave_create = 12;
  bool has_wave_create() const;
  void clear_wave_create();
  static const int kWaveCreateFieldNumber = 12;
  const ::ProtoMsg::WaveCreateResponse& wave_create() const;
  ::ProtoMsg::WaveCreateResponse* release_wave_create();
  ::ProtoMsg::WaveCreateResponse* mutable_wave_create();
  void set_allocated_wave_create(::ProtoMsg::WaveCreateResponse* wave_create);

  // .ProtoMsg.ExitSceneResponse exit_scene = 13;
  bool has_exit_scene() const;
  void clear_exit_scene();
  static const int kExitSceneFieldNumber = 13;
  const ::ProtoMsg::ExitSceneResponse& exit_scene() const;
  ::ProtoMsg::ExitSceneResponse* release_exit_scene();
  ::ProtoMsg::ExitSceneResponse* mutable_exit_scene();
  void set_allocated_exit_scene(::ProtoMsg::ExitSceneResponse* exit_scene);

  // .ProtoMsg.TimeSyncResponse time_sync = 14;
  bool has_time_sync() const;
  void clear_time_sync();
  static const int kTimeSyncFieldNumber = 14;
  const ::ProtoMsg::TimeSyncResponse& time_sync() const;
  ::ProtoMsg::TimeSyncResponse* release_time_sync();
  ::ProtoMsg::TimeSyncResponse* mutable_time_sync();
  void set_allocated_time_sync(::ProtoMsg::TimeSyncResponse* time_sync);

  // .ProtoMsg.PlaneDestroyResponse plane_destroy = 15;
  bool has_plane_destroy() const;
  void clear_plane_destroy();
  static const int kPlaneDestroyFieldNumber = 15;
  const ::ProtoMsg::PlaneDestroyResponse& plane_destroy() const;
  ::ProtoMsg::PlaneDestroyResponse* release_plane_destroy();
  ::ProtoMsg::PlaneDestroyResponse* mutable_plane_destroy();
  void set_allocated_plane_destroy(::ProtoMsg::PlaneDestroyResponse* plane_destroy);

  // @@protoc_insertion_point(class_scope:ProtoMsg.Response)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtoMsg::LoginResponse* login_;
  ::ProtoMsg::LogoutResponse* logout_;
  ::ProtoMsg::RegisterResponse* register__;
  ::ProtoMsg::CubeOperateResponse* cube_operate_;
  ::ProtoMsg::SceneChangeCompleteResponse* scene_change_complete_;
  ::ProtoMsg::CubeCreateResponse* cube_create_response_;
  ::ProtoMsg::CubeDeleteResponse* cube_delete_response_;
  ::ProtoMsg::MatchBeginResponse* match_begin_;
  ::ProtoMsg::MatchCompleteResponse* match_complete_;
  ::ProtoMsg::MatchCancelResponse* match_cancel_;
  ::ProtoMsg::PlaneOperateResponse* plane_operate_;
  ::ProtoMsg::WaveCreateResponse* wave_create_;
  ::ProtoMsg::ExitSceneResponse* exit_scene_;
  ::ProtoMsg::TimeSyncResponse* time_sync_;
  ::ProtoMsg::PlaneDestroyResponse* plane_destroy_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsResponseImpl();
};
// -------------------------------------------------------------------

class Notification : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Notification) */ {
 public:
  Notification();
  virtual ~Notification();

  Notification(const Notification& from);

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Notification(Notification&& from) noexcept
    : Notification() {
    *this = ::std::move(from);
  }

  inline Notification& operator=(Notification&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Notification& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Notification* internal_default_instance() {
    return reinterpret_cast<const Notification*>(
               &_Notification_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(Notification* other);
  friend void swap(Notification& a, Notification& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Notification* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Notification>(NULL);
  }

  Notification* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Notification>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Notification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtoMsg.MessageNofification message = 1;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 1;
  const ::ProtoMsg::MessageNofification& message() const;
  ::ProtoMsg::MessageNofification* release_message();
  ::ProtoMsg::MessageNofification* mutable_message();
  void set_allocated_message(::ProtoMsg::MessageNofification* message);

  // .ProtoMsg.WelcomeNotification welcome = 2;
  bool has_welcome() const;
  void clear_welcome();
  static const int kWelcomeFieldNumber = 2;
  const ::ProtoMsg::WelcomeNotification& welcome() const;
  ::ProtoMsg::WelcomeNotification* release_welcome();
  ::ProtoMsg::WelcomeNotification* mutable_welcome();
  void set_allocated_welcome(::ProtoMsg::WelcomeNotification* welcome);

  // .ProtoMsg.OtherClientNotification other_client = 3;
  bool has_other_client() const;
  void clear_other_client();
  static const int kOtherClientFieldNumber = 3;
  const ::ProtoMsg::OtherClientNotification& other_client() const;
  ::ProtoMsg::OtherClientNotification* release_other_client();
  ::ProtoMsg::OtherClientNotification* mutable_other_client();
  void set_allocated_other_client(::ProtoMsg::OtherClientNotification* other_client);

  // @@protoc_insertion_point(class_scope:ProtoMsg.Notification)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtoMsg::MessageNofification* message_;
  ::ProtoMsg::WelcomeNotification* welcome_;
  ::ProtoMsg::OtherClientNotification* other_client_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsNotificationImpl();
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Command) */ {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Command(Command&& from) noexcept
    : Command() {
    *this = ::std::move(from);
  }

  inline Command& operator=(Command&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Command* internal_default_instance() {
    return reinterpret_cast<const Command*>(
               &_Command_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(Command* other);
  friend void swap(Command& a, Command& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Command* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Command>(NULL);
  }

  Command* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Command>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Command* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:ProtoMsg.Command)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsCommandImpl();
};
// -------------------------------------------------------------------

class Message : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Message>(NULL);
  }

  Message* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL {
    return ::google::protobuf::Arena::Create<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ProtoMsg.Request request = 6;
  bool has_request() const;
  void clear_request();
  static const int kRequestFieldNumber = 6;
  const ::ProtoMsg::Request& request() const;
  ::ProtoMsg::Request* release_request();
  ::ProtoMsg::Request* mutable_request();
  void set_allocated_request(::ProtoMsg::Request* request);

  // .ProtoMsg.Response response = 7;
  bool has_response() const;
  void clear_response();
  static const int kResponseFieldNumber = 7;
  const ::ProtoMsg::Response& response() const;
  ::ProtoMsg::Response* release_response();
  ::ProtoMsg::Response* mutable_response();
  void set_allocated_response(::ProtoMsg::Response* response);

  // .ProtoMsg.Notification notification = 8;
  bool has_notification() const;
  void clear_notification();
  static const int kNotificationFieldNumber = 8;
  const ::ProtoMsg::Notification& notification() const;
  ::ProtoMsg::Notification* release_notification();
  ::ProtoMsg::Notification* mutable_notification();
  void set_allocated_notification(::ProtoMsg::Notification* notification);

  // .ProtoMsg.MSG msg_type = 1;
  void clear_msg_type();
  static const int kMsgTypeFieldNumber = 1;
  ::ProtoMsg::MSG msg_type() const;
  void set_msg_type(::ProtoMsg::MSG value);

  // fixed32 userid = 2;
  void clear_userid();
  static const int kUseridFieldNumber = 2;
  ::google::protobuf::uint32 userid() const;
  void set_userid(::google::protobuf::uint32 value);

  // fixed32 sequence = 3;
  void clear_sequence();
  static const int kSequenceFieldNumber = 3;
  ::google::protobuf::uint32 sequence() const;
  void set_sequence(::google::protobuf::uint32 value);

  // fixed32 session_id = 4;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 4;
  ::google::protobuf::uint32 session_id() const;
  void set_session_id(::google::protobuf::uint32 value);

  // int64 timestamp_ms = 5;
  void clear_timestamp_ms();
  static const int kTimestampMsFieldNumber = 5;
  ::google::protobuf::int64 timestamp_ms() const;
  void set_timestamp_ms(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.Message)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ProtoMsg::Request* request_;
  ::ProtoMsg::Response* response_;
  ::ProtoMsg::Notification* notification_;
  int msg_type_;
  ::google::protobuf::uint32 userid_;
  ::google::protobuf::uint32 sequence_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::int64 timestamp_ms_;
  mutable int _cached_size_;
  friend struct ::protobuf_Message_2eproto::TableStruct;
  friend void ::protobuf_Message_2eproto::InitDefaultsMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRequest

// string name = 1;
inline void LoginRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::name() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.LoginRequest.name)
  return name_.GetNoArena();
}
inline void LoginRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.LoginRequest.name)
}
#if LANG_CXX11
inline void LoginRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.LoginRequest.name)
}
#endif
inline void LoginRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.LoginRequest.name)
}
inline void LoginRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.LoginRequest.name)
}
inline ::std::string* LoginRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.LoginRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_name() {
  // @@protoc_insertion_point(field_release:ProtoMsg.LoginRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.LoginRequest.name)
}

// string password = 2;
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:ProtoMsg.LoginRequest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// fixed32 result = 1;
inline void LoginResponse::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.LoginResponse.result)
  return result_;
}
inline void LoginResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.LoginResponse.result)
}

// -------------------------------------------------------------------

// LogoutRequest

// string name = 1;
inline void LogoutRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LogoutRequest::name() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.LogoutRequest.name)
  return name_.GetNoArena();
}
inline void LogoutRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.LogoutRequest.name)
}
#if LANG_CXX11
inline void LogoutRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.LogoutRequest.name)
}
#endif
inline void LogoutRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.LogoutRequest.name)
}
inline void LogoutRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.LogoutRequest.name)
}
inline ::std::string* LogoutRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.LogoutRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogoutRequest::release_name() {
  // @@protoc_insertion_point(field_release:ProtoMsg.LogoutRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogoutRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.LogoutRequest.name)
}

// -------------------------------------------------------------------

// LogoutResponse

// fixed32 result = 1;
inline void LogoutResponse::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 LogoutResponse::result() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.LogoutResponse.result)
  return result_;
}
inline void LogoutResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.LogoutResponse.result)
}

// -------------------------------------------------------------------

// RegisterResquest

// string name = 1;
inline void RegisterResquest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterResquest::name() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.RegisterResquest.name)
  return name_.GetNoArena();
}
inline void RegisterResquest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.RegisterResquest.name)
}
#if LANG_CXX11
inline void RegisterResquest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.RegisterResquest.name)
}
#endif
inline void RegisterResquest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.RegisterResquest.name)
}
inline void RegisterResquest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.RegisterResquest.name)
}
inline ::std::string* RegisterResquest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.RegisterResquest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterResquest::release_name() {
  // @@protoc_insertion_point(field_release:ProtoMsg.RegisterResquest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterResquest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.RegisterResquest.name)
}

// string password = 2;
inline void RegisterResquest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterResquest::password() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.RegisterResquest.password)
  return password_.GetNoArena();
}
inline void RegisterResquest::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.RegisterResquest.password)
}
#if LANG_CXX11
inline void RegisterResquest::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.RegisterResquest.password)
}
#endif
inline void RegisterResquest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.RegisterResquest.password)
}
inline void RegisterResquest::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.RegisterResquest.password)
}
inline ::std::string* RegisterResquest::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.RegisterResquest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterResquest::release_password() {
  // @@protoc_insertion_point(field_release:ProtoMsg.RegisterResquest.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterResquest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.RegisterResquest.password)
}

// string email = 3;
inline void RegisterResquest::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterResquest::email() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.RegisterResquest.email)
  return email_.GetNoArena();
}
inline void RegisterResquest::set_email(const ::std::string& value) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.RegisterResquest.email)
}
#if LANG_CXX11
inline void RegisterResquest::set_email(::std::string&& value) {
  
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.RegisterResquest.email)
}
#endif
inline void RegisterResquest::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.RegisterResquest.email)
}
inline void RegisterResquest::set_email(const char* value, size_t size) {
  
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.RegisterResquest.email)
}
inline ::std::string* RegisterResquest::mutable_email() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.RegisterResquest.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterResquest::release_email() {
  // @@protoc_insertion_point(field_release:ProtoMsg.RegisterResquest.email)
  
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterResquest::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    
  } else {
    
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.RegisterResquest.email)
}

// string phone = 4;
inline void RegisterResquest::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RegisterResquest::phone() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.RegisterResquest.phone)
  return phone_.GetNoArena();
}
inline void RegisterResquest::set_phone(const ::std::string& value) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.RegisterResquest.phone)
}
#if LANG_CXX11
inline void RegisterResquest::set_phone(::std::string&& value) {
  
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.RegisterResquest.phone)
}
#endif
inline void RegisterResquest::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.RegisterResquest.phone)
}
inline void RegisterResquest::set_phone(const char* value, size_t size) {
  
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.RegisterResquest.phone)
}
inline ::std::string* RegisterResquest::mutable_phone() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.RegisterResquest.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RegisterResquest::release_phone() {
  // @@protoc_insertion_point(field_release:ProtoMsg.RegisterResquest.phone)
  
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RegisterResquest::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    
  } else {
    
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.RegisterResquest.phone)
}

// -------------------------------------------------------------------

// RegisterResponse

// fixed32 result = 1;
inline void RegisterResponse::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 RegisterResponse::result() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.RegisterResponse.result)
  return result_;
}
inline void RegisterResponse::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.RegisterResponse.result)
}

// -------------------------------------------------------------------

// MessageNofification

// -------------------------------------------------------------------

// WelcomeNotification

// -------------------------------------------------------------------

// EchoRequest

// string msg = 1;
inline void EchoRequest::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EchoRequest::msg() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.EchoRequest.msg)
  return msg_.GetNoArena();
}
inline void EchoRequest::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.EchoRequest.msg)
}
#if LANG_CXX11
inline void EchoRequest::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.EchoRequest.msg)
}
#endif
inline void EchoRequest::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.EchoRequest.msg)
}
inline void EchoRequest::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.EchoRequest.msg)
}
inline ::std::string* EchoRequest::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.EchoRequest.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EchoRequest::release_msg() {
  // @@protoc_insertion_point(field_release:ProtoMsg.EchoRequest.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EchoRequest::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.EchoRequest.msg)
}

// -------------------------------------------------------------------

// OtherClientNotification

// string msg = 1;
inline void OtherClientNotification::clear_msg() {
  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OtherClientNotification::msg() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.OtherClientNotification.msg)
  return msg_.GetNoArena();
}
inline void OtherClientNotification::set_msg(const ::std::string& value) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.OtherClientNotification.msg)
}
#if LANG_CXX11
inline void OtherClientNotification::set_msg(::std::string&& value) {
  
  msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.OtherClientNotification.msg)
}
#endif
inline void OtherClientNotification::set_msg(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.OtherClientNotification.msg)
}
inline void OtherClientNotification::set_msg(const char* value, size_t size) {
  
  msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.OtherClientNotification.msg)
}
inline ::std::string* OtherClientNotification::mutable_msg() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.OtherClientNotification.msg)
  return msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OtherClientNotification::release_msg() {
  // @@protoc_insertion_point(field_release:ProtoMsg.OtherClientNotification.msg)
  
  return msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OtherClientNotification::set_allocated_msg(::std::string* msg) {
  if (msg != NULL) {
    
  } else {
    
  }
  msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msg);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.OtherClientNotification.msg)
}

// -------------------------------------------------------------------

// CubeOperateRequest

// float movement = 1;
inline void CubeOperateRequest::clear_movement() {
  movement_ = 0;
}
inline float CubeOperateRequest::movement() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.movement)
  return movement_;
}
inline void CubeOperateRequest::set_movement(float value) {
  
  movement_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.movement)
}

// float turn = 2;
inline void CubeOperateRequest::clear_turn() {
  turn_ = 0;
}
inline float CubeOperateRequest::turn() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.turn)
  return turn_;
}
inline void CubeOperateRequest::set_turn(float value) {
  
  turn_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.turn)
}

// fixed32 id = 3;
inline void CubeOperateRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CubeOperateRequest::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.id)
  return id_;
}
inline void CubeOperateRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.id)
}

// float x = 4;
inline void CubeOperateRequest::clear_x() {
  x_ = 0;
}
inline float CubeOperateRequest::x() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.x)
  return x_;
}
inline void CubeOperateRequest::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.x)
}

// float y = 5;
inline void CubeOperateRequest::clear_y() {
  y_ = 0;
}
inline float CubeOperateRequest::y() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.y)
  return y_;
}
inline void CubeOperateRequest::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.y)
}

// float z = 6;
inline void CubeOperateRequest::clear_z() {
  z_ = 0;
}
inline float CubeOperateRequest::z() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.z)
  return z_;
}
inline void CubeOperateRequest::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.z)
}

// fixed32 user_id = 7;
inline void CubeOperateRequest::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 CubeOperateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.user_id)
  return user_id_;
}
inline void CubeOperateRequest::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.user_id)
}

// float angle = 8;
inline void CubeOperateRequest::clear_angle() {
  angle_ = 0;
}
inline float CubeOperateRequest::angle() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateRequest.angle)
  return angle_;
}
inline void CubeOperateRequest::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateRequest.angle)
}

// -------------------------------------------------------------------

// CubeOperateResponse

// float movement = 1;
inline void CubeOperateResponse::clear_movement() {
  movement_ = 0;
}
inline float CubeOperateResponse::movement() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.movement)
  return movement_;
}
inline void CubeOperateResponse::set_movement(float value) {
  
  movement_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.movement)
}

// float turn = 2;
inline void CubeOperateResponse::clear_turn() {
  turn_ = 0;
}
inline float CubeOperateResponse::turn() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.turn)
  return turn_;
}
inline void CubeOperateResponse::set_turn(float value) {
  
  turn_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.turn)
}

// fixed32 id = 3;
inline void CubeOperateResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CubeOperateResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.id)
  return id_;
}
inline void CubeOperateResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.id)
}

// float x = 4;
inline void CubeOperateResponse::clear_x() {
  x_ = 0;
}
inline float CubeOperateResponse::x() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.x)
  return x_;
}
inline void CubeOperateResponse::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.x)
}

// float y = 5;
inline void CubeOperateResponse::clear_y() {
  y_ = 0;
}
inline float CubeOperateResponse::y() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.y)
  return y_;
}
inline void CubeOperateResponse::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.y)
}

// float z = 6;
inline void CubeOperateResponse::clear_z() {
  z_ = 0;
}
inline float CubeOperateResponse::z() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.z)
  return z_;
}
inline void CubeOperateResponse::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.z)
}

// fixed32 user_id = 7;
inline void CubeOperateResponse::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 CubeOperateResponse::user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.user_id)
  return user_id_;
}
inline void CubeOperateResponse::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.user_id)
}

// float angle = 8;
inline void CubeOperateResponse::clear_angle() {
  angle_ = 0;
}
inline float CubeOperateResponse::angle() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeOperateResponse.angle)
  return angle_;
}
inline void CubeOperateResponse::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeOperateResponse.angle)
}

// -------------------------------------------------------------------

// CubeCreateResponse

// float x = 1;
inline void CubeCreateResponse::clear_x() {
  x_ = 0;
}
inline float CubeCreateResponse::x() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeCreateResponse.x)
  return x_;
}
inline void CubeCreateResponse::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeCreateResponse.x)
}

// float y = 2;
inline void CubeCreateResponse::clear_y() {
  y_ = 0;
}
inline float CubeCreateResponse::y() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeCreateResponse.y)
  return y_;
}
inline void CubeCreateResponse::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeCreateResponse.y)
}

// float z = 3;
inline void CubeCreateResponse::clear_z() {
  z_ = 0;
}
inline float CubeCreateResponse::z() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeCreateResponse.z)
  return z_;
}
inline void CubeCreateResponse::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeCreateResponse.z)
}

// fixed32 user_id = 4;
inline void CubeCreateResponse::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 CubeCreateResponse::user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeCreateResponse.user_id)
  return user_id_;
}
inline void CubeCreateResponse::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeCreateResponse.user_id)
}

// fixed32 id = 5;
inline void CubeCreateResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CubeCreateResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeCreateResponse.id)
  return id_;
}
inline void CubeCreateResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeCreateResponse.id)
}

// float angle = 6;
inline void CubeCreateResponse::clear_angle() {
  angle_ = 0;
}
inline float CubeCreateResponse::angle() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeCreateResponse.angle)
  return angle_;
}
inline void CubeCreateResponse::set_angle(float value) {
  
  angle_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeCreateResponse.angle)
}

// -------------------------------------------------------------------

// CubeDeleteResponse

// fixed32 id = 1;
inline void CubeDeleteResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 CubeDeleteResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeDeleteResponse.id)
  return id_;
}
inline void CubeDeleteResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeDeleteResponse.id)
}

// fixed32 user_id = 2;
inline void CubeDeleteResponse::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 CubeDeleteResponse::user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.CubeDeleteResponse.user_id)
  return user_id_;
}
inline void CubeDeleteResponse::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.CubeDeleteResponse.user_id)
}

// -------------------------------------------------------------------

// SceneChangeCompleteRequest

// fixed32 id = 1;
inline void SceneChangeCompleteRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SceneChangeCompleteRequest::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.SceneChangeCompleteRequest.id)
  return id_;
}
inline void SceneChangeCompleteRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.SceneChangeCompleteRequest.id)
}

// -------------------------------------------------------------------

// SceneChangeCompleteResponse

// fixed32 id = 1;
inline void SceneChangeCompleteResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 SceneChangeCompleteResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.SceneChangeCompleteResponse.id)
  return id_;
}
inline void SceneChangeCompleteResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.SceneChangeCompleteResponse.id)
}

// -------------------------------------------------------------------

// MatchBeginRequest

// fixed32 id = 1;
inline void MatchBeginRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchBeginRequest::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchBeginRequest.id)
  return id_;
}
inline void MatchBeginRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchBeginRequest.id)
}

// -------------------------------------------------------------------

// MatchBeginResponse

// fixed32 id = 1;
inline void MatchBeginResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchBeginResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchBeginResponse.id)
  return id_;
}
inline void MatchBeginResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchBeginResponse.id)
}

// -------------------------------------------------------------------

// MatchCancelRequest

// fixed32 id = 1;
inline void MatchCancelRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchCancelRequest::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCancelRequest.id)
  return id_;
}
inline void MatchCancelRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCancelRequest.id)
}

// -------------------------------------------------------------------

// MatchCancelResponse

// fixed32 id = 1;
inline void MatchCancelResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchCancelResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCancelResponse.id)
  return id_;
}
inline void MatchCancelResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCancelResponse.id)
}

// -------------------------------------------------------------------

// MatchCompleteRequest

// fixed32 id = 1;
inline void MatchCompleteRequest::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchCompleteRequest::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCompleteRequest.id)
  return id_;
}
inline void MatchCompleteRequest::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCompleteRequest.id)
}

// fixed32 other_user_id = 2;
inline void MatchCompleteRequest::clear_other_user_id() {
  other_user_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchCompleteRequest::other_user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCompleteRequest.other_user_id)
  return other_user_id_;
}
inline void MatchCompleteRequest::set_other_user_id(::google::protobuf::uint32 value) {
  
  other_user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCompleteRequest.other_user_id)
}

// fixed32 user_count = 3;
inline void MatchCompleteRequest::clear_user_count() {
  user_count_ = 0u;
}
inline ::google::protobuf::uint32 MatchCompleteRequest::user_count() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCompleteRequest.user_count)
  return user_count_;
}
inline void MatchCompleteRequest::set_user_count(::google::protobuf::uint32 value) {
  
  user_count_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCompleteRequest.user_count)
}

// -------------------------------------------------------------------

// MatchCompleteResponse

// fixed32 id = 1;
inline void MatchCompleteResponse::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MatchCompleteResponse::id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCompleteResponse.id)
  return id_;
}
inline void MatchCompleteResponse::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCompleteResponse.id)
}

// fixed32 other_user_id = 2;
inline void MatchCompleteResponse::clear_other_user_id() {
  other_user_id_ = 0u;
}
inline ::google::protobuf::uint32 MatchCompleteResponse::other_user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCompleteResponse.other_user_id)
  return other_user_id_;
}
inline void MatchCompleteResponse::set_other_user_id(::google::protobuf::uint32 value) {
  
  other_user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCompleteResponse.other_user_id)
}

// fixed32 user_count = 3;
inline void MatchCompleteResponse::clear_user_count() {
  user_count_ = 0u;
}
inline ::google::protobuf::uint32 MatchCompleteResponse::user_count() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.MatchCompleteResponse.user_count)
  return user_count_;
}
inline void MatchCompleteResponse::set_user_count(::google::protobuf::uint32 value) {
  
  user_count_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.MatchCompleteResponse.user_count)
}

// -------------------------------------------------------------------

// PlaneOperateRequest

// float horizontal = 1;
inline void PlaneOperateRequest::clear_horizontal() {
  horizontal_ = 0;
}
inline float PlaneOperateRequest::horizontal() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.horizontal)
  return horizontal_;
}
inline void PlaneOperateRequest::set_horizontal(float value) {
  
  horizontal_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.horizontal)
}

// float vertical = 2;
inline void PlaneOperateRequest::clear_vertical() {
  vertical_ = 0;
}
inline float PlaneOperateRequest::vertical() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.vertical)
  return vertical_;
}
inline void PlaneOperateRequest::set_vertical(float value) {
  
  vertical_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.vertical)
}

// fixed32 fire = 3;
inline void PlaneOperateRequest::clear_fire() {
  fire_ = 0u;
}
inline ::google::protobuf::uint32 PlaneOperateRequest::fire() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.fire)
  return fire_;
}
inline void PlaneOperateRequest::set_fire(::google::protobuf::uint32 value) {
  
  fire_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.fire)
}

// fixed32 user_id = 4;
inline void PlaneOperateRequest::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 PlaneOperateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.user_id)
  return user_id_;
}
inline void PlaneOperateRequest::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.user_id)
}

// fixed32 index_id = 5;
inline void PlaneOperateRequest::clear_index_id() {
  index_id_ = 0u;
}
inline ::google::protobuf::uint32 PlaneOperateRequest::index_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.index_id)
  return index_id_;
}
inline void PlaneOperateRequest::set_index_id(::google::protobuf::uint32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.index_id)
}

// float x = 6;
inline void PlaneOperateRequest::clear_x() {
  x_ = 0;
}
inline float PlaneOperateRequest::x() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.x)
  return x_;
}
inline void PlaneOperateRequest::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.x)
}

// float y = 7;
inline void PlaneOperateRequest::clear_y() {
  y_ = 0;
}
inline float PlaneOperateRequest::y() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.y)
  return y_;
}
inline void PlaneOperateRequest::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.y)
}

// float z = 8;
inline void PlaneOperateRequest::clear_z() {
  z_ = 0;
}
inline float PlaneOperateRequest::z() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateRequest.z)
  return z_;
}
inline void PlaneOperateRequest::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateRequest.z)
}

// -------------------------------------------------------------------

// PlaneOperateResponse

// float horizontal = 1;
inline void PlaneOperateResponse::clear_horizontal() {
  horizontal_ = 0;
}
inline float PlaneOperateResponse::horizontal() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.horizontal)
  return horizontal_;
}
inline void PlaneOperateResponse::set_horizontal(float value) {
  
  horizontal_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.horizontal)
}

// float vertical = 2;
inline void PlaneOperateResponse::clear_vertical() {
  vertical_ = 0;
}
inline float PlaneOperateResponse::vertical() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.vertical)
  return vertical_;
}
inline void PlaneOperateResponse::set_vertical(float value) {
  
  vertical_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.vertical)
}

// fixed32 fire = 3;
inline void PlaneOperateResponse::clear_fire() {
  fire_ = 0u;
}
inline ::google::protobuf::uint32 PlaneOperateResponse::fire() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.fire)
  return fire_;
}
inline void PlaneOperateResponse::set_fire(::google::protobuf::uint32 value) {
  
  fire_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.fire)
}

// fixed32 user_id = 4;
inline void PlaneOperateResponse::clear_user_id() {
  user_id_ = 0u;
}
inline ::google::protobuf::uint32 PlaneOperateResponse::user_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.user_id)
  return user_id_;
}
inline void PlaneOperateResponse::set_user_id(::google::protobuf::uint32 value) {
  
  user_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.user_id)
}

// fixed32 index_id = 5;
inline void PlaneOperateResponse::clear_index_id() {
  index_id_ = 0u;
}
inline ::google::protobuf::uint32 PlaneOperateResponse::index_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.index_id)
  return index_id_;
}
inline void PlaneOperateResponse::set_index_id(::google::protobuf::uint32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.index_id)
}

// float x = 6;
inline void PlaneOperateResponse::clear_x() {
  x_ = 0;
}
inline float PlaneOperateResponse::x() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.x)
  return x_;
}
inline void PlaneOperateResponse::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.x)
}

// float y = 7;
inline void PlaneOperateResponse::clear_y() {
  y_ = 0;
}
inline float PlaneOperateResponse::y() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.y)
  return y_;
}
inline void PlaneOperateResponse::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.y)
}

// float z = 8;
inline void PlaneOperateResponse::clear_z() {
  z_ = 0;
}
inline float PlaneOperateResponse::z() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneOperateResponse.z)
  return z_;
}
inline void PlaneOperateResponse::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneOperateResponse.z)
}

// -------------------------------------------------------------------

// WaveCreateResponse

// float x = 1;
inline void WaveCreateResponse::clear_x() {
  x_ = 0;
}
inline float WaveCreateResponse::x() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.WaveCreateResponse.x)
  return x_;
}
inline void WaveCreateResponse::set_x(float value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.WaveCreateResponse.x)
}

// float y = 2;
inline void WaveCreateResponse::clear_y() {
  y_ = 0;
}
inline float WaveCreateResponse::y() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.WaveCreateResponse.y)
  return y_;
}
inline void WaveCreateResponse::set_y(float value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.WaveCreateResponse.y)
}

// float z = 3;
inline void WaveCreateResponse::clear_z() {
  z_ = 0;
}
inline float WaveCreateResponse::z() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.WaveCreateResponse.z)
  return z_;
}
inline void WaveCreateResponse::set_z(float value) {
  
  z_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.WaveCreateResponse.z)
}

// float angel = 4;
inline void WaveCreateResponse::clear_angel() {
  angel_ = 0;
}
inline float WaveCreateResponse::angel() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.WaveCreateResponse.angel)
  return angel_;
}
inline void WaveCreateResponse::set_angel(float value) {
  
  angel_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.WaveCreateResponse.angel)
}

// fixed32 type = 5;
inline void WaveCreateResponse::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 WaveCreateResponse::type() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.WaveCreateResponse.type)
  return type_;
}
inline void WaveCreateResponse::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.WaveCreateResponse.type)
}

// -------------------------------------------------------------------

// ExitSceneRequest

// -------------------------------------------------------------------

// ExitSceneResponse

// -------------------------------------------------------------------

// TimeSyncRequest

// -------------------------------------------------------------------

// TimeSyncResponse

// -------------------------------------------------------------------

// PlaneDestroyRequest

// fixed32 index_id = 1;
inline void PlaneDestroyRequest::clear_index_id() {
  index_id_ = 0u;
}
inline ::google::protobuf::uint32 PlaneDestroyRequest::index_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneDestroyRequest.index_id)
  return index_id_;
}
inline void PlaneDestroyRequest::set_index_id(::google::protobuf::uint32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneDestroyRequest.index_id)
}

// -------------------------------------------------------------------

// PlaneDestroyResponse

// fixed32 index_id = 1;
inline void PlaneDestroyResponse::clear_index_id() {
  index_id_ = 0u;
}
inline ::google::protobuf::uint32 PlaneDestroyResponse::index_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PlaneDestroyResponse.index_id)
  return index_id_;
}
inline void PlaneDestroyResponse::set_index_id(::google::protobuf::uint32 value) {
  
  index_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PlaneDestroyResponse.index_id)
}

// -------------------------------------------------------------------

// Request

// .ProtoMsg.LoginRequest login = 1;
inline bool Request::has_login() const {
  return this != internal_default_instance() && login_ != NULL;
}
inline void Request::clear_login() {
  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
}
inline const ::ProtoMsg::LoginRequest& Request::login() const {
  const ::ProtoMsg::LoginRequest* p = login_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.login)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::LoginRequest*>(
      &::ProtoMsg::_LoginRequest_default_instance_);
}
inline ::ProtoMsg::LoginRequest* Request::release_login() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.login)
  
  ::ProtoMsg::LoginRequest* temp = login_;
  login_ = NULL;
  return temp;
}
inline ::ProtoMsg::LoginRequest* Request::mutable_login() {
  
  if (login_ == NULL) {
    login_ = ::google::protobuf::Arena::Create< ::ProtoMsg::LoginRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.login)
  return login_;
}
inline void Request::set_allocated_login(::ProtoMsg::LoginRequest* login) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete login_;
  }
  if (login) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login, submessage_arena);
    }
    
  } else {
    
  }
  login_ = login;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.login)
}

// .ProtoMsg.LogoutRequest logout = 2;
inline bool Request::has_logout() const {
  return this != internal_default_instance() && logout_ != NULL;
}
inline void Request::clear_logout() {
  if (GetArenaNoVirtual() == NULL && logout_ != NULL) {
    delete logout_;
  }
  logout_ = NULL;
}
inline const ::ProtoMsg::LogoutRequest& Request::logout() const {
  const ::ProtoMsg::LogoutRequest* p = logout_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.logout)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::LogoutRequest*>(
      &::ProtoMsg::_LogoutRequest_default_instance_);
}
inline ::ProtoMsg::LogoutRequest* Request::release_logout() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.logout)
  
  ::ProtoMsg::LogoutRequest* temp = logout_;
  logout_ = NULL;
  return temp;
}
inline ::ProtoMsg::LogoutRequest* Request::mutable_logout() {
  
  if (logout_ == NULL) {
    logout_ = ::google::protobuf::Arena::Create< ::ProtoMsg::LogoutRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.logout)
  return logout_;
}
inline void Request::set_allocated_logout(::ProtoMsg::LogoutRequest* logout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logout_;
  }
  if (logout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logout, submessage_arena);
    }
    
  } else {
    
  }
  logout_ = logout;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.logout)
}

// .ProtoMsg.RegisterResquest register = 3;
inline bool Request::has_register_() const {
  return this != internal_default_instance() && register__ != NULL;
}
inline void Request::clear_register_() {
  if (GetArenaNoVirtual() == NULL && register__ != NULL) {
    delete register__;
  }
  register__ = NULL;
}
inline const ::ProtoMsg::RegisterResquest& Request::register_() const {
  const ::ProtoMsg::RegisterResquest* p = register__;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.register)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::RegisterResquest*>(
      &::ProtoMsg::_RegisterResquest_default_instance_);
}
inline ::ProtoMsg::RegisterResquest* Request::release_register_() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.register)
  
  ::ProtoMsg::RegisterResquest* temp = register__;
  register__ = NULL;
  return temp;
}
inline ::ProtoMsg::RegisterResquest* Request::mutable_register_() {
  
  if (register__ == NULL) {
    register__ = ::google::protobuf::Arena::Create< ::ProtoMsg::RegisterResquest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.register)
  return register__;
}
inline void Request::set_allocated_register_(::ProtoMsg::RegisterResquest* register_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete register__;
  }
  if (register_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      register_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, register_, submessage_arena);
    }
    
  } else {
    
  }
  register__ = register_;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.register)
}

// .ProtoMsg.EchoRequest echo = 4;
inline bool Request::has_echo() const {
  return this != internal_default_instance() && echo_ != NULL;
}
inline void Request::clear_echo() {
  if (GetArenaNoVirtual() == NULL && echo_ != NULL) {
    delete echo_;
  }
  echo_ = NULL;
}
inline const ::ProtoMsg::EchoRequest& Request::echo() const {
  const ::ProtoMsg::EchoRequest* p = echo_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.echo)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::EchoRequest*>(
      &::ProtoMsg::_EchoRequest_default_instance_);
}
inline ::ProtoMsg::EchoRequest* Request::release_echo() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.echo)
  
  ::ProtoMsg::EchoRequest* temp = echo_;
  echo_ = NULL;
  return temp;
}
inline ::ProtoMsg::EchoRequest* Request::mutable_echo() {
  
  if (echo_ == NULL) {
    echo_ = ::google::protobuf::Arena::Create< ::ProtoMsg::EchoRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.echo)
  return echo_;
}
inline void Request::set_allocated_echo(::ProtoMsg::EchoRequest* echo) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete echo_;
  }
  if (echo) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      echo = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, echo, submessage_arena);
    }
    
  } else {
    
  }
  echo_ = echo;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.echo)
}

// .ProtoMsg.CubeOperateRequest cube_operate = 5;
inline bool Request::has_cube_operate() const {
  return this != internal_default_instance() && cube_operate_ != NULL;
}
inline void Request::clear_cube_operate() {
  if (GetArenaNoVirtual() == NULL && cube_operate_ != NULL) {
    delete cube_operate_;
  }
  cube_operate_ = NULL;
}
inline const ::ProtoMsg::CubeOperateRequest& Request::cube_operate() const {
  const ::ProtoMsg::CubeOperateRequest* p = cube_operate_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.cube_operate)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::CubeOperateRequest*>(
      &::ProtoMsg::_CubeOperateRequest_default_instance_);
}
inline ::ProtoMsg::CubeOperateRequest* Request::release_cube_operate() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.cube_operate)
  
  ::ProtoMsg::CubeOperateRequest* temp = cube_operate_;
  cube_operate_ = NULL;
  return temp;
}
inline ::ProtoMsg::CubeOperateRequest* Request::mutable_cube_operate() {
  
  if (cube_operate_ == NULL) {
    cube_operate_ = ::google::protobuf::Arena::Create< ::ProtoMsg::CubeOperateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.cube_operate)
  return cube_operate_;
}
inline void Request::set_allocated_cube_operate(::ProtoMsg::CubeOperateRequest* cube_operate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cube_operate_;
  }
  if (cube_operate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cube_operate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cube_operate, submessage_arena);
    }
    
  } else {
    
  }
  cube_operate_ = cube_operate;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.cube_operate)
}

// .ProtoMsg.SceneChangeCompleteRequest scene_change_complete = 6;
inline bool Request::has_scene_change_complete() const {
  return this != internal_default_instance() && scene_change_complete_ != NULL;
}
inline void Request::clear_scene_change_complete() {
  if (GetArenaNoVirtual() == NULL && scene_change_complete_ != NULL) {
    delete scene_change_complete_;
  }
  scene_change_complete_ = NULL;
}
inline const ::ProtoMsg::SceneChangeCompleteRequest& Request::scene_change_complete() const {
  const ::ProtoMsg::SceneChangeCompleteRequest* p = scene_change_complete_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.scene_change_complete)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::SceneChangeCompleteRequest*>(
      &::ProtoMsg::_SceneChangeCompleteRequest_default_instance_);
}
inline ::ProtoMsg::SceneChangeCompleteRequest* Request::release_scene_change_complete() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.scene_change_complete)
  
  ::ProtoMsg::SceneChangeCompleteRequest* temp = scene_change_complete_;
  scene_change_complete_ = NULL;
  return temp;
}
inline ::ProtoMsg::SceneChangeCompleteRequest* Request::mutable_scene_change_complete() {
  
  if (scene_change_complete_ == NULL) {
    scene_change_complete_ = ::google::protobuf::Arena::Create< ::ProtoMsg::SceneChangeCompleteRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.scene_change_complete)
  return scene_change_complete_;
}
inline void Request::set_allocated_scene_change_complete(::ProtoMsg::SceneChangeCompleteRequest* scene_change_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scene_change_complete_;
  }
  if (scene_change_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scene_change_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scene_change_complete, submessage_arena);
    }
    
  } else {
    
  }
  scene_change_complete_ = scene_change_complete;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.scene_change_complete)
}

// .ProtoMsg.MatchBeginRequest match_begin = 7;
inline bool Request::has_match_begin() const {
  return this != internal_default_instance() && match_begin_ != NULL;
}
inline void Request::clear_match_begin() {
  if (GetArenaNoVirtual() == NULL && match_begin_ != NULL) {
    delete match_begin_;
  }
  match_begin_ = NULL;
}
inline const ::ProtoMsg::MatchBeginRequest& Request::match_begin() const {
  const ::ProtoMsg::MatchBeginRequest* p = match_begin_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.match_begin)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MatchBeginRequest*>(
      &::ProtoMsg::_MatchBeginRequest_default_instance_);
}
inline ::ProtoMsg::MatchBeginRequest* Request::release_match_begin() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.match_begin)
  
  ::ProtoMsg::MatchBeginRequest* temp = match_begin_;
  match_begin_ = NULL;
  return temp;
}
inline ::ProtoMsg::MatchBeginRequest* Request::mutable_match_begin() {
  
  if (match_begin_ == NULL) {
    match_begin_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MatchBeginRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.match_begin)
  return match_begin_;
}
inline void Request::set_allocated_match_begin(::ProtoMsg::MatchBeginRequest* match_begin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete match_begin_;
  }
  if (match_begin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_begin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_begin, submessage_arena);
    }
    
  } else {
    
  }
  match_begin_ = match_begin;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.match_begin)
}

// .ProtoMsg.MatchCompleteRequest match_complete = 8;
inline bool Request::has_match_complete() const {
  return this != internal_default_instance() && match_complete_ != NULL;
}
inline void Request::clear_match_complete() {
  if (GetArenaNoVirtual() == NULL && match_complete_ != NULL) {
    delete match_complete_;
  }
  match_complete_ = NULL;
}
inline const ::ProtoMsg::MatchCompleteRequest& Request::match_complete() const {
  const ::ProtoMsg::MatchCompleteRequest* p = match_complete_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.match_complete)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MatchCompleteRequest*>(
      &::ProtoMsg::_MatchCompleteRequest_default_instance_);
}
inline ::ProtoMsg::MatchCompleteRequest* Request::release_match_complete() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.match_complete)
  
  ::ProtoMsg::MatchCompleteRequest* temp = match_complete_;
  match_complete_ = NULL;
  return temp;
}
inline ::ProtoMsg::MatchCompleteRequest* Request::mutable_match_complete() {
  
  if (match_complete_ == NULL) {
    match_complete_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MatchCompleteRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.match_complete)
  return match_complete_;
}
inline void Request::set_allocated_match_complete(::ProtoMsg::MatchCompleteRequest* match_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete match_complete_;
  }
  if (match_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_complete, submessage_arena);
    }
    
  } else {
    
  }
  match_complete_ = match_complete;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.match_complete)
}

// .ProtoMsg.MatchCancelRequest match_cancel = 9;
inline bool Request::has_match_cancel() const {
  return this != internal_default_instance() && match_cancel_ != NULL;
}
inline void Request::clear_match_cancel() {
  if (GetArenaNoVirtual() == NULL && match_cancel_ != NULL) {
    delete match_cancel_;
  }
  match_cancel_ = NULL;
}
inline const ::ProtoMsg::MatchCancelRequest& Request::match_cancel() const {
  const ::ProtoMsg::MatchCancelRequest* p = match_cancel_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.match_cancel)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MatchCancelRequest*>(
      &::ProtoMsg::_MatchCancelRequest_default_instance_);
}
inline ::ProtoMsg::MatchCancelRequest* Request::release_match_cancel() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.match_cancel)
  
  ::ProtoMsg::MatchCancelRequest* temp = match_cancel_;
  match_cancel_ = NULL;
  return temp;
}
inline ::ProtoMsg::MatchCancelRequest* Request::mutable_match_cancel() {
  
  if (match_cancel_ == NULL) {
    match_cancel_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MatchCancelRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.match_cancel)
  return match_cancel_;
}
inline void Request::set_allocated_match_cancel(::ProtoMsg::MatchCancelRequest* match_cancel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete match_cancel_;
  }
  if (match_cancel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_cancel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_cancel, submessage_arena);
    }
    
  } else {
    
  }
  match_cancel_ = match_cancel;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.match_cancel)
}

// .ProtoMsg.PlaneOperateRequest plane_operate = 10;
inline bool Request::has_plane_operate() const {
  return this != internal_default_instance() && plane_operate_ != NULL;
}
inline void Request::clear_plane_operate() {
  if (GetArenaNoVirtual() == NULL && plane_operate_ != NULL) {
    delete plane_operate_;
  }
  plane_operate_ = NULL;
}
inline const ::ProtoMsg::PlaneOperateRequest& Request::plane_operate() const {
  const ::ProtoMsg::PlaneOperateRequest* p = plane_operate_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.plane_operate)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::PlaneOperateRequest*>(
      &::ProtoMsg::_PlaneOperateRequest_default_instance_);
}
inline ::ProtoMsg::PlaneOperateRequest* Request::release_plane_operate() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.plane_operate)
  
  ::ProtoMsg::PlaneOperateRequest* temp = plane_operate_;
  plane_operate_ = NULL;
  return temp;
}
inline ::ProtoMsg::PlaneOperateRequest* Request::mutable_plane_operate() {
  
  if (plane_operate_ == NULL) {
    plane_operate_ = ::google::protobuf::Arena::Create< ::ProtoMsg::PlaneOperateRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.plane_operate)
  return plane_operate_;
}
inline void Request::set_allocated_plane_operate(::ProtoMsg::PlaneOperateRequest* plane_operate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete plane_operate_;
  }
  if (plane_operate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plane_operate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plane_operate, submessage_arena);
    }
    
  } else {
    
  }
  plane_operate_ = plane_operate;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.plane_operate)
}

// .ProtoMsg.ExitSceneRequest exit_scene = 11;
inline bool Request::has_exit_scene() const {
  return this != internal_default_instance() && exit_scene_ != NULL;
}
inline void Request::clear_exit_scene() {
  if (GetArenaNoVirtual() == NULL && exit_scene_ != NULL) {
    delete exit_scene_;
  }
  exit_scene_ = NULL;
}
inline const ::ProtoMsg::ExitSceneRequest& Request::exit_scene() const {
  const ::ProtoMsg::ExitSceneRequest* p = exit_scene_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.exit_scene)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::ExitSceneRequest*>(
      &::ProtoMsg::_ExitSceneRequest_default_instance_);
}
inline ::ProtoMsg::ExitSceneRequest* Request::release_exit_scene() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.exit_scene)
  
  ::ProtoMsg::ExitSceneRequest* temp = exit_scene_;
  exit_scene_ = NULL;
  return temp;
}
inline ::ProtoMsg::ExitSceneRequest* Request::mutable_exit_scene() {
  
  if (exit_scene_ == NULL) {
    exit_scene_ = ::google::protobuf::Arena::Create< ::ProtoMsg::ExitSceneRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.exit_scene)
  return exit_scene_;
}
inline void Request::set_allocated_exit_scene(::ProtoMsg::ExitSceneRequest* exit_scene) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exit_scene_;
  }
  if (exit_scene) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exit_scene = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exit_scene, submessage_arena);
    }
    
  } else {
    
  }
  exit_scene_ = exit_scene;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.exit_scene)
}

// .ProtoMsg.TimeSyncRequest time_sync = 12;
inline bool Request::has_time_sync() const {
  return this != internal_default_instance() && time_sync_ != NULL;
}
inline void Request::clear_time_sync() {
  if (GetArenaNoVirtual() == NULL && time_sync_ != NULL) {
    delete time_sync_;
  }
  time_sync_ = NULL;
}
inline const ::ProtoMsg::TimeSyncRequest& Request::time_sync() const {
  const ::ProtoMsg::TimeSyncRequest* p = time_sync_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.time_sync)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::TimeSyncRequest*>(
      &::ProtoMsg::_TimeSyncRequest_default_instance_);
}
inline ::ProtoMsg::TimeSyncRequest* Request::release_time_sync() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.time_sync)
  
  ::ProtoMsg::TimeSyncRequest* temp = time_sync_;
  time_sync_ = NULL;
  return temp;
}
inline ::ProtoMsg::TimeSyncRequest* Request::mutable_time_sync() {
  
  if (time_sync_ == NULL) {
    time_sync_ = ::google::protobuf::Arena::Create< ::ProtoMsg::TimeSyncRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.time_sync)
  return time_sync_;
}
inline void Request::set_allocated_time_sync(::ProtoMsg::TimeSyncRequest* time_sync) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_sync_;
  }
  if (time_sync) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_sync = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_sync, submessage_arena);
    }
    
  } else {
    
  }
  time_sync_ = time_sync;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.time_sync)
}

// .ProtoMsg.PlaneDestroyRequest plane_destroy = 13;
inline bool Request::has_plane_destroy() const {
  return this != internal_default_instance() && plane_destroy_ != NULL;
}
inline void Request::clear_plane_destroy() {
  if (GetArenaNoVirtual() == NULL && plane_destroy_ != NULL) {
    delete plane_destroy_;
  }
  plane_destroy_ = NULL;
}
inline const ::ProtoMsg::PlaneDestroyRequest& Request::plane_destroy() const {
  const ::ProtoMsg::PlaneDestroyRequest* p = plane_destroy_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Request.plane_destroy)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::PlaneDestroyRequest*>(
      &::ProtoMsg::_PlaneDestroyRequest_default_instance_);
}
inline ::ProtoMsg::PlaneDestroyRequest* Request::release_plane_destroy() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Request.plane_destroy)
  
  ::ProtoMsg::PlaneDestroyRequest* temp = plane_destroy_;
  plane_destroy_ = NULL;
  return temp;
}
inline ::ProtoMsg::PlaneDestroyRequest* Request::mutable_plane_destroy() {
  
  if (plane_destroy_ == NULL) {
    plane_destroy_ = ::google::protobuf::Arena::Create< ::ProtoMsg::PlaneDestroyRequest >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Request.plane_destroy)
  return plane_destroy_;
}
inline void Request::set_allocated_plane_destroy(::ProtoMsg::PlaneDestroyRequest* plane_destroy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete plane_destroy_;
  }
  if (plane_destroy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plane_destroy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plane_destroy, submessage_arena);
    }
    
  } else {
    
  }
  plane_destroy_ = plane_destroy;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Request.plane_destroy)
}

// -------------------------------------------------------------------

// Response

// .ProtoMsg.LoginResponse login = 1;
inline bool Response::has_login() const {
  return this != internal_default_instance() && login_ != NULL;
}
inline void Response::clear_login() {
  if (GetArenaNoVirtual() == NULL && login_ != NULL) {
    delete login_;
  }
  login_ = NULL;
}
inline const ::ProtoMsg::LoginResponse& Response::login() const {
  const ::ProtoMsg::LoginResponse* p = login_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.login)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::LoginResponse*>(
      &::ProtoMsg::_LoginResponse_default_instance_);
}
inline ::ProtoMsg::LoginResponse* Response::release_login() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.login)
  
  ::ProtoMsg::LoginResponse* temp = login_;
  login_ = NULL;
  return temp;
}
inline ::ProtoMsg::LoginResponse* Response::mutable_login() {
  
  if (login_ == NULL) {
    login_ = ::google::protobuf::Arena::Create< ::ProtoMsg::LoginResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.login)
  return login_;
}
inline void Response::set_allocated_login(::ProtoMsg::LoginResponse* login) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete login_;
  }
  if (login) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login, submessage_arena);
    }
    
  } else {
    
  }
  login_ = login;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.login)
}

// .ProtoMsg.LogoutResponse logout = 2;
inline bool Response::has_logout() const {
  return this != internal_default_instance() && logout_ != NULL;
}
inline void Response::clear_logout() {
  if (GetArenaNoVirtual() == NULL && logout_ != NULL) {
    delete logout_;
  }
  logout_ = NULL;
}
inline const ::ProtoMsg::LogoutResponse& Response::logout() const {
  const ::ProtoMsg::LogoutResponse* p = logout_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.logout)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::LogoutResponse*>(
      &::ProtoMsg::_LogoutResponse_default_instance_);
}
inline ::ProtoMsg::LogoutResponse* Response::release_logout() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.logout)
  
  ::ProtoMsg::LogoutResponse* temp = logout_;
  logout_ = NULL;
  return temp;
}
inline ::ProtoMsg::LogoutResponse* Response::mutable_logout() {
  
  if (logout_ == NULL) {
    logout_ = ::google::protobuf::Arena::Create< ::ProtoMsg::LogoutResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.logout)
  return logout_;
}
inline void Response::set_allocated_logout(::ProtoMsg::LogoutResponse* logout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logout_;
  }
  if (logout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logout, submessage_arena);
    }
    
  } else {
    
  }
  logout_ = logout;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.logout)
}

// .ProtoMsg.RegisterResponse register = 3;
inline bool Response::has_register_() const {
  return this != internal_default_instance() && register__ != NULL;
}
inline void Response::clear_register_() {
  if (GetArenaNoVirtual() == NULL && register__ != NULL) {
    delete register__;
  }
  register__ = NULL;
}
inline const ::ProtoMsg::RegisterResponse& Response::register_() const {
  const ::ProtoMsg::RegisterResponse* p = register__;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.register)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::RegisterResponse*>(
      &::ProtoMsg::_RegisterResponse_default_instance_);
}
inline ::ProtoMsg::RegisterResponse* Response::release_register_() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.register)
  
  ::ProtoMsg::RegisterResponse* temp = register__;
  register__ = NULL;
  return temp;
}
inline ::ProtoMsg::RegisterResponse* Response::mutable_register_() {
  
  if (register__ == NULL) {
    register__ = ::google::protobuf::Arena::Create< ::ProtoMsg::RegisterResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.register)
  return register__;
}
inline void Response::set_allocated_register_(::ProtoMsg::RegisterResponse* register_) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete register__;
  }
  if (register_) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      register_ = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, register_, submessage_arena);
    }
    
  } else {
    
  }
  register__ = register_;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.register)
}

// .ProtoMsg.CubeOperateResponse cube_operate = 4;
inline bool Response::has_cube_operate() const {
  return this != internal_default_instance() && cube_operate_ != NULL;
}
inline void Response::clear_cube_operate() {
  if (GetArenaNoVirtual() == NULL && cube_operate_ != NULL) {
    delete cube_operate_;
  }
  cube_operate_ = NULL;
}
inline const ::ProtoMsg::CubeOperateResponse& Response::cube_operate() const {
  const ::ProtoMsg::CubeOperateResponse* p = cube_operate_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.cube_operate)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::CubeOperateResponse*>(
      &::ProtoMsg::_CubeOperateResponse_default_instance_);
}
inline ::ProtoMsg::CubeOperateResponse* Response::release_cube_operate() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.cube_operate)
  
  ::ProtoMsg::CubeOperateResponse* temp = cube_operate_;
  cube_operate_ = NULL;
  return temp;
}
inline ::ProtoMsg::CubeOperateResponse* Response::mutable_cube_operate() {
  
  if (cube_operate_ == NULL) {
    cube_operate_ = ::google::protobuf::Arena::Create< ::ProtoMsg::CubeOperateResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.cube_operate)
  return cube_operate_;
}
inline void Response::set_allocated_cube_operate(::ProtoMsg::CubeOperateResponse* cube_operate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cube_operate_;
  }
  if (cube_operate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cube_operate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cube_operate, submessage_arena);
    }
    
  } else {
    
  }
  cube_operate_ = cube_operate;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.cube_operate)
}

// .ProtoMsg.SceneChangeCompleteResponse scene_change_complete = 5;
inline bool Response::has_scene_change_complete() const {
  return this != internal_default_instance() && scene_change_complete_ != NULL;
}
inline void Response::clear_scene_change_complete() {
  if (GetArenaNoVirtual() == NULL && scene_change_complete_ != NULL) {
    delete scene_change_complete_;
  }
  scene_change_complete_ = NULL;
}
inline const ::ProtoMsg::SceneChangeCompleteResponse& Response::scene_change_complete() const {
  const ::ProtoMsg::SceneChangeCompleteResponse* p = scene_change_complete_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.scene_change_complete)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::SceneChangeCompleteResponse*>(
      &::ProtoMsg::_SceneChangeCompleteResponse_default_instance_);
}
inline ::ProtoMsg::SceneChangeCompleteResponse* Response::release_scene_change_complete() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.scene_change_complete)
  
  ::ProtoMsg::SceneChangeCompleteResponse* temp = scene_change_complete_;
  scene_change_complete_ = NULL;
  return temp;
}
inline ::ProtoMsg::SceneChangeCompleteResponse* Response::mutable_scene_change_complete() {
  
  if (scene_change_complete_ == NULL) {
    scene_change_complete_ = ::google::protobuf::Arena::Create< ::ProtoMsg::SceneChangeCompleteResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.scene_change_complete)
  return scene_change_complete_;
}
inline void Response::set_allocated_scene_change_complete(::ProtoMsg::SceneChangeCompleteResponse* scene_change_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete scene_change_complete_;
  }
  if (scene_change_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      scene_change_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, scene_change_complete, submessage_arena);
    }
    
  } else {
    
  }
  scene_change_complete_ = scene_change_complete;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.scene_change_complete)
}

// .ProtoMsg.CubeCreateResponse cube_create_response = 6;
inline bool Response::has_cube_create_response() const {
  return this != internal_default_instance() && cube_create_response_ != NULL;
}
inline void Response::clear_cube_create_response() {
  if (GetArenaNoVirtual() == NULL && cube_create_response_ != NULL) {
    delete cube_create_response_;
  }
  cube_create_response_ = NULL;
}
inline const ::ProtoMsg::CubeCreateResponse& Response::cube_create_response() const {
  const ::ProtoMsg::CubeCreateResponse* p = cube_create_response_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.cube_create_response)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::CubeCreateResponse*>(
      &::ProtoMsg::_CubeCreateResponse_default_instance_);
}
inline ::ProtoMsg::CubeCreateResponse* Response::release_cube_create_response() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.cube_create_response)
  
  ::ProtoMsg::CubeCreateResponse* temp = cube_create_response_;
  cube_create_response_ = NULL;
  return temp;
}
inline ::ProtoMsg::CubeCreateResponse* Response::mutable_cube_create_response() {
  
  if (cube_create_response_ == NULL) {
    cube_create_response_ = ::google::protobuf::Arena::Create< ::ProtoMsg::CubeCreateResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.cube_create_response)
  return cube_create_response_;
}
inline void Response::set_allocated_cube_create_response(::ProtoMsg::CubeCreateResponse* cube_create_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cube_create_response_;
  }
  if (cube_create_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cube_create_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cube_create_response, submessage_arena);
    }
    
  } else {
    
  }
  cube_create_response_ = cube_create_response;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.cube_create_response)
}

// .ProtoMsg.CubeDeleteResponse cube_delete_Response = 7;
inline bool Response::has_cube_delete_response() const {
  return this != internal_default_instance() && cube_delete_response_ != NULL;
}
inline void Response::clear_cube_delete_response() {
  if (GetArenaNoVirtual() == NULL && cube_delete_response_ != NULL) {
    delete cube_delete_response_;
  }
  cube_delete_response_ = NULL;
}
inline const ::ProtoMsg::CubeDeleteResponse& Response::cube_delete_response() const {
  const ::ProtoMsg::CubeDeleteResponse* p = cube_delete_response_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.cube_delete_Response)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::CubeDeleteResponse*>(
      &::ProtoMsg::_CubeDeleteResponse_default_instance_);
}
inline ::ProtoMsg::CubeDeleteResponse* Response::release_cube_delete_response() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.cube_delete_Response)
  
  ::ProtoMsg::CubeDeleteResponse* temp = cube_delete_response_;
  cube_delete_response_ = NULL;
  return temp;
}
inline ::ProtoMsg::CubeDeleteResponse* Response::mutable_cube_delete_response() {
  
  if (cube_delete_response_ == NULL) {
    cube_delete_response_ = ::google::protobuf::Arena::Create< ::ProtoMsg::CubeDeleteResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.cube_delete_Response)
  return cube_delete_response_;
}
inline void Response::set_allocated_cube_delete_response(::ProtoMsg::CubeDeleteResponse* cube_delete_response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cube_delete_response_;
  }
  if (cube_delete_response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cube_delete_response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cube_delete_response, submessage_arena);
    }
    
  } else {
    
  }
  cube_delete_response_ = cube_delete_response;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.cube_delete_Response)
}

// .ProtoMsg.MatchBeginResponse match_begin = 8;
inline bool Response::has_match_begin() const {
  return this != internal_default_instance() && match_begin_ != NULL;
}
inline void Response::clear_match_begin() {
  if (GetArenaNoVirtual() == NULL && match_begin_ != NULL) {
    delete match_begin_;
  }
  match_begin_ = NULL;
}
inline const ::ProtoMsg::MatchBeginResponse& Response::match_begin() const {
  const ::ProtoMsg::MatchBeginResponse* p = match_begin_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.match_begin)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MatchBeginResponse*>(
      &::ProtoMsg::_MatchBeginResponse_default_instance_);
}
inline ::ProtoMsg::MatchBeginResponse* Response::release_match_begin() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.match_begin)
  
  ::ProtoMsg::MatchBeginResponse* temp = match_begin_;
  match_begin_ = NULL;
  return temp;
}
inline ::ProtoMsg::MatchBeginResponse* Response::mutable_match_begin() {
  
  if (match_begin_ == NULL) {
    match_begin_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MatchBeginResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.match_begin)
  return match_begin_;
}
inline void Response::set_allocated_match_begin(::ProtoMsg::MatchBeginResponse* match_begin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete match_begin_;
  }
  if (match_begin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_begin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_begin, submessage_arena);
    }
    
  } else {
    
  }
  match_begin_ = match_begin;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.match_begin)
}

// .ProtoMsg.MatchCompleteResponse match_complete = 9;
inline bool Response::has_match_complete() const {
  return this != internal_default_instance() && match_complete_ != NULL;
}
inline void Response::clear_match_complete() {
  if (GetArenaNoVirtual() == NULL && match_complete_ != NULL) {
    delete match_complete_;
  }
  match_complete_ = NULL;
}
inline const ::ProtoMsg::MatchCompleteResponse& Response::match_complete() const {
  const ::ProtoMsg::MatchCompleteResponse* p = match_complete_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.match_complete)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MatchCompleteResponse*>(
      &::ProtoMsg::_MatchCompleteResponse_default_instance_);
}
inline ::ProtoMsg::MatchCompleteResponse* Response::release_match_complete() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.match_complete)
  
  ::ProtoMsg::MatchCompleteResponse* temp = match_complete_;
  match_complete_ = NULL;
  return temp;
}
inline ::ProtoMsg::MatchCompleteResponse* Response::mutable_match_complete() {
  
  if (match_complete_ == NULL) {
    match_complete_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MatchCompleteResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.match_complete)
  return match_complete_;
}
inline void Response::set_allocated_match_complete(::ProtoMsg::MatchCompleteResponse* match_complete) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete match_complete_;
  }
  if (match_complete) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_complete = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_complete, submessage_arena);
    }
    
  } else {
    
  }
  match_complete_ = match_complete;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.match_complete)
}

// .ProtoMsg.MatchCancelResponse match_cancel = 10;
inline bool Response::has_match_cancel() const {
  return this != internal_default_instance() && match_cancel_ != NULL;
}
inline void Response::clear_match_cancel() {
  if (GetArenaNoVirtual() == NULL && match_cancel_ != NULL) {
    delete match_cancel_;
  }
  match_cancel_ = NULL;
}
inline const ::ProtoMsg::MatchCancelResponse& Response::match_cancel() const {
  const ::ProtoMsg::MatchCancelResponse* p = match_cancel_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.match_cancel)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MatchCancelResponse*>(
      &::ProtoMsg::_MatchCancelResponse_default_instance_);
}
inline ::ProtoMsg::MatchCancelResponse* Response::release_match_cancel() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.match_cancel)
  
  ::ProtoMsg::MatchCancelResponse* temp = match_cancel_;
  match_cancel_ = NULL;
  return temp;
}
inline ::ProtoMsg::MatchCancelResponse* Response::mutable_match_cancel() {
  
  if (match_cancel_ == NULL) {
    match_cancel_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MatchCancelResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.match_cancel)
  return match_cancel_;
}
inline void Response::set_allocated_match_cancel(::ProtoMsg::MatchCancelResponse* match_cancel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete match_cancel_;
  }
  if (match_cancel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      match_cancel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, match_cancel, submessage_arena);
    }
    
  } else {
    
  }
  match_cancel_ = match_cancel;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.match_cancel)
}

// .ProtoMsg.PlaneOperateResponse plane_operate = 11;
inline bool Response::has_plane_operate() const {
  return this != internal_default_instance() && plane_operate_ != NULL;
}
inline void Response::clear_plane_operate() {
  if (GetArenaNoVirtual() == NULL && plane_operate_ != NULL) {
    delete plane_operate_;
  }
  plane_operate_ = NULL;
}
inline const ::ProtoMsg::PlaneOperateResponse& Response::plane_operate() const {
  const ::ProtoMsg::PlaneOperateResponse* p = plane_operate_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.plane_operate)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::PlaneOperateResponse*>(
      &::ProtoMsg::_PlaneOperateResponse_default_instance_);
}
inline ::ProtoMsg::PlaneOperateResponse* Response::release_plane_operate() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.plane_operate)
  
  ::ProtoMsg::PlaneOperateResponse* temp = plane_operate_;
  plane_operate_ = NULL;
  return temp;
}
inline ::ProtoMsg::PlaneOperateResponse* Response::mutable_plane_operate() {
  
  if (plane_operate_ == NULL) {
    plane_operate_ = ::google::protobuf::Arena::Create< ::ProtoMsg::PlaneOperateResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.plane_operate)
  return plane_operate_;
}
inline void Response::set_allocated_plane_operate(::ProtoMsg::PlaneOperateResponse* plane_operate) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete plane_operate_;
  }
  if (plane_operate) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plane_operate = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plane_operate, submessage_arena);
    }
    
  } else {
    
  }
  plane_operate_ = plane_operate;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.plane_operate)
}

// .ProtoMsg.WaveCreateResponse wave_create = 12;
inline bool Response::has_wave_create() const {
  return this != internal_default_instance() && wave_create_ != NULL;
}
inline void Response::clear_wave_create() {
  if (GetArenaNoVirtual() == NULL && wave_create_ != NULL) {
    delete wave_create_;
  }
  wave_create_ = NULL;
}
inline const ::ProtoMsg::WaveCreateResponse& Response::wave_create() const {
  const ::ProtoMsg::WaveCreateResponse* p = wave_create_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.wave_create)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::WaveCreateResponse*>(
      &::ProtoMsg::_WaveCreateResponse_default_instance_);
}
inline ::ProtoMsg::WaveCreateResponse* Response::release_wave_create() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.wave_create)
  
  ::ProtoMsg::WaveCreateResponse* temp = wave_create_;
  wave_create_ = NULL;
  return temp;
}
inline ::ProtoMsg::WaveCreateResponse* Response::mutable_wave_create() {
  
  if (wave_create_ == NULL) {
    wave_create_ = ::google::protobuf::Arena::Create< ::ProtoMsg::WaveCreateResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.wave_create)
  return wave_create_;
}
inline void Response::set_allocated_wave_create(::ProtoMsg::WaveCreateResponse* wave_create) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wave_create_;
  }
  if (wave_create) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wave_create = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wave_create, submessage_arena);
    }
    
  } else {
    
  }
  wave_create_ = wave_create;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.wave_create)
}

// .ProtoMsg.ExitSceneResponse exit_scene = 13;
inline bool Response::has_exit_scene() const {
  return this != internal_default_instance() && exit_scene_ != NULL;
}
inline void Response::clear_exit_scene() {
  if (GetArenaNoVirtual() == NULL && exit_scene_ != NULL) {
    delete exit_scene_;
  }
  exit_scene_ = NULL;
}
inline const ::ProtoMsg::ExitSceneResponse& Response::exit_scene() const {
  const ::ProtoMsg::ExitSceneResponse* p = exit_scene_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.exit_scene)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::ExitSceneResponse*>(
      &::ProtoMsg::_ExitSceneResponse_default_instance_);
}
inline ::ProtoMsg::ExitSceneResponse* Response::release_exit_scene() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.exit_scene)
  
  ::ProtoMsg::ExitSceneResponse* temp = exit_scene_;
  exit_scene_ = NULL;
  return temp;
}
inline ::ProtoMsg::ExitSceneResponse* Response::mutable_exit_scene() {
  
  if (exit_scene_ == NULL) {
    exit_scene_ = ::google::protobuf::Arena::Create< ::ProtoMsg::ExitSceneResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.exit_scene)
  return exit_scene_;
}
inline void Response::set_allocated_exit_scene(::ProtoMsg::ExitSceneResponse* exit_scene) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete exit_scene_;
  }
  if (exit_scene) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      exit_scene = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, exit_scene, submessage_arena);
    }
    
  } else {
    
  }
  exit_scene_ = exit_scene;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.exit_scene)
}

// .ProtoMsg.TimeSyncResponse time_sync = 14;
inline bool Response::has_time_sync() const {
  return this != internal_default_instance() && time_sync_ != NULL;
}
inline void Response::clear_time_sync() {
  if (GetArenaNoVirtual() == NULL && time_sync_ != NULL) {
    delete time_sync_;
  }
  time_sync_ = NULL;
}
inline const ::ProtoMsg::TimeSyncResponse& Response::time_sync() const {
  const ::ProtoMsg::TimeSyncResponse* p = time_sync_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.time_sync)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::TimeSyncResponse*>(
      &::ProtoMsg::_TimeSyncResponse_default_instance_);
}
inline ::ProtoMsg::TimeSyncResponse* Response::release_time_sync() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.time_sync)
  
  ::ProtoMsg::TimeSyncResponse* temp = time_sync_;
  time_sync_ = NULL;
  return temp;
}
inline ::ProtoMsg::TimeSyncResponse* Response::mutable_time_sync() {
  
  if (time_sync_ == NULL) {
    time_sync_ = ::google::protobuf::Arena::Create< ::ProtoMsg::TimeSyncResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.time_sync)
  return time_sync_;
}
inline void Response::set_allocated_time_sync(::ProtoMsg::TimeSyncResponse* time_sync) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete time_sync_;
  }
  if (time_sync) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_sync = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_sync, submessage_arena);
    }
    
  } else {
    
  }
  time_sync_ = time_sync;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.time_sync)
}

// .ProtoMsg.PlaneDestroyResponse plane_destroy = 15;
inline bool Response::has_plane_destroy() const {
  return this != internal_default_instance() && plane_destroy_ != NULL;
}
inline void Response::clear_plane_destroy() {
  if (GetArenaNoVirtual() == NULL && plane_destroy_ != NULL) {
    delete plane_destroy_;
  }
  plane_destroy_ = NULL;
}
inline const ::ProtoMsg::PlaneDestroyResponse& Response::plane_destroy() const {
  const ::ProtoMsg::PlaneDestroyResponse* p = plane_destroy_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Response.plane_destroy)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::PlaneDestroyResponse*>(
      &::ProtoMsg::_PlaneDestroyResponse_default_instance_);
}
inline ::ProtoMsg::PlaneDestroyResponse* Response::release_plane_destroy() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Response.plane_destroy)
  
  ::ProtoMsg::PlaneDestroyResponse* temp = plane_destroy_;
  plane_destroy_ = NULL;
  return temp;
}
inline ::ProtoMsg::PlaneDestroyResponse* Response::mutable_plane_destroy() {
  
  if (plane_destroy_ == NULL) {
    plane_destroy_ = ::google::protobuf::Arena::Create< ::ProtoMsg::PlaneDestroyResponse >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Response.plane_destroy)
  return plane_destroy_;
}
inline void Response::set_allocated_plane_destroy(::ProtoMsg::PlaneDestroyResponse* plane_destroy) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete plane_destroy_;
  }
  if (plane_destroy) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      plane_destroy = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, plane_destroy, submessage_arena);
    }
    
  } else {
    
  }
  plane_destroy_ = plane_destroy;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Response.plane_destroy)
}

// -------------------------------------------------------------------

// Notification

// .ProtoMsg.MessageNofification message = 1;
inline bool Notification::has_message() const {
  return this != internal_default_instance() && message_ != NULL;
}
inline void Notification::clear_message() {
  if (GetArenaNoVirtual() == NULL && message_ != NULL) {
    delete message_;
  }
  message_ = NULL;
}
inline const ::ProtoMsg::MessageNofification& Notification::message() const {
  const ::ProtoMsg::MessageNofification* p = message_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Notification.message)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::MessageNofification*>(
      &::ProtoMsg::_MessageNofification_default_instance_);
}
inline ::ProtoMsg::MessageNofification* Notification::release_message() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Notification.message)
  
  ::ProtoMsg::MessageNofification* temp = message_;
  message_ = NULL;
  return temp;
}
inline ::ProtoMsg::MessageNofification* Notification::mutable_message() {
  
  if (message_ == NULL) {
    message_ = ::google::protobuf::Arena::Create< ::ProtoMsg::MessageNofification >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Notification.message)
  return message_;
}
inline void Notification::set_allocated_message(::ProtoMsg::MessageNofification* message) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete message_;
  }
  if (message) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, message, submessage_arena);
    }
    
  } else {
    
  }
  message_ = message;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Notification.message)
}

// .ProtoMsg.WelcomeNotification welcome = 2;
inline bool Notification::has_welcome() const {
  return this != internal_default_instance() && welcome_ != NULL;
}
inline void Notification::clear_welcome() {
  if (GetArenaNoVirtual() == NULL && welcome_ != NULL) {
    delete welcome_;
  }
  welcome_ = NULL;
}
inline const ::ProtoMsg::WelcomeNotification& Notification::welcome() const {
  const ::ProtoMsg::WelcomeNotification* p = welcome_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Notification.welcome)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::WelcomeNotification*>(
      &::ProtoMsg::_WelcomeNotification_default_instance_);
}
inline ::ProtoMsg::WelcomeNotification* Notification::release_welcome() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Notification.welcome)
  
  ::ProtoMsg::WelcomeNotification* temp = welcome_;
  welcome_ = NULL;
  return temp;
}
inline ::ProtoMsg::WelcomeNotification* Notification::mutable_welcome() {
  
  if (welcome_ == NULL) {
    welcome_ = ::google::protobuf::Arena::Create< ::ProtoMsg::WelcomeNotification >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Notification.welcome)
  return welcome_;
}
inline void Notification::set_allocated_welcome(::ProtoMsg::WelcomeNotification* welcome) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete welcome_;
  }
  if (welcome) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      welcome = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, welcome, submessage_arena);
    }
    
  } else {
    
  }
  welcome_ = welcome;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Notification.welcome)
}

// .ProtoMsg.OtherClientNotification other_client = 3;
inline bool Notification::has_other_client() const {
  return this != internal_default_instance() && other_client_ != NULL;
}
inline void Notification::clear_other_client() {
  if (GetArenaNoVirtual() == NULL && other_client_ != NULL) {
    delete other_client_;
  }
  other_client_ = NULL;
}
inline const ::ProtoMsg::OtherClientNotification& Notification::other_client() const {
  const ::ProtoMsg::OtherClientNotification* p = other_client_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Notification.other_client)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::OtherClientNotification*>(
      &::ProtoMsg::_OtherClientNotification_default_instance_);
}
inline ::ProtoMsg::OtherClientNotification* Notification::release_other_client() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Notification.other_client)
  
  ::ProtoMsg::OtherClientNotification* temp = other_client_;
  other_client_ = NULL;
  return temp;
}
inline ::ProtoMsg::OtherClientNotification* Notification::mutable_other_client() {
  
  if (other_client_ == NULL) {
    other_client_ = ::google::protobuf::Arena::Create< ::ProtoMsg::OtherClientNotification >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Notification.other_client)
  return other_client_;
}
inline void Notification::set_allocated_other_client(::ProtoMsg::OtherClientNotification* other_client) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete other_client_;
  }
  if (other_client) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      other_client = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, other_client, submessage_arena);
    }
    
  } else {
    
  }
  other_client_ = other_client;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Notification.other_client)
}

// -------------------------------------------------------------------

// Command

// -------------------------------------------------------------------

// Message

// .ProtoMsg.MSG msg_type = 1;
inline void Message::clear_msg_type() {
  msg_type_ = 0;
}
inline ::ProtoMsg::MSG Message::msg_type() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.msg_type)
  return static_cast< ::ProtoMsg::MSG >(msg_type_);
}
inline void Message::set_msg_type(::ProtoMsg::MSG value) {
  
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.Message.msg_type)
}

// fixed32 userid = 2;
inline void Message::clear_userid() {
  userid_ = 0u;
}
inline ::google::protobuf::uint32 Message::userid() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.userid)
  return userid_;
}
inline void Message::set_userid(::google::protobuf::uint32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.Message.userid)
}

// fixed32 sequence = 3;
inline void Message::clear_sequence() {
  sequence_ = 0u;
}
inline ::google::protobuf::uint32 Message::sequence() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.sequence)
  return sequence_;
}
inline void Message::set_sequence(::google::protobuf::uint32 value) {
  
  sequence_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.Message.sequence)
}

// fixed32 session_id = 4;
inline void Message::clear_session_id() {
  session_id_ = 0u;
}
inline ::google::protobuf::uint32 Message::session_id() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.session_id)
  return session_id_;
}
inline void Message::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.Message.session_id)
}

// int64 timestamp_ms = 5;
inline void Message::clear_timestamp_ms() {
  timestamp_ms_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 Message::timestamp_ms() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.timestamp_ms)
  return timestamp_ms_;
}
inline void Message::set_timestamp_ms(::google::protobuf::int64 value) {
  
  timestamp_ms_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.Message.timestamp_ms)
}

// .ProtoMsg.Request request = 6;
inline bool Message::has_request() const {
  return this != internal_default_instance() && request_ != NULL;
}
inline void Message::clear_request() {
  if (GetArenaNoVirtual() == NULL && request_ != NULL) {
    delete request_;
  }
  request_ = NULL;
}
inline const ::ProtoMsg::Request& Message::request() const {
  const ::ProtoMsg::Request* p = request_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.request)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::Request*>(
      &::ProtoMsg::_Request_default_instance_);
}
inline ::ProtoMsg::Request* Message::release_request() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Message.request)
  
  ::ProtoMsg::Request* temp = request_;
  request_ = NULL;
  return temp;
}
inline ::ProtoMsg::Request* Message::mutable_request() {
  
  if (request_ == NULL) {
    request_ = ::google::protobuf::Arena::Create< ::ProtoMsg::Request >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Message.request)
  return request_;
}
inline void Message::set_allocated_request(::ProtoMsg::Request* request) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete request_;
  }
  if (request) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      request = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request, submessage_arena);
    }
    
  } else {
    
  }
  request_ = request;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Message.request)
}

// .ProtoMsg.Response response = 7;
inline bool Message::has_response() const {
  return this != internal_default_instance() && response_ != NULL;
}
inline void Message::clear_response() {
  if (GetArenaNoVirtual() == NULL && response_ != NULL) {
    delete response_;
  }
  response_ = NULL;
}
inline const ::ProtoMsg::Response& Message::response() const {
  const ::ProtoMsg::Response* p = response_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.response)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::Response*>(
      &::ProtoMsg::_Response_default_instance_);
}
inline ::ProtoMsg::Response* Message::release_response() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Message.response)
  
  ::ProtoMsg::Response* temp = response_;
  response_ = NULL;
  return temp;
}
inline ::ProtoMsg::Response* Message::mutable_response() {
  
  if (response_ == NULL) {
    response_ = ::google::protobuf::Arena::Create< ::ProtoMsg::Response >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Message.response)
  return response_;
}
inline void Message::set_allocated_response(::ProtoMsg::Response* response) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete response_;
  }
  if (response) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      response = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, response, submessage_arena);
    }
    
  } else {
    
  }
  response_ = response;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Message.response)
}

// .ProtoMsg.Notification notification = 8;
inline bool Message::has_notification() const {
  return this != internal_default_instance() && notification_ != NULL;
}
inline void Message::clear_notification() {
  if (GetArenaNoVirtual() == NULL && notification_ != NULL) {
    delete notification_;
  }
  notification_ = NULL;
}
inline const ::ProtoMsg::Notification& Message::notification() const {
  const ::ProtoMsg::Notification* p = notification_;
  // @@protoc_insertion_point(field_get:ProtoMsg.Message.notification)
  return p != NULL ? *p : *reinterpret_cast<const ::ProtoMsg::Notification*>(
      &::ProtoMsg::_Notification_default_instance_);
}
inline ::ProtoMsg::Notification* Message::release_notification() {
  // @@protoc_insertion_point(field_release:ProtoMsg.Message.notification)
  
  ::ProtoMsg::Notification* temp = notification_;
  notification_ = NULL;
  return temp;
}
inline ::ProtoMsg::Notification* Message::mutable_notification() {
  
  if (notification_ == NULL) {
    notification_ = ::google::protobuf::Arena::Create< ::ProtoMsg::Notification >(
        GetArenaNoVirtual());
  }
  // @@protoc_insertion_point(field_mutable:ProtoMsg.Message.notification)
  return notification_;
}
inline void Message::set_allocated_notification(::ProtoMsg::Notification* notification) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete notification_;
  }
  if (notification) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      notification = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, notification, submessage_arena);
    }
    
  } else {
    
  }
  notification_ = notification;
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.Message.notification)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::ProtoMsg::MSG> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::ProtoMsg::MSG>() {
  return ::ProtoMsg::MSG_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Message_2eproto_INCLUDED
